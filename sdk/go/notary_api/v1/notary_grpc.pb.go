// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NotaryClient is the client API for Notary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NotaryClient interface {
}

type notaryClient struct {
	cc grpc.ClientConnInterface
}

func NewNotaryClient(cc grpc.ClientConnInterface) NotaryClient {
	return &notaryClient{cc}
}

// NotaryServer is the server API for Notary service.
// All implementations must embed UnimplementedNotaryServer
// for forward compatibility
type NotaryServer interface {
	mustEmbedUnimplementedNotaryServer()
}

// UnimplementedNotaryServer must be embedded to have forward compatible implementations.
type UnimplementedNotaryServer struct {
}

func (UnimplementedNotaryServer) mustEmbedUnimplementedNotaryServer() {}

// UnsafeNotaryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NotaryServer will
// result in compilation errors.
type UnsafeNotaryServer interface {
	mustEmbedUnimplementedNotaryServer()
}

func RegisterNotaryServer(s grpc.ServiceRegistrar, srv NotaryServer) {
	s.RegisterService(&Notary_ServiceDesc, srv)
}

// Notary_ServiceDesc is the grpc.ServiceDesc for Notary service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Notary_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "notary.Notary",
	HandlerType: (*NotaryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "notary_api/v1/notary.proto",
}
