// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: registry_api/v1/registry.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResolutionOptionAccept int32

const (
	ResolutionOptionAccept_RESOLUTION_OPTION_ACCEPT_UNSPECIFIED ResolutionOptionAccept = 0
	ResolutionOptionAccept_RESOLUTION_OPTION_ACCEPT_JSON_LD     ResolutionOptionAccept = 1
)

// Enum value maps for ResolutionOptionAccept.
var (
	ResolutionOptionAccept_name = map[int32]string{
		0: "RESOLUTION_OPTION_ACCEPT_UNSPECIFIED",
		1: "RESOLUTION_OPTION_ACCEPT_JSON_LD",
	}
	ResolutionOptionAccept_value = map[string]int32{
		"RESOLUTION_OPTION_ACCEPT_UNSPECIFIED": 0,
		"RESOLUTION_OPTION_ACCEPT_JSON_LD":     1,
	}
)

func (x ResolutionOptionAccept) Enum() *ResolutionOptionAccept {
	p := new(ResolutionOptionAccept)
	*p = x
	return p
}

func (x ResolutionOptionAccept) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResolutionOptionAccept) Descriptor() protoreflect.EnumDescriptor {
	return file_registry_api_v1_registry_proto_enumTypes[0].Descriptor()
}

func (ResolutionOptionAccept) Type() protoreflect.EnumType {
	return &file_registry_api_v1_registry_proto_enumTypes[0]
}

func (x ResolutionOptionAccept) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResolutionOptionAccept.Descriptor instead.
func (ResolutionOptionAccept) EnumDescriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{0}
}

type IssuerStatus int32

const (
	IssuerStatus_ISSUER_STATUS_UNSPECIFIED IssuerStatus = 0
	IssuerStatus_ISSUER_STATUS_ACTIVE      IssuerStatus = 1
	IssuerStatus_ISSUER_STATUS_SUSPENDED   IssuerStatus = 2
)

// Enum value maps for IssuerStatus.
var (
	IssuerStatus_name = map[int32]string{
		0: "ISSUER_STATUS_UNSPECIFIED",
		1: "ISSUER_STATUS_ACTIVE",
		2: "ISSUER_STATUS_SUSPENDED",
	}
	IssuerStatus_value = map[string]int32{
		"ISSUER_STATUS_UNSPECIFIED": 0,
		"ISSUER_STATUS_ACTIVE":      1,
		"ISSUER_STATUS_SUSPENDED":   2,
	}
)

func (x IssuerStatus) Enum() *IssuerStatus {
	p := new(IssuerStatus)
	*p = x
	return p
}

func (x IssuerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IssuerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_registry_api_v1_registry_proto_enumTypes[1].Descriptor()
}

func (IssuerStatus) Type() protoreflect.EnumType {
	return &file_registry_api_v1_registry_proto_enumTypes[1]
}

func (x IssuerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IssuerStatus.Descriptor instead.
func (IssuerStatus) EnumDescriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{1}
}

type StatusPurpose int32

const (
	StatusPurpose_STATUS_PURPOSE_UNSPECIFIED StatusPurpose = 0
	StatusPurpose_STATUS_PURPOSE_REVOCATION  StatusPurpose = 1
	StatusPurpose_STATUS_PURPOSE_SUSPENSION  StatusPurpose = 2
)

// Enum value maps for StatusPurpose.
var (
	StatusPurpose_name = map[int32]string{
		0: "STATUS_PURPOSE_UNSPECIFIED",
		1: "STATUS_PURPOSE_REVOCATION",
		2: "STATUS_PURPOSE_SUSPENSION",
	}
	StatusPurpose_value = map[string]int32{
		"STATUS_PURPOSE_UNSPECIFIED": 0,
		"STATUS_PURPOSE_REVOCATION":  1,
		"STATUS_PURPOSE_SUSPENSION":  2,
	}
)

func (x StatusPurpose) Enum() *StatusPurpose {
	p := new(StatusPurpose)
	*p = x
	return p
}

func (x StatusPurpose) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusPurpose) Descriptor() protoreflect.EnumDescriptor {
	return file_registry_api_v1_registry_proto_enumTypes[2].Descriptor()
}

func (StatusPurpose) Type() protoreflect.EnumType {
	return &file_registry_api_v1_registry_proto_enumTypes[2]
}

func (x StatusPurpose) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusPurpose.Descriptor instead.
func (StatusPurpose) EnumDescriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{2}
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded",
// "document": "DOCUMENT"
// }
type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	// A set of data containing mechanisms to verify the DID and discover related services.
	Document string `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *CreateRequest) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

// [Example]
// {}
type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{1}
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded"
// }
type ResolveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (x *ResolveRequest) Reset() {
	*x = ResolveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRequest) ProtoMessage() {}

func (x *ResolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRequest.ProtoReflect.Descriptor instead.
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *ResolveRequest) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded"
// }
type ResolveRepresentationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	// W3C metadata structure for did resolution
	ResolutionOption *ResolutionOption `protobuf:"bytes,2,opt,name=resolutionOption,proto3" json:"resolutionOption,omitempty"`
}

func (x *ResolveRepresentationRequest) Reset() {
	*x = ResolveRepresentationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveRepresentationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRepresentationRequest) ProtoMessage() {}

func (x *ResolveRepresentationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRepresentationRequest.ProtoReflect.Descriptor instead.
func (*ResolveRepresentationRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{3}
}

func (x *ResolveRepresentationRequest) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *ResolveRepresentationRequest) GetResolutionOption() *ResolutionOption {
	if x != nil {
		return x.ResolutionOption
	}
	return nil
}

// [Example]
// {
// "accept": 0
// }
type ResolutionOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accept ResolutionOptionAccept `protobuf:"varint,1,opt,name=accept,proto3,enum=registry_api.v1.ResolutionOptionAccept" json:"accept,omitempty"`
}

func (x *ResolutionOption) Reset() {
	*x = ResolutionOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolutionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolutionOption) ProtoMessage() {}

func (x *ResolutionOption) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolutionOption.ProtoReflect.Descriptor instead.
func (*ResolutionOption) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{4}
}

func (x *ResolutionOption) GetAccept() ResolutionOptionAccept {
	if x != nil {
		return x.Accept
	}
	return ResolutionOptionAccept_RESOLUTION_OPTION_ACCEPT_UNSPECIFIED
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded",
// "document": "DOCUMENT",
// "metadata": {
// "created": {
// "seconds": 0,
// "nanos": 0
// },
// "updated": {
// "seconds": 0,
// "nanos": 0
// },
// "contentType": "MEDIA_TYPE"
// }
// }
type ResolveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	// A set of data containing mechanisms to verify the DID and discover related services.
	Document string `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	// Resolution Metadata object, with defined timestamps and content type.
	Metadata *ResolutionMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ResolveResponse) Reset() {
	*x = ResolveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveResponse) ProtoMessage() {}

func (x *ResolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveResponse.ProtoReflect.Descriptor instead.
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{5}
}

func (x *ResolveResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *ResolveResponse) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

func (x *ResolveResponse) GetMetadata() *ResolutionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded",
// "document": "DOCUMENT",
// "metadata": {
// "created": {
// "seconds": 0,
// "nanos": 0
// },
// "updated": {
// "seconds": 0,
// "nanos": 0
// },
// "contentType": "MEDIA_TYPE"
// }
// }
type ResolveRepresentationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	// A set of data containing mechanisms to verify the DID and discover related services.
	Document string `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	// Resolution Metadata object, with defined timestamps and content type.
	Metadata *ResolutionMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ResolveRepresentationResponse) Reset() {
	*x = ResolveRepresentationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveRepresentationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRepresentationResponse) ProtoMessage() {}

func (x *ResolveRepresentationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRepresentationResponse.ProtoReflect.Descriptor instead.
func (*ResolveRepresentationResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{6}
}

func (x *ResolveRepresentationResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *ResolveRepresentationResponse) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

func (x *ResolveRepresentationResponse) GetMetadata() *ResolutionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// [Example]
// {
// "created": {
// "seconds": 0,
// "nanos": 0
// },
// "updated": {
// "seconds": 0,
// "nanos": 0
// },
// "contentType": "MEDIA_TYPE"
// }
type ResolutionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp representing the DID document creation time.
	Created *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	// Timestamp representing the DID document last update time.
	Updated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	// Media type of the W3C DID Document.
	ContentType string `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *ResolutionMetadata) Reset() {
	*x = ResolutionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolutionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolutionMetadata) ProtoMessage() {}

func (x *ResolutionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolutionMetadata.ProtoReflect.Descriptor instead.
func (*ResolutionMetadata) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{7}
}

func (x *ResolutionMetadata) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ResolutionMetadata) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *ResolutionMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded",
// "document": "DOCUMENT"
// }
type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	// A set of data containing mechanisms to verify the DID and discover related services.
	Document string `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRequest) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *UpdateRequest) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

// [Example]
// {}
type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{9}
}

// [Example]
// {
// "did": "did:organization:zDIDMultibase58Encoded"
// }
type RevokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// W3C Decentralized Identifier (DID) of the wallet.
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (x *RevokeRequest) Reset() {
	*x = RevokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRequest) ProtoMessage() {}

func (x *RevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRequest.ProtoReflect.Descriptor instead.
func (*RevokeRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{10}
}

func (x *RevokeRequest) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

// [Example]
// {}
type RevokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeResponse) Reset() {
	*x = RevokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeResponse) ProtoMessage() {}

func (x *RevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeResponse.ProtoReflect.Descriptor instead.
func (*RevokeResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{11}
}

// [Example]
// {
// "country": "United States",
// "city": "Anytown",
// "state": "AL",
// "postal_code": "10101",
// "street": "123 Sesame Street"
// }
type PostalAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City       string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State      string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	PostalCode string `protobuf:"bytes,4,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Street     string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *PostalAddress) Reset() {
	*x = PostalAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostalAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostalAddress) ProtoMessage() {}

func (x *PostalAddress) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostalAddress.ProtoReflect.Descriptor instead.
func (*PostalAddress) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{12}
}

func (x *PostalAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PostalAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PostalAddress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PostalAddress) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *PostalAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

// [Example]
// {
// "issuer_did": "did:organization:zDIDIssuerMultibase58Encoded",
// "issuer_name": "ISSUER_NAME",
// "email": "example@gmail.com",
// "website": "google.com",
// "postal_address": {
// "country": "United States",
// "city": "Anytown",
// "state": "AL",
// "postal_code": "10101",
// "street": "123 Sesame Street"
// },
// "status": 0
// }
type CredentialIssuer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerDid     string         `protobuf:"bytes,1,opt,name=issuer_did,json=issuerDid,proto3" json:"issuer_did,omitempty"`
	IssuerName    string         `protobuf:"bytes,2,opt,name=issuer_name,json=issuerName,proto3" json:"issuer_name,omitempty"`
	Email         string         `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Website       string         `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`
	PostalAddress *PostalAddress `protobuf:"bytes,5,opt,name=postal_address,json=postalAddress,proto3" json:"postal_address,omitempty"`
	Status        IssuerStatus   `protobuf:"varint,6,opt,name=status,proto3,enum=registry_api.v1.IssuerStatus" json:"status,omitempty"`
}

func (x *CredentialIssuer) Reset() {
	*x = CredentialIssuer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialIssuer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialIssuer) ProtoMessage() {}

func (x *CredentialIssuer) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialIssuer.ProtoReflect.Descriptor instead.
func (*CredentialIssuer) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{13}
}

func (x *CredentialIssuer) GetIssuerDid() string {
	if x != nil {
		return x.IssuerDid
	}
	return ""
}

func (x *CredentialIssuer) GetIssuerName() string {
	if x != nil {
		return x.IssuerName
	}
	return ""
}

func (x *CredentialIssuer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CredentialIssuer) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *CredentialIssuer) GetPostalAddress() *PostalAddress {
	if x != nil {
		return x.PostalAddress
	}
	return nil
}

func (x *CredentialIssuer) GetStatus() IssuerStatus {
	if x != nil {
		return x.Status
	}
	return IssuerStatus_ISSUER_STATUS_UNSPECIFIED
}

// [Example]
// {
// "credential_issuer": {
// "issuer_did": "did:organization:zDIDIssuerMultibase58Encoded",
// "issuer_name": "ISSUER_NAME",
// "email": "example@gmail.com",
// "website": "google.com",
// "postal_address": {
// "country": "United States",
// "city": "Anytown",
// "state": "AL",
// "postal_code": "10101",
// "street": "123 Sesame Street"
// },
// "status": 0
// }
// }
type CreateCredentialIssuerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialIssuer *CredentialIssuer `protobuf:"bytes,1,opt,name=credential_issuer,json=credentialIssuer,proto3" json:"credential_issuer,omitempty"`
}

func (x *CreateCredentialIssuerRequest) Reset() {
	*x = CreateCredentialIssuerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialIssuerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialIssuerRequest) ProtoMessage() {}

func (x *CreateCredentialIssuerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialIssuerRequest.ProtoReflect.Descriptor instead.
func (*CreateCredentialIssuerRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{14}
}

func (x *CreateCredentialIssuerRequest) GetCredentialIssuer() *CredentialIssuer {
	if x != nil {
		return x.CredentialIssuer
	}
	return nil
}

// [Example]
// {}
type CreateCredentialIssuerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCredentialIssuerResponse) Reset() {
	*x = CreateCredentialIssuerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialIssuerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialIssuerResponse) ProtoMessage() {}

func (x *CreateCredentialIssuerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialIssuerResponse.ProtoReflect.Descriptor instead.
func (*CreateCredentialIssuerResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{15}
}

// [Example]
// {
// "issuer_did": "did:organization:zDIDCredentialIssuerMultibase58Encoded"
// }
type GetCredentialIssuerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerDid string `protobuf:"bytes,1,opt,name=issuer_did,json=issuerDid,proto3" json:"issuer_did,omitempty"`
}

func (x *GetCredentialIssuerRequest) Reset() {
	*x = GetCredentialIssuerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialIssuerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialIssuerRequest) ProtoMessage() {}

func (x *GetCredentialIssuerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialIssuerRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialIssuerRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{16}
}

func (x *GetCredentialIssuerRequest) GetIssuerDid() string {
	if x != nil {
		return x.IssuerDid
	}
	return ""
}

// [Example]
// {
// "credential_issuer": {
// "issuer_did": "did:organization:zDIDIssuerMultibase58Encoded",
// "issuer_name": "ISSUER_NAME",
// "email": "example@gmail.com",
// "website": "google.com",
// "postal_address": {
// "country": "United States",
// "city": "Anytown",
// "state": "AL",
// "postal_code": "10101",
// "street": "123 Sesame Street"
// },
// "status": 0
// }
// }
type GetCredentialIssuerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialIssuer *CredentialIssuer `protobuf:"bytes,1,opt,name=credential_issuer,json=credentialIssuer,proto3" json:"credential_issuer,omitempty"`
}

func (x *GetCredentialIssuerResponse) Reset() {
	*x = GetCredentialIssuerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialIssuerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialIssuerResponse) ProtoMessage() {}

func (x *GetCredentialIssuerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialIssuerResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialIssuerResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{17}
}

func (x *GetCredentialIssuerResponse) GetCredentialIssuer() *CredentialIssuer {
	if x != nil {
		return x.CredentialIssuer
	}
	return nil
}

// [Example]
// {
// "credential_issuer": {
// "issuer_did": "did:organization:zDIDIssuerMultibase58Encoded",
// "issuer_name": "ISSUER_NAME",
// "email": "example@gmail.com",
// "website": "google.com",
// "postal_address": {
// "country": "United States",
// "city": "Anytown",
// "state": "AL",
// "postal_code": "10101",
// "street": "123 Sesame Street"
// },
// "status": 0
// }
// }
type UpdateCredentialIssuerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialIssuer *CredentialIssuer `protobuf:"bytes,1,opt,name=credential_issuer,json=credentialIssuer,proto3" json:"credential_issuer,omitempty"`
}

func (x *UpdateCredentialIssuerRequest) Reset() {
	*x = UpdateCredentialIssuerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialIssuerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialIssuerRequest) ProtoMessage() {}

func (x *UpdateCredentialIssuerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialIssuerRequest.ProtoReflect.Descriptor instead.
func (*UpdateCredentialIssuerRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateCredentialIssuerRequest) GetCredentialIssuer() *CredentialIssuer {
	if x != nil {
		return x.CredentialIssuer
	}
	return nil
}

// [Example]
// {}
type UpdateCredentialIssuerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCredentialIssuerResponse) Reset() {
	*x = UpdateCredentialIssuerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialIssuerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialIssuerResponse) ProtoMessage() {}

func (x *UpdateCredentialIssuerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialIssuerResponse.ProtoReflect.Descriptor instead.
func (*UpdateCredentialIssuerResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{19}
}

// [Example]
// {
// "credential_id": "CREDENTIAL_ID",
// "credential_issuer_id": "did:organization:zDIDCredentialIssuerMultibase58Encoded",
// "status_purpose": 0,
// "credential_type": "CREDENTIAL_TYPE",
// "status_list_index": 0,
// "status_list_credential_id": "STATUS_LIST_CREDENTIAL_ID",
// "status": true
// }
type StatusListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId           string        `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	CredentialIssuerId     string        `protobuf:"bytes,2,opt,name=credential_issuer_id,json=credentialIssuerId,proto3" json:"credential_issuer_id,omitempty"`
	StatusPurpose          StatusPurpose `protobuf:"varint,3,opt,name=status_purpose,json=statusPurpose,proto3,enum=registry_api.v1.StatusPurpose" json:"status_purpose,omitempty"`
	CredentialType         string        `protobuf:"bytes,4,opt,name=credential_type,json=credentialType,proto3" json:"credential_type,omitempty"`
	StatusListIndex        int64         `protobuf:"varint,5,opt,name=status_list_index,json=statusListIndex,proto3" json:"status_list_index,omitempty"`
	StatusListCredentialId string        `protobuf:"bytes,6,opt,name=status_list_credential_id,json=statusListCredentialId,proto3" json:"status_list_credential_id,omitempty"`
	Status                 bool          `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusListEntry) Reset() {
	*x = StatusListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusListEntry) ProtoMessage() {}

func (x *StatusListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusListEntry.ProtoReflect.Descriptor instead.
func (*StatusListEntry) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{20}
}

func (x *StatusListEntry) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

func (x *StatusListEntry) GetCredentialIssuerId() string {
	if x != nil {
		return x.CredentialIssuerId
	}
	return ""
}

func (x *StatusListEntry) GetStatusPurpose() StatusPurpose {
	if x != nil {
		return x.StatusPurpose
	}
	return StatusPurpose_STATUS_PURPOSE_UNSPECIFIED
}

func (x *StatusListEntry) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *StatusListEntry) GetStatusListIndex() int64 {
	if x != nil {
		return x.StatusListIndex
	}
	return 0
}

func (x *StatusListEntry) GetStatusListCredentialId() string {
	if x != nil {
		return x.StatusListCredentialId
	}
	return ""
}

func (x *StatusListEntry) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateStatusListEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId       string        `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	CredentialIssuerId string        `protobuf:"bytes,2,opt,name=credential_issuer_id,json=credentialIssuerId,proto3" json:"credential_issuer_id,omitempty"`
	StatusPurpose      StatusPurpose `protobuf:"varint,3,opt,name=status_purpose,json=statusPurpose,proto3,enum=registry_api.v1.StatusPurpose" json:"status_purpose,omitempty"`
	CredentialType     string        `protobuf:"bytes,4,opt,name=credential_type,json=credentialType,proto3" json:"credential_type,omitempty"`
	Status             bool          `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateStatusListEntryRequest) Reset() {
	*x = CreateStatusListEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatusListEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatusListEntryRequest) ProtoMessage() {}

func (x *CreateStatusListEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatusListEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateStatusListEntryRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{21}
}

func (x *CreateStatusListEntryRequest) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

func (x *CreateStatusListEntryRequest) GetCredentialIssuerId() string {
	if x != nil {
		return x.CredentialIssuerId
	}
	return ""
}

func (x *CreateStatusListEntryRequest) GetStatusPurpose() StatusPurpose {
	if x != nil {
		return x.StatusPurpose
	}
	return StatusPurpose_STATUS_PURPOSE_UNSPECIFIED
}

func (x *CreateStatusListEntryRequest) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *CreateStatusListEntryRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// [Example]
// {
// "status_list_entry": {
// "credential_id": "CREDENTIAL_ID",
// "credential_issuer_id": "did:organization:zDIDCredentialIssuerMultibase58Encoded",
// "status_purpose": 0,
// "credential_type": "CREDENTIAL_TYPE",
// "status_list_index": 0,
// "status_list_credential_id": "STATUS_LIST_CREDENTIAL_ID",
// "status": true
// }
// }
type CreateStatusListEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusListEntry *StatusListEntry `protobuf:"bytes,1,opt,name=status_list_entry,json=statusListEntry,proto3" json:"status_list_entry,omitempty"`
}

func (x *CreateStatusListEntryResponse) Reset() {
	*x = CreateStatusListEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatusListEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatusListEntryResponse) ProtoMessage() {}

func (x *CreateStatusListEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatusListEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateStatusListEntryResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{22}
}

func (x *CreateStatusListEntryResponse) GetStatusListEntry() *StatusListEntry {
	if x != nil {
		return x.StatusListEntry
	}
	return nil
}

// [Example]
// {
// "status_list_credential_id": "STATUS_LIST_CREDENTIAL_ID"
// }
type GetStatusListCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusListCredentialId string `protobuf:"bytes,1,opt,name=status_list_credential_id,json=statusListCredentialId,proto3" json:"status_list_credential_id,omitempty"` //this is the unique id of statusListCredential
}

func (x *GetStatusListCredentialRequest) Reset() {
	*x = GetStatusListCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusListCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusListCredentialRequest) ProtoMessage() {}

func (x *GetStatusListCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusListCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetStatusListCredentialRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{23}
}

func (x *GetStatusListCredentialRequest) GetStatusListCredentialId() string {
	if x != nil {
		return x.StatusListCredentialId
	}
	return ""
}

// [Example]
// {
// "status_list_credential": "STATUS_LIST_CREDENTIAL"
// }
type GetStatusListCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusListCredential string `protobuf:"bytes,1,opt,name=status_list_credential,json=statusListCredential,proto3" json:"status_list_credential,omitempty"`
}

func (x *GetStatusListCredentialResponse) Reset() {
	*x = GetStatusListCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusListCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusListCredentialResponse) ProtoMessage() {}

func (x *GetStatusListCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusListCredentialResponse.ProtoReflect.Descriptor instead.
func (*GetStatusListCredentialResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{24}
}

func (x *GetStatusListCredentialResponse) GetStatusListCredential() string {
	if x != nil {
		return x.StatusListCredential
	}
	return ""
}

// [Example]
// {
// "credential_id": "CREDENTIAL_ID",
// "credential_issuer_id": "did:organization:zDIDCredentialIssuerMultibase58Encoded",
// "status_purpose": 0,
// "credential_type": "CREDENTIAL_TYPE",
// "status": true
// }
type UpdateStatusListEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId       string        `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	CredentialIssuerId string        `protobuf:"bytes,2,opt,name=credential_issuer_id,json=credentialIssuerId,proto3" json:"credential_issuer_id,omitempty"`
	StatusPurpose      StatusPurpose `protobuf:"varint,3,opt,name=status_purpose,json=statusPurpose,proto3,enum=registry_api.v1.StatusPurpose" json:"status_purpose,omitempty"`
	CredentialType     string        `protobuf:"bytes,4,opt,name=credential_type,json=credentialType,proto3" json:"credential_type,omitempty"`
	Status             bool          `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateStatusListEntryRequest) Reset() {
	*x = UpdateStatusListEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusListEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusListEntryRequest) ProtoMessage() {}

func (x *UpdateStatusListEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusListEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusListEntryRequest) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateStatusListEntryRequest) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

func (x *UpdateStatusListEntryRequest) GetCredentialIssuerId() string {
	if x != nil {
		return x.CredentialIssuerId
	}
	return ""
}

func (x *UpdateStatusListEntryRequest) GetStatusPurpose() StatusPurpose {
	if x != nil {
		return x.StatusPurpose
	}
	return StatusPurpose_STATUS_PURPOSE_UNSPECIFIED
}

func (x *UpdateStatusListEntryRequest) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *UpdateStatusListEntryRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// [Example]
// {}
type UpdateStatusListEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatusListEntryResponse) Reset() {
	*x = UpdateStatusListEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_api_v1_registry_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusListEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusListEntryResponse) ProtoMessage() {}

func (x *UpdateStatusListEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_api_v1_registry_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusListEntryResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusListEntryResponse) Descriptor() ([]byte, []int) {
	return file_registry_api_v1_registry_proto_rawDescGZIP(), []int{26}
}

var File_registry_api_v1_registry_proto protoreflect.FileDescriptor

var file_registry_api_v1_registry_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x8e, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0x0a,
	0x0d, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0x80, 0x02, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x12, 0x45, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6f,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x10, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22,
	0x20, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x69, 0x64, 0x22, 0x6d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x10, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x6f, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e,
	0x0a, 0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x10, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x20,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd7, 0x02, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x75, 0x72, 0x70, 0x6f,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6d, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x5b, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22,
	0xfd, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0x68, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x24, 0x52, 0x45,
	0x53, 0x4f, 0x4c, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54,
	0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x44, 0x10, 0x01, 0x2a, 0x64, 0x0a, 0x0c, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x53,
	0x53, 0x55, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x53, 0x53,
	0x55, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x53, 0x53, 0x55, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0x6d, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x52, 0x50,
	0x4f, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x52, 0x50,
	0x4f, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x56, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f,
	0x53, 0x45, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x32,
	0xb8, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x07, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x89, 0x03, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x2b, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x89, 0x03, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2d, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x6e, 0x6f, 0x78, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x73, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registry_api_v1_registry_proto_rawDescOnce sync.Once
	file_registry_api_v1_registry_proto_rawDescData = file_registry_api_v1_registry_proto_rawDesc
)

func file_registry_api_v1_registry_proto_rawDescGZIP() []byte {
	file_registry_api_v1_registry_proto_rawDescOnce.Do(func() {
		file_registry_api_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(file_registry_api_v1_registry_proto_rawDescData)
	})
	return file_registry_api_v1_registry_proto_rawDescData
}

var file_registry_api_v1_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_registry_api_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_registry_api_v1_registry_proto_goTypes = []interface{}{
	(ResolutionOptionAccept)(0),             // 0: registry_api.v1.ResolutionOptionAccept
	(IssuerStatus)(0),                       // 1: registry_api.v1.IssuerStatus
	(StatusPurpose)(0),                      // 2: registry_api.v1.StatusPurpose
	(*CreateRequest)(nil),                   // 3: registry_api.v1.CreateRequest
	(*CreateResponse)(nil),                  // 4: registry_api.v1.CreateResponse
	(*ResolveRequest)(nil),                  // 5: registry_api.v1.ResolveRequest
	(*ResolveRepresentationRequest)(nil),    // 6: registry_api.v1.ResolveRepresentationRequest
	(*ResolutionOption)(nil),                // 7: registry_api.v1.ResolutionOption
	(*ResolveResponse)(nil),                 // 8: registry_api.v1.ResolveResponse
	(*ResolveRepresentationResponse)(nil),   // 9: registry_api.v1.ResolveRepresentationResponse
	(*ResolutionMetadata)(nil),              // 10: registry_api.v1.ResolutionMetadata
	(*UpdateRequest)(nil),                   // 11: registry_api.v1.UpdateRequest
	(*UpdateResponse)(nil),                  // 12: registry_api.v1.UpdateResponse
	(*RevokeRequest)(nil),                   // 13: registry_api.v1.RevokeRequest
	(*RevokeResponse)(nil),                  // 14: registry_api.v1.RevokeResponse
	(*PostalAddress)(nil),                   // 15: registry_api.v1.PostalAddress
	(*CredentialIssuer)(nil),                // 16: registry_api.v1.CredentialIssuer
	(*CreateCredentialIssuerRequest)(nil),   // 17: registry_api.v1.CreateCredentialIssuerRequest
	(*CreateCredentialIssuerResponse)(nil),  // 18: registry_api.v1.CreateCredentialIssuerResponse
	(*GetCredentialIssuerRequest)(nil),      // 19: registry_api.v1.GetCredentialIssuerRequest
	(*GetCredentialIssuerResponse)(nil),     // 20: registry_api.v1.GetCredentialIssuerResponse
	(*UpdateCredentialIssuerRequest)(nil),   // 21: registry_api.v1.UpdateCredentialIssuerRequest
	(*UpdateCredentialIssuerResponse)(nil),  // 22: registry_api.v1.UpdateCredentialIssuerResponse
	(*StatusListEntry)(nil),                 // 23: registry_api.v1.StatusListEntry
	(*CreateStatusListEntryRequest)(nil),    // 24: registry_api.v1.CreateStatusListEntryRequest
	(*CreateStatusListEntryResponse)(nil),   // 25: registry_api.v1.CreateStatusListEntryResponse
	(*GetStatusListCredentialRequest)(nil),  // 26: registry_api.v1.GetStatusListCredentialRequest
	(*GetStatusListCredentialResponse)(nil), // 27: registry_api.v1.GetStatusListCredentialResponse
	(*UpdateStatusListEntryRequest)(nil),    // 28: registry_api.v1.UpdateStatusListEntryRequest
	(*UpdateStatusListEntryResponse)(nil),   // 29: registry_api.v1.UpdateStatusListEntryResponse
	(*timestamppb.Timestamp)(nil),           // 30: google.protobuf.Timestamp
}
var file_registry_api_v1_registry_proto_depIdxs = []int32{
	7,  // 0: registry_api.v1.ResolveRepresentationRequest.resolutionOption:type_name -> registry_api.v1.ResolutionOption
	0,  // 1: registry_api.v1.ResolutionOption.accept:type_name -> registry_api.v1.ResolutionOptionAccept
	10, // 2: registry_api.v1.ResolveResponse.metadata:type_name -> registry_api.v1.ResolutionMetadata
	10, // 3: registry_api.v1.ResolveRepresentationResponse.metadata:type_name -> registry_api.v1.ResolutionMetadata
	30, // 4: registry_api.v1.ResolutionMetadata.created:type_name -> google.protobuf.Timestamp
	30, // 5: registry_api.v1.ResolutionMetadata.updated:type_name -> google.protobuf.Timestamp
	15, // 6: registry_api.v1.CredentialIssuer.postal_address:type_name -> registry_api.v1.PostalAddress
	1,  // 7: registry_api.v1.CredentialIssuer.status:type_name -> registry_api.v1.IssuerStatus
	16, // 8: registry_api.v1.CreateCredentialIssuerRequest.credential_issuer:type_name -> registry_api.v1.CredentialIssuer
	16, // 9: registry_api.v1.GetCredentialIssuerResponse.credential_issuer:type_name -> registry_api.v1.CredentialIssuer
	16, // 10: registry_api.v1.UpdateCredentialIssuerRequest.credential_issuer:type_name -> registry_api.v1.CredentialIssuer
	2,  // 11: registry_api.v1.StatusListEntry.status_purpose:type_name -> registry_api.v1.StatusPurpose
	2,  // 12: registry_api.v1.CreateStatusListEntryRequest.status_purpose:type_name -> registry_api.v1.StatusPurpose
	23, // 13: registry_api.v1.CreateStatusListEntryResponse.status_list_entry:type_name -> registry_api.v1.StatusListEntry
	2,  // 14: registry_api.v1.UpdateStatusListEntryRequest.status_purpose:type_name -> registry_api.v1.StatusPurpose
	3,  // 15: registry_api.v1.RegistryService.Create:input_type -> registry_api.v1.CreateRequest
	5,  // 16: registry_api.v1.RegistryService.Resolve:input_type -> registry_api.v1.ResolveRequest
	6,  // 17: registry_api.v1.RegistryService.ResolveRepresentation:input_type -> registry_api.v1.ResolveRepresentationRequest
	11, // 18: registry_api.v1.RegistryService.Update:input_type -> registry_api.v1.UpdateRequest
	13, // 19: registry_api.v1.RegistryService.Revoke:input_type -> registry_api.v1.RevokeRequest
	17, // 20: registry_api.v1.CredentialIssuerRegistryService.CreateCredentialIssuer:input_type -> registry_api.v1.CreateCredentialIssuerRequest
	19, // 21: registry_api.v1.CredentialIssuerRegistryService.GetCredentialIssuer:input_type -> registry_api.v1.GetCredentialIssuerRequest
	21, // 22: registry_api.v1.CredentialIssuerRegistryService.UpdateCredentialIssuer:input_type -> registry_api.v1.UpdateCredentialIssuerRequest
	24, // 23: registry_api.v1.StatusListRegistryService.CreateStatusListEntry:input_type -> registry_api.v1.CreateStatusListEntryRequest
	26, // 24: registry_api.v1.StatusListRegistryService.GetStatusListCredential:input_type -> registry_api.v1.GetStatusListCredentialRequest
	28, // 25: registry_api.v1.StatusListRegistryService.UpdateStatusListEntry:input_type -> registry_api.v1.UpdateStatusListEntryRequest
	4,  // 26: registry_api.v1.RegistryService.Create:output_type -> registry_api.v1.CreateResponse
	8,  // 27: registry_api.v1.RegistryService.Resolve:output_type -> registry_api.v1.ResolveResponse
	9,  // 28: registry_api.v1.RegistryService.ResolveRepresentation:output_type -> registry_api.v1.ResolveRepresentationResponse
	12, // 29: registry_api.v1.RegistryService.Update:output_type -> registry_api.v1.UpdateResponse
	14, // 30: registry_api.v1.RegistryService.Revoke:output_type -> registry_api.v1.RevokeResponse
	18, // 31: registry_api.v1.CredentialIssuerRegistryService.CreateCredentialIssuer:output_type -> registry_api.v1.CreateCredentialIssuerResponse
	20, // 32: registry_api.v1.CredentialIssuerRegistryService.GetCredentialIssuer:output_type -> registry_api.v1.GetCredentialIssuerResponse
	22, // 33: registry_api.v1.CredentialIssuerRegistryService.UpdateCredentialIssuer:output_type -> registry_api.v1.UpdateCredentialIssuerResponse
	25, // 34: registry_api.v1.StatusListRegistryService.CreateStatusListEntry:output_type -> registry_api.v1.CreateStatusListEntryResponse
	27, // 35: registry_api.v1.StatusListRegistryService.GetStatusListCredential:output_type -> registry_api.v1.GetStatusListCredentialResponse
	29, // 36: registry_api.v1.StatusListRegistryService.UpdateStatusListEntry:output_type -> registry_api.v1.UpdateStatusListEntryResponse
	26, // [26:37] is the sub-list for method output_type
	15, // [15:26] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_registry_api_v1_registry_proto_init() }
func file_registry_api_v1_registry_proto_init() {
	if File_registry_api_v1_registry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registry_api_v1_registry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveRepresentationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolutionOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveRepresentationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolutionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostalAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialIssuer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialIssuerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialIssuerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialIssuerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialIssuerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialIssuerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialIssuerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatusListEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatusListEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusListCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusListCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusListEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_api_v1_registry_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusListEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registry_api_v1_registry_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_registry_api_v1_registry_proto_goTypes,
		DependencyIndexes: file_registry_api_v1_registry_proto_depIdxs,
		EnumInfos:         file_registry_api_v1_registry_proto_enumTypes,
		MessageInfos:      file_registry_api_v1_registry_proto_msgTypes,
	}.Build()
	File_registry_api_v1_registry_proto = out.File
	file_registry_api_v1_registry_proto_rawDesc = nil
	file_registry_api_v1_registry_proto_goTypes = nil
	file_registry_api_v1_registry_proto_depIdxs = nil
}
