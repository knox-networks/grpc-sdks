// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MonetaeEmissaryClient is the client API for MonetaeEmissary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MonetaeEmissaryClient interface {
}

type monetaeEmissaryClient struct {
	cc grpc.ClientConnInterface
}

func NewMonetaeEmissaryClient(cc grpc.ClientConnInterface) MonetaeEmissaryClient {
	return &monetaeEmissaryClient{cc}
}

// MonetaeEmissaryServer is the server API for MonetaeEmissary service.
// All implementations must embed UnimplementedMonetaeEmissaryServer
// for forward compatibility
type MonetaeEmissaryServer interface {
	mustEmbedUnimplementedMonetaeEmissaryServer()
}

// UnimplementedMonetaeEmissaryServer must be embedded to have forward compatible implementations.
type UnimplementedMonetaeEmissaryServer struct {
}

func (UnimplementedMonetaeEmissaryServer) mustEmbedUnimplementedMonetaeEmissaryServer() {}

// UnsafeMonetaeEmissaryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MonetaeEmissaryServer will
// result in compilation errors.
type UnsafeMonetaeEmissaryServer interface {
	mustEmbedUnimplementedMonetaeEmissaryServer()
}

func RegisterMonetaeEmissaryServer(s grpc.ServiceRegistrar, srv MonetaeEmissaryServer) {
	s.RegisterService(&MonetaeEmissary_ServiceDesc, srv)
}

// MonetaeEmissary_ServiceDesc is the grpc.ServiceDesc for MonetaeEmissary service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MonetaeEmissary_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "emissary.MonetaeEmissary",
	HandlerType: (*MonetaeEmissaryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "emissary_api/v1/emissary.proto",
}
