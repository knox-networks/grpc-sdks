// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: webhook_api/v1/webhook.proto

package v1

import (
	v1 "github.com/knox-networks/grpc-sdks/sdk/go/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Delivery Stage Options.
type DeliveryStage int32

const (
	// Delivery Stage Unspecified.
	DeliveryStage_DELIVERY_STAGE_UNSPECIFIED DeliveryStage = 0
	// Delivery Stage First (1) Retry.
	DeliveryStage_DELIVERY_STAGE_FIRST_RETRY DeliveryStage = 1
	// Delivery Stage Second (2) Retry.
	DeliveryStage_DELIVERY_STAGE_SECOND_RETRY DeliveryStage = 2
	// Delivery Stage Third (3) Retry.
	DeliveryStage_DELIVERY_STAGE_THIRD_RETRY DeliveryStage = 3
	// Delivery Stage Fourth (4) Retry.
	DeliveryStage_DELIVERY_STAGE_FOURTH_RETRY DeliveryStage = 4
	// Delivery Stage Fifth (5) Retry.
	DeliveryStage_DELIVERY_STAGE_FIFTH_RETRY DeliveryStage = 5
	// Delivery Stage Failed.
	DeliveryStage_DELIVERY_STAGE_FAILED DeliveryStage = 6
	// Delivery Stage Success.
	DeliveryStage_DELIVERY_STAGE_SUCCESS DeliveryStage = 7
)

// Enum value maps for DeliveryStage.
var (
	DeliveryStage_name = map[int32]string{
		0: "DELIVERY_STAGE_UNSPECIFIED",
		1: "DELIVERY_STAGE_FIRST_RETRY",
		2: "DELIVERY_STAGE_SECOND_RETRY",
		3: "DELIVERY_STAGE_THIRD_RETRY",
		4: "DELIVERY_STAGE_FOURTH_RETRY",
		5: "DELIVERY_STAGE_FIFTH_RETRY",
		6: "DELIVERY_STAGE_FAILED",
		7: "DELIVERY_STAGE_SUCCESS",
	}
	DeliveryStage_value = map[string]int32{
		"DELIVERY_STAGE_UNSPECIFIED":  0,
		"DELIVERY_STAGE_FIRST_RETRY":  1,
		"DELIVERY_STAGE_SECOND_RETRY": 2,
		"DELIVERY_STAGE_THIRD_RETRY":  3,
		"DELIVERY_STAGE_FOURTH_RETRY": 4,
		"DELIVERY_STAGE_FIFTH_RETRY":  5,
		"DELIVERY_STAGE_FAILED":       6,
		"DELIVERY_STAGE_SUCCESS":      7,
	}
)

func (x DeliveryStage) Enum() *DeliveryStage {
	p := new(DeliveryStage)
	*p = x
	return p
}

func (x DeliveryStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryStage) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[0].Descriptor()
}

func (DeliveryStage) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[0]
}

func (x DeliveryStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryStage.Descriptor instead.
func (DeliveryStage) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{0}
}

// Webhook Event Type.
type EventType int32

const (
	// Event Type Unspecified.
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// Event Type Wallet Created.
	EventType_EVENT_TYPE_WALLET_CREATED EventType = 1
	// Event Type Promissory File Received.
	EventType_EVENT_TYPE_PROMISSORY_RECEIVED EventType = 2
	// Event Type Ping.
	EventType_EVENT_TYPE_PING EventType = 3
	// Event Type Contract Proposal Completed.
	EventType_EVENT_TYPE_CONTRACT_PROPOSAL_COMPLETED EventType = 4
	// Event Type Contract Payment Completed.
	EventType_EVENT_TYPE_CONTRACT_PAYMENT_COMPLETED EventType = 5
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_WALLET_CREATED",
		2: "EVENT_TYPE_PROMISSORY_RECEIVED",
		3: "EVENT_TYPE_PING",
		4: "EVENT_TYPE_CONTRACT_PROPOSAL_COMPLETED",
		5: "EVENT_TYPE_CONTRACT_PAYMENT_COMPLETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":                 0,
		"EVENT_TYPE_WALLET_CREATED":              1,
		"EVENT_TYPE_PROMISSORY_RECEIVED":         2,
		"EVENT_TYPE_PING":                        3,
		"EVENT_TYPE_CONTRACT_PROPOSAL_COMPLETED": 4,
		"EVENT_TYPE_CONTRACT_PAYMENT_COMPLETED":  5,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[1].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[1]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{1}
}

// Delivery Method Options.
type DeliveryMethodType int32

const (
	// Delivery Method Unspecified.
	DeliveryMethodType_DELIVERY_METHOD_TYPE_UNSPECIFIED DeliveryMethodType = 0
	// Delivery Method using HTTP.
	DeliveryMethodType_DELIVERY_METHOD_TYPE_HTTP DeliveryMethodType = 1
	// Delivery Method using GRPC.
	DeliveryMethodType_DELIVERY_METHOD_TYPE_GRPC DeliveryMethodType = 2
)

// Enum value maps for DeliveryMethodType.
var (
	DeliveryMethodType_name = map[int32]string{
		0: "DELIVERY_METHOD_TYPE_UNSPECIFIED",
		1: "DELIVERY_METHOD_TYPE_HTTP",
		2: "DELIVERY_METHOD_TYPE_GRPC",
	}
	DeliveryMethodType_value = map[string]int32{
		"DELIVERY_METHOD_TYPE_UNSPECIFIED": 0,
		"DELIVERY_METHOD_TYPE_HTTP":        1,
		"DELIVERY_METHOD_TYPE_GRPC":        2,
	}
)

func (x DeliveryMethodType) Enum() *DeliveryMethodType {
	p := new(DeliveryMethodType)
	*p = x
	return p
}

func (x DeliveryMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[2].Descriptor()
}

func (DeliveryMethodType) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[2]
}

func (x DeliveryMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryMethodType.Descriptor instead.
func (DeliveryMethodType) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{2}
}

type ScheduleReactionType int32

const (
	// Scheduled Reaction Type Unspecified.
	ScheduleReactionType_SCHEDULE_REACTION_TYPE_UNSPECIFIED ScheduleReactionType = 0
	// Scheduled Reaction Type Wallet Created.
	ScheduleReactionType_SCHEDULE_REACTION_TYPE_CREATE_CONTRACT ScheduleReactionType = 1
)

// Enum value maps for ScheduleReactionType.
var (
	ScheduleReactionType_name = map[int32]string{
		0: "SCHEDULE_REACTION_TYPE_UNSPECIFIED",
		1: "SCHEDULE_REACTION_TYPE_CREATE_CONTRACT",
	}
	ScheduleReactionType_value = map[string]int32{
		"SCHEDULE_REACTION_TYPE_UNSPECIFIED":     0,
		"SCHEDULE_REACTION_TYPE_CREATE_CONTRACT": 1,
	}
)

func (x ScheduleReactionType) Enum() *ScheduleReactionType {
	p := new(ScheduleReactionType)
	*p = x
	return p
}

func (x ScheduleReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[3].Descriptor()
}

func (ScheduleReactionType) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[3]
}

func (x ScheduleReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleReactionType.Descriptor instead.
func (ScheduleReactionType) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{3}
}

type ValidationOperator int32

const (
	ValidationOperator_VALIDATION_OPERATOR_UNSPECIFIED           ValidationOperator = 0
	ValidationOperator_VALIDATION_OPERATOR_EQUAL                 ValidationOperator = 1
	ValidationOperator_VALIDATION_OPERATOR_GREATER_THAN          ValidationOperator = 2
	ValidationOperator_VALIDATION_OPERATOR_GREATER_THAN_OR_EQUAL ValidationOperator = 3
	ValidationOperator_VALIDATION_OPERATOR_LESS_THAN             ValidationOperator = 4
	ValidationOperator_VALIDATION_OPERATOR_LESS_THAN_OR_EQUAL    ValidationOperator = 5
)

// Enum value maps for ValidationOperator.
var (
	ValidationOperator_name = map[int32]string{
		0: "VALIDATION_OPERATOR_UNSPECIFIED",
		1: "VALIDATION_OPERATOR_EQUAL",
		2: "VALIDATION_OPERATOR_GREATER_THAN",
		3: "VALIDATION_OPERATOR_GREATER_THAN_OR_EQUAL",
		4: "VALIDATION_OPERATOR_LESS_THAN",
		5: "VALIDATION_OPERATOR_LESS_THAN_OR_EQUAL",
	}
	ValidationOperator_value = map[string]int32{
		"VALIDATION_OPERATOR_UNSPECIFIED":           0,
		"VALIDATION_OPERATOR_EQUAL":                 1,
		"VALIDATION_OPERATOR_GREATER_THAN":          2,
		"VALIDATION_OPERATOR_GREATER_THAN_OR_EQUAL": 3,
		"VALIDATION_OPERATOR_LESS_THAN":             4,
		"VALIDATION_OPERATOR_LESS_THAN_OR_EQUAL":    5,
	}
)

func (x ValidationOperator) Enum() *ValidationOperator {
	p := new(ValidationOperator)
	*p = x
	return p
}

func (x ValidationOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[4].Descriptor()
}

func (ValidationOperator) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[4]
}

func (x ValidationOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationOperator.Descriptor instead.
func (ValidationOperator) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{4}
}

type ConsideringContractPrevalidation_ValidationTarget int32

const (
	ConsideringContractPrevalidation_VALIDATION_TARGET_UNSPECIFIED       ConsideringContractPrevalidation_ValidationTarget = 0
	ConsideringContractPrevalidation_VALIDATION_TARGET_RECIPIENT_BALANCE ConsideringContractPrevalidation_ValidationTarget = 1 // balance of the account receiving the assets
)

// Enum value maps for ConsideringContractPrevalidation_ValidationTarget.
var (
	ConsideringContractPrevalidation_ValidationTarget_name = map[int32]string{
		0: "VALIDATION_TARGET_UNSPECIFIED",
		1: "VALIDATION_TARGET_RECIPIENT_BALANCE",
	}
	ConsideringContractPrevalidation_ValidationTarget_value = map[string]int32{
		"VALIDATION_TARGET_UNSPECIFIED":       0,
		"VALIDATION_TARGET_RECIPIENT_BALANCE": 1,
	}
)

func (x ConsideringContractPrevalidation_ValidationTarget) Enum() *ConsideringContractPrevalidation_ValidationTarget {
	p := new(ConsideringContractPrevalidation_ValidationTarget)
	*p = x
	return p
}

func (x ConsideringContractPrevalidation_ValidationTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsideringContractPrevalidation_ValidationTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[5].Descriptor()
}

func (ConsideringContractPrevalidation_ValidationTarget) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[5]
}

func (x ConsideringContractPrevalidation_ValidationTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsideringContractPrevalidation_ValidationTarget.Descriptor instead.
func (ConsideringContractPrevalidation_ValidationTarget) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{32, 0}
}

type ConsideringContractPrevalidation_ValidationOutcome int32

const (
	ConsideringContractPrevalidation_CONSIDERING_CONTRACT_OUTCOME_UNSPECIFIED ConsideringContractPrevalidation_ValidationOutcome = 0
	ConsideringContractPrevalidation_CONSIDERING_CONTRACT_OUTCOME_ACCEPTED    ConsideringContractPrevalidation_ValidationOutcome = 1
	ConsideringContractPrevalidation_CONSIDERING_CONTRACT_OUTCOME_REJECTED    ConsideringContractPrevalidation_ValidationOutcome = 2
)

// Enum value maps for ConsideringContractPrevalidation_ValidationOutcome.
var (
	ConsideringContractPrevalidation_ValidationOutcome_name = map[int32]string{
		0: "CONSIDERING_CONTRACT_OUTCOME_UNSPECIFIED",
		1: "CONSIDERING_CONTRACT_OUTCOME_ACCEPTED",
		2: "CONSIDERING_CONTRACT_OUTCOME_REJECTED",
	}
	ConsideringContractPrevalidation_ValidationOutcome_value = map[string]int32{
		"CONSIDERING_CONTRACT_OUTCOME_UNSPECIFIED": 0,
		"CONSIDERING_CONTRACT_OUTCOME_ACCEPTED":    1,
		"CONSIDERING_CONTRACT_OUTCOME_REJECTED":    2,
	}
)

func (x ConsideringContractPrevalidation_ValidationOutcome) Enum() *ConsideringContractPrevalidation_ValidationOutcome {
	p := new(ConsideringContractPrevalidation_ValidationOutcome)
	*p = x
	return p
}

func (x ConsideringContractPrevalidation_ValidationOutcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsideringContractPrevalidation_ValidationOutcome) Descriptor() protoreflect.EnumDescriptor {
	return file_webhook_api_v1_webhook_proto_enumTypes[6].Descriptor()
}

func (ConsideringContractPrevalidation_ValidationOutcome) Type() protoreflect.EnumType {
	return &file_webhook_api_v1_webhook_proto_enumTypes[6]
}

func (x ConsideringContractPrevalidation_ValidationOutcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsideringContractPrevalidation_ValidationOutcome.Descriptor instead.
func (ConsideringContractPrevalidation_ValidationOutcome) EnumDescriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{32, 1}
}

// [Example]
// {
// "id": "ID1",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret1",
// "name": "NAME1",
// "webhook_url": "WEBHOOK_URL1",
// "supported_events": [
// 0,
// 1
// ],
// "delivery_method": 0
// }
type Webhook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Webhook ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Owner ID.
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Webhook Name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Webhook URL.
	WebhookUrl string `protobuf:"bytes,4,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	// List of supported Events.
	SupportedEvents []EventType `protobuf:"varint,5,rep,packed,name=supported_events,json=supportedEvents,proto3,enum=webhook_api.v1.EventType" json:"supported_events,omitempty"`
	// Specification of Delivery method.
	DeliveryMethod DeliveryMethodType `protobuf:"varint,6,opt,name=delivery_method,json=deliveryMethod,proto3,enum=webhook_api.v1.DeliveryMethodType" json:"delivery_method,omitempty"`
}

func (x *Webhook) Reset() {
	*x = Webhook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Webhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webhook) ProtoMessage() {}

func (x *Webhook) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webhook.ProtoReflect.Descriptor instead.
func (*Webhook) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *Webhook) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Webhook) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Webhook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Webhook) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *Webhook) GetSupportedEvents() []EventType {
	if x != nil {
		return x.SupportedEvents
	}
	return nil
}

func (x *Webhook) GetDeliveryMethod() DeliveryMethodType {
	if x != nil {
		return x.DeliveryMethod
	}
	return DeliveryMethodType_DELIVERY_METHOD_TYPE_UNSPECIFIED
}

// [Example]
// {
// "name": "NAME",
// "did": "did:method-name:zDIDMultibase58Encoded",
// "created": "2006-01-02T15:04:05Z"
// }
type CreateWalletPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wallet name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Wallet DID.
	Did string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	// Timestamp when wallet was created.
	Created string `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *CreateWalletPayload) Reset() {
	*x = CreateWalletPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletPayload) ProtoMessage() {}

func (x *CreateWalletPayload) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletPayload.ProtoReflect.Descriptor instead.
func (*CreateWalletPayload) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWalletPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWalletPayload) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *CreateWalletPayload) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

// [Example]
// {
// "wallet_id": "zWalletIDMultibase58Encoded"
// }
type PromissoryReceivedPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wallet ID.
	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *PromissoryReceivedPayload) Reset() {
	*x = PromissoryReceivedPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromissoryReceivedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromissoryReceivedPayload) ProtoMessage() {}

func (x *PromissoryReceivedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromissoryReceivedPayload.ProtoReflect.Descriptor instead.
func (*PromissoryReceivedPayload) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *PromissoryReceivedPayload) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

// [Example]
// {
// "message": "MESSAGE"
// }
type PingPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message payload
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingPayload) Reset() {
	*x = PingPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingPayload) ProtoMessage() {}

func (x *PingPayload) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingPayload.ProtoReflect.Descriptor instead.
func (*PingPayload) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{3}
}

func (x *PingPayload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// [Example]
// {
// "contract_id": "CONTRACT_ID"
// }
type ContractProposalCompletedPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract ID.
	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// Owner ID
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Wallet ID
	WalletId string `protobuf:"bytes,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	// Contract Proposals
	Commitments []*v1.Commitment `protobuf:"bytes,4,rep,name=commitments,proto3" json:"commitments,omitempty"`
}

func (x *ContractProposalCompletedPayload) Reset() {
	*x = ContractProposalCompletedPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractProposalCompletedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractProposalCompletedPayload) ProtoMessage() {}

func (x *ContractProposalCompletedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractProposalCompletedPayload.ProtoReflect.Descriptor instead.
func (*ContractProposalCompletedPayload) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{4}
}

func (x *ContractProposalCompletedPayload) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractProposalCompletedPayload) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ContractProposalCompletedPayload) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *ContractProposalCompletedPayload) GetCommitments() []*v1.Commitment {
	if x != nil {
		return x.Commitments
	}
	return nil
}

// [Example]
// {
// "contract_id": "CONTRACT_ID"
// }
type ContractPaymentCompletedPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract ID.
	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// Owner ID
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Wallet ID
	WalletId string `protobuf:"bytes,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	// Contract Proposals
	Commitments []*v1.Commitment `protobuf:"bytes,4,rep,name=commitments,proto3" json:"commitments,omitempty"`
}

func (x *ContractPaymentCompletedPayload) Reset() {
	*x = ContractPaymentCompletedPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractPaymentCompletedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractPaymentCompletedPayload) ProtoMessage() {}

func (x *ContractPaymentCompletedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractPaymentCompletedPayload.ProtoReflect.Descriptor instead.
func (*ContractPaymentCompletedPayload) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{5}
}

func (x *ContractPaymentCompletedPayload) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractPaymentCompletedPayload) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ContractPaymentCompletedPayload) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *ContractPaymentCompletedPayload) GetCommitments() []*v1.Commitment {
	if x != nil {
		return x.Commitments
	}
	return nil
}

// [Example]
// {
// "event_type": 0,
// "signature": "SignatureLenVariesByAlgorithm",
// "event_id": "EVENT_ID",
// "delivery_date": "2007-01-02T15:04:05Z",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret",
// "payload": {
// "wallet_created_payload": {
// "name": "NAME",
// "did": "did:method-name:zDIDMultibase58Encoded",
// "created": "2006-01-02T15:04:05Z"
// }
// },
// "created_date": "2006-01-02T15:04:05Z"
// }
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of event.
	EventType EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=webhook_api.v1.EventType" json:"event_type,omitempty"`
	// Event signature.
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Event ID.
	EventId string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Delivery date of the event.
	DeliveryDate string `protobuf:"bytes,4,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	// Owner ID
	OwnerId string `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Event payload.
	//
	// Types that are assignable to Payload:
	//
	//	*Event_WalletCreatedPayload
	//	*Event_PromissoryReceivedPayload
	//	*Event_PingPayload
	//	*Event_ContractProposalCompletedPayload
	//	*Event_ContractPaymentCompletedPayload
	Payload isEvent_Payload `protobuf_oneof:"payload"`
	// Timestamp when wallet was created.
	CreatedDate string `protobuf:"bytes,9,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{6}
}

func (x *Event) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *Event) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Event) GetWalletCreatedPayload() *CreateWalletPayload {
	if x, ok := x.GetPayload().(*Event_WalletCreatedPayload); ok {
		return x.WalletCreatedPayload
	}
	return nil
}

func (x *Event) GetPromissoryReceivedPayload() *PromissoryReceivedPayload {
	if x, ok := x.GetPayload().(*Event_PromissoryReceivedPayload); ok {
		return x.PromissoryReceivedPayload
	}
	return nil
}

func (x *Event) GetPingPayload() *PingPayload {
	if x, ok := x.GetPayload().(*Event_PingPayload); ok {
		return x.PingPayload
	}
	return nil
}

func (x *Event) GetContractProposalCompletedPayload() *ContractProposalCompletedPayload {
	if x, ok := x.GetPayload().(*Event_ContractProposalCompletedPayload); ok {
		return x.ContractProposalCompletedPayload
	}
	return nil
}

func (x *Event) GetContractPaymentCompletedPayload() *ContractPaymentCompletedPayload {
	if x, ok := x.GetPayload().(*Event_ContractPaymentCompletedPayload); ok {
		return x.ContractPaymentCompletedPayload
	}
	return nil
}

func (x *Event) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_WalletCreatedPayload struct {
	// Event Payload for creation of wallet.
	WalletCreatedPayload *CreateWalletPayload `protobuf:"bytes,6,opt,name=wallet_created_payload,json=walletCreatedPayload,proto3,oneof"`
}

type Event_PromissoryReceivedPayload struct {
	// Event Payload for receiving promissory.
	PromissoryReceivedPayload *PromissoryReceivedPayload `protobuf:"bytes,7,opt,name=promissory_received_payload,json=promissoryReceivedPayload,proto3,oneof"`
}

type Event_PingPayload struct {
	// Event Payload for pinging.
	PingPayload *PingPayload `protobuf:"bytes,8,opt,name=ping_payload,json=pingPayload,proto3,oneof"`
}

type Event_ContractProposalCompletedPayload struct {
	// Event Payload for contract proposal completed.
	ContractProposalCompletedPayload *ContractProposalCompletedPayload `protobuf:"bytes,10,opt,name=contract_proposal_completed_payload,json=contractProposalCompletedPayload,proto3,oneof"`
}

type Event_ContractPaymentCompletedPayload struct {
	// Event Payload for contract payment completed.
	ContractPaymentCompletedPayload *ContractPaymentCompletedPayload `protobuf:"bytes,11,opt,name=contract_payment_completed_payload,json=contractPaymentCompletedPayload,proto3,oneof"`
}

func (*Event_WalletCreatedPayload) isEvent_Payload() {}

func (*Event_PromissoryReceivedPayload) isEvent_Payload() {}

func (*Event_PingPayload) isEvent_Payload() {}

func (*Event_ContractProposalCompletedPayload) isEvent_Payload() {}

func (*Event_ContractPaymentCompletedPayload) isEvent_Payload() {}

// [Example]
// {
// "api_key": "API_KEY",
// "name": "NAME",
// "supported_events": [
// 0, 1, 2
// ],
// "webhook_url": "WEBHOOK_URL",
// "delivery_method": 0
// }
type CreateWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Webhook name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// List of supported_events.
	SupportedEvents []EventType `protobuf:"varint,3,rep,packed,name=supported_events,json=supportedEvents,proto3,enum=webhook_api.v1.EventType" json:"supported_events,omitempty"`
	// Specified webhook URL.
	WebhookUrl string `protobuf:"bytes,4,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	// Specification of delivery method.
	DeliveryMethod DeliveryMethodType `protobuf:"varint,5,opt,name=delivery_method,json=deliveryMethod,proto3,enum=webhook_api.v1.DeliveryMethodType" json:"delivery_method,omitempty"`
}

func (x *CreateWebhookRequest) Reset() {
	*x = CreateWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWebhookRequest) ProtoMessage() {}

func (x *CreateWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWebhookRequest.ProtoReflect.Descriptor instead.
func (*CreateWebhookRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{7}
}

func (x *CreateWebhookRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CreateWebhookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWebhookRequest) GetSupportedEvents() []EventType {
	if x != nil {
		return x.SupportedEvents
	}
	return nil
}

func (x *CreateWebhookRequest) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *CreateWebhookRequest) GetDeliveryMethod() DeliveryMethodType {
	if x != nil {
		return x.DeliveryMethod
	}
	return DeliveryMethodType_DELIVERY_METHOD_TYPE_UNSPECIFIED
}

// [Example]
// {
// "webhook_public_key": "zWebhookMultibase58Encoded",
// "webhook": {
// "id": "ID1",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret1",
// "name": "NAME1",
// "webhook_url": "WEBHOOK_URL1",
// "supported_events": [
// 0,
// 1
// ],
// "delivery_method": 0
// }
// }
type CreateWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Webhook Public Key
	WebhookPublicKey string `protobuf:"bytes,1,opt,name=webhook_public_key,json=webhookPublicKey,proto3" json:"webhook_public_key,omitempty"`
	// Webhook
	Webhook *Webhook `protobuf:"bytes,2,opt,name=webhook,proto3" json:"webhook,omitempty"`
}

func (x *CreateWebhookResponse) Reset() {
	*x = CreateWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWebhookResponse) ProtoMessage() {}

func (x *CreateWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWebhookResponse.ProtoReflect.Descriptor instead.
func (*CreateWebhookResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{8}
}

func (x *CreateWebhookResponse) GetWebhookPublicKey() string {
	if x != nil {
		return x.WebhookPublicKey
	}
	return ""
}

func (x *CreateWebhookResponse) GetWebhook() *Webhook {
	if x != nil {
		return x.Webhook
	}
	return nil
}

// [Example]
// {
// "api_key": "API_KEY",
// "page": 0,
// "page_size": 10000
// }
type ListWebhooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Page number for pagination.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size of the page for pagination.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListWebhooksRequest) Reset() {
	*x = ListWebhooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksRequest) ProtoMessage() {}

func (x *ListWebhooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksRequest.ProtoReflect.Descriptor instead.
func (*ListWebhooksRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{9}
}

func (x *ListWebhooksRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ListWebhooksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWebhooksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// [Example]
// {
// "webhooks": [
// {
// "id": "ID1",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret1",
// "name": "NAME1",
// "webhook_url": "WEBHOOK_URL1",
// "supported_events": [
// 0,
// 1
// ],
// "delivery_method": 0
// },
// {
// "id": "ID2",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret2",
// "name": "NAME2",
// "webhook_url": "WEBHOOK_URL2",
// "supported_events": [
// 0,
// 1
// ],
// "delivery_method": 0
// }
// ],
// "total_owned_webhooks": 2
// }
type ListWebhooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of webhooks.
	Webhooks []*Webhook `protobuf:"bytes,1,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
	// Total number of webhooks returned.
	TotalOwnedWebhooks uint32 `protobuf:"varint,2,opt,name=total_owned_webhooks,json=totalOwnedWebhooks,proto3" json:"total_owned_webhooks,omitempty"`
}

func (x *ListWebhooksResponse) Reset() {
	*x = ListWebhooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksResponse) ProtoMessage() {}

func (x *ListWebhooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksResponse.ProtoReflect.Descriptor instead.
func (*ListWebhooksResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{10}
}

func (x *ListWebhooksResponse) GetWebhooks() []*Webhook {
	if x != nil {
		return x.Webhooks
	}
	return nil
}

func (x *ListWebhooksResponse) GetTotalOwnedWebhooks() uint32 {
	if x != nil {
		return x.TotalOwnedWebhooks
	}
	return 0
}

// [Example]
// {
// "api_key": "API_KEY",
// "webhook_id": "WEBHOOK_ID"
// }
type DeleteWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key, JWT.
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Webhook ID.
	WebhookId string `protobuf:"bytes,2,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
}

func (x *DeleteWebhookRequest) Reset() {
	*x = DeleteWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebhookRequest) ProtoMessage() {}

func (x *DeleteWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebhookRequest.ProtoReflect.Descriptor instead.
func (*DeleteWebhookRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteWebhookRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DeleteWebhookRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

// [Example]
// {}
type DeleteWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWebhookResponse) Reset() {
	*x = DeleteWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebhookResponse) ProtoMessage() {}

func (x *DeleteWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebhookResponse.ProtoReflect.Descriptor instead.
func (*DeleteWebhookResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{12}
}

// [Example]
// {
// "event": {
// "event_type": 0,
// "signature": "SignatureLenVariesByAlgorithm",
// "event_id": "EVENT_ID",
// "delivery_date": "2007-01-02T15:04:05Z",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret",
// "payload": {
// "wallet_created_payload": {
// "name": "NAME",
// "did": "did:method-name:zDIDMultibase58Encoded",
// "created": "2006-01-02T15:04:05Z"
// }
// }
// }
// }
type EventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event.
	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *EventRequest) Reset() {
	*x = EventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequest) ProtoMessage() {}

func (x *EventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequest.ProtoReflect.Descriptor instead.
func (*EventRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{13}
}

func (x *EventRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// [Example]
// {}
type EventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{14}
}

// [Example]
// {
// "api_key": "API_KEY",
// "page": 0,
// "page_size": 10000,
// "filters": {
// "filters": [
// {
// "field": "FIELD1",
// "operator": 0,
// "value": {
// "str_value": "STRINGVAL"
// }
// },
// {
// "field": "FIELD2",
// "operator": 0,
// "value": {
// "int_value": 10
// }
// },
// {
// "field": "FIELD3",
// "operator": 0,
// "value": {
// "bool_value": false
// }
// }
// ],
// "operator": 0
// },
// "sort_by": {
// "items": [
// {
// "field": "FIELD1",
// "direction": 0
// },
// {
// "field": "FIELD2",
// "direction": 0
// }
// ]
// }
// }
type ListEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key, JWT.
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Page number for pagination.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size of the page for pagination.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Potential filters to apply to the list of events.
	Filters *v1.Filter `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Potential sort to apply to the list of events.
	SortBy *v1.SortBy `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{15}
}

func (x *ListEventsRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ListEventsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEventsRequest) GetFilters() *v1.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListEventsRequest) GetSortBy() *v1.SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

// [Example]
// {
// "events": [
// {
// "event_type": 0,
// "signature": "SignatureLenVariesByAlgorithm",
// "event_id": "EVENT_ID1",
// "delivery_date": "2007-01-02T15:04:05Z",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret1",
// "payload": {
// "wallet_created_payload": {
// "name": "NAME",
// "did": "did:method-name:zDIDMultibase58Encoded",
// "created": "2006-01-02T15:04:05Z"
// }
// }
// },
// {
// "event_type": 0,
// "signature": "SignatureLenVariesByAlgorithm",
// "event_id": "EVENT_ID2",
// "delivery_date": "2007-01-02T15:04:05Z",
// "owner_id": "eyJwtHeader.eyJwtPayload.Secret2",
// "payload": {
// "wallet_created_payload": {
// "name": "NAME",
// "did": "did:method-name:zDIDMultibase58Encoded",
// "created": "2006-01-02T15:04:05Z"
// }
// }
// }
// ],
// "total_owned_events": 2
// }
type ListEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of Events returned.
	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// Total number of owned events returned.
	TotalOwnedEvents uint32 `protobuf:"varint,2,opt,name=total_owned_events,json=totalOwnedEvents,proto3" json:"total_owned_events,omitempty"`
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{16}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListEventsResponse) GetTotalOwnedEvents() uint32 {
	if x != nil {
		return x.TotalOwnedEvents
	}
	return 0
}

// [Example]
// {
// "api_key": "API_KEY",
// "event_id": "EVENT_ID",
// "webhook_id": "WEBHOOK_ID"
// }
type RetryEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key, JWT.
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Event ID.
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Webhook ID.
	WebhookId string `protobuf:"bytes,3,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
}

func (x *RetryEventRequest) Reset() {
	*x = RetryEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryEventRequest) ProtoMessage() {}

func (x *RetryEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryEventRequest.ProtoReflect.Descriptor instead.
func (*RetryEventRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{17}
}

func (x *RetryEventRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *RetryEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RetryEventRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

// [Example]
// {}
type RetryEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetryEventResponse) Reset() {
	*x = RetryEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryEventResponse) ProtoMessage() {}

func (x *RetryEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryEventResponse.ProtoReflect.Descriptor instead.
func (*RetryEventResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{18}
}

// [Example]
// {
// "api_key": "API_KEY",
// "message": "MESSAGE"
// }
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key, JWT.
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Ping Message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{19}
}

func (x *PingRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// [Example]
// {
// "message": "MESSAGE"
// }
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ping Message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{20}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// [Example]
// {
// "api_key": "API_KEY",
// "page": 0,
// "page_size": 10000,
// "filters": {
// "filters": [
// {
// "field": "FIELD1",
// "operator": 0,
// "value": {
// "str_value": "STRINGVAL"
// }
// },
// {
// "field": "FIELD2",
// "operator": 0,
// "value": {
// "int_value": 10
// }
// },
// {
// "field": "FIELD3",
// "operator": 0,
// "value": {
// "bool_value": false
// }
// }
// ],
// "operator": 0
// },
// "sort_by": {
// "items": [
// {
// "field": "FIELD1",
// "direction": 0
// },
// {
// "field": "FIELD2",
// "direction": 0
// }
// ]
// }
// }
type ListDeliveryHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key, JWT.
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Page number for pagination.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size of the page for pagination.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Potential filters to apply to the list of delivery history.
	Filters *v1.Filter `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Potential sort to apply to the list of delivery history.
	SortBy *v1.SortBy `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ListDeliveryHistoryRequest) Reset() {
	*x = ListDeliveryHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeliveryHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeliveryHistoryRequest) ProtoMessage() {}

func (x *ListDeliveryHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeliveryHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListDeliveryHistoryRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{21}
}

func (x *ListDeliveryHistoryRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ListDeliveryHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDeliveryHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDeliveryHistoryRequest) GetFilters() *v1.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListDeliveryHistoryRequest) GetSortBy() *v1.SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

// [Example]
// {
// "delivery_history": [{
// "id": "ID1",
// "webhook_id": "WEBHOOK_ID1",
// "event_id": "EVENT_ID1",
// "owner_id": "OWNER_ID1",
// "delivery_stage": 0
// }],
// "total_owned_delivery_history": 1
// }
type ListDeliveryHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of Delivery History returned.
	DeliveryHistory []*ListDeliveryHistoryResponse_DeliveryHistory `protobuf:"bytes,1,rep,name=delivery_history,json=deliveryHistory,proto3" json:"delivery_history,omitempty"`
	// Total number of owned delivery history returned.
	TotalOwnedDeliveryHistory uint32 `protobuf:"varint,2,opt,name=total_owned_delivery_history,json=totalOwnedDeliveryHistory,proto3" json:"total_owned_delivery_history,omitempty"`
}

func (x *ListDeliveryHistoryResponse) Reset() {
	*x = ListDeliveryHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeliveryHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeliveryHistoryResponse) ProtoMessage() {}

func (x *ListDeliveryHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeliveryHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListDeliveryHistoryResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{22}
}

func (x *ListDeliveryHistoryResponse) GetDeliveryHistory() []*ListDeliveryHistoryResponse_DeliveryHistory {
	if x != nil {
		return x.DeliveryHistory
	}
	return nil
}

func (x *ListDeliveryHistoryResponse) GetTotalOwnedDeliveryHistory() uint32 {
	if x != nil {
		return x.TotalOwnedDeliveryHistory
	}
	return 0
}

type ScheduledReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Webhook name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Reaction type.
	ReactionType ScheduleReactionType `protobuf:"varint,3,opt,name=reaction_type,json=reactionType,proto3,enum=webhook_api.v1.ScheduleReactionType" json:"reaction_type,omitempty"`
	// Cron tab. Requires 5 asterisks/values. (e.g. * * * * *). Only supports minute granularity.
	CronTab string `protobuf:"bytes,4,opt,name=cron_tab,json=cronTab,proto3" json:"cron_tab,omitempty"`
	// Types that are assignable to ReactionPayload:
	//
	//	*ScheduledReaction_CreateContractPayload
	ReactionPayload isScheduledReaction_ReactionPayload `protobuf_oneof:"reaction_payload"`
}

func (x *ScheduledReaction) Reset() {
	*x = ScheduledReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledReaction) ProtoMessage() {}

func (x *ScheduledReaction) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledReaction.ProtoReflect.Descriptor instead.
func (*ScheduledReaction) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{23}
}

func (x *ScheduledReaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduledReaction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScheduledReaction) GetReactionType() ScheduleReactionType {
	if x != nil {
		return x.ReactionType
	}
	return ScheduleReactionType_SCHEDULE_REACTION_TYPE_UNSPECIFIED
}

func (x *ScheduledReaction) GetCronTab() string {
	if x != nil {
		return x.CronTab
	}
	return ""
}

func (m *ScheduledReaction) GetReactionPayload() isScheduledReaction_ReactionPayload {
	if m != nil {
		return m.ReactionPayload
	}
	return nil
}

func (x *ScheduledReaction) GetCreateContractPayload() *CreateContractReactionPayload {
	if x, ok := x.GetReactionPayload().(*ScheduledReaction_CreateContractPayload); ok {
		return x.CreateContractPayload
	}
	return nil
}

type isScheduledReaction_ReactionPayload interface {
	isScheduledReaction_ReactionPayload()
}

type ScheduledReaction_CreateContractPayload struct {
	// Reaction Payload for sending payment.
	CreateContractPayload *CreateContractReactionPayload `protobuf:"bytes,5,opt,name=create_contract_payload,json=createContractPayload,proto3,oneof"`
}

func (*ScheduledReaction_CreateContractPayload) isScheduledReaction_ReactionPayload() {}

type CreateContractReactionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wallet ID.
	SenderWalletId string `protobuf:"bytes,1,opt,name=sender_wallet_id,json=senderWalletId,proto3" json:"sender_wallet_id,omitempty"`
	// List of commitments
	Commitments []*v1.Commitment `protobuf:"bytes,2,rep,name=commitments,proto3" json:"commitments,omitempty"`
	// List of conditions
	Conditions []*v1.Condition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// Timeout in seconds for contracts created by the scheduled reaction
	TimeoutSecs uint32 `protobuf:"varint,4,opt,name=timeout_secs,json=timeoutSecs,proto3" json:"timeout_secs,omitempty"`
	// Memo for contracts created by the scheduled reaction
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *CreateContractReactionPayload) Reset() {
	*x = CreateContractReactionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContractReactionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContractReactionPayload) ProtoMessage() {}

func (x *CreateContractReactionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContractReactionPayload.ProtoReflect.Descriptor instead.
func (*CreateContractReactionPayload) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{24}
}

func (x *CreateContractReactionPayload) GetSenderWalletId() string {
	if x != nil {
		return x.SenderWalletId
	}
	return ""
}

func (x *CreateContractReactionPayload) GetCommitments() []*v1.Commitment {
	if x != nil {
		return x.Commitments
	}
	return nil
}

func (x *CreateContractReactionPayload) GetConditions() []*v1.Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *CreateContractReactionPayload) GetTimeoutSecs() uint32 {
	if x != nil {
		return x.TimeoutSecs
	}
	return 0
}

func (x *CreateContractReactionPayload) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type CreateScheduledReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Webhook name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Reaction type.
	ReactionType ScheduleReactionType `protobuf:"varint,3,opt,name=reaction_type,json=reactionType,proto3,enum=webhook_api.v1.ScheduleReactionType" json:"reaction_type,omitempty"`
	// *
	// Recurring schedule is in the form of a crontab, requiring five values. This example will execute once per minute.
	// ┌───────────── minute (0 - 59)
	// │ ┌───────────── hour (0 - 23)
	// │ │ ┌───────────── day of the month (1 - 31)
	// │ │ │ ┌───────────── month (1 - 12)
	// │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday
	// │ │ │ │ │
	// │ │ │ │ │
	// * * * *
	CronTab string `protobuf:"bytes,4,opt,name=cron_tab,json=cronTab,proto3" json:"cron_tab,omitempty"`
	// Types that are assignable to ReactionPayload:
	//
	//	*CreateScheduledReactionRequest_CreateContractPayload
	ReactionPayload isCreateScheduledReactionRequest_ReactionPayload `protobuf_oneof:"reaction_payload"`
}

func (x *CreateScheduledReactionRequest) Reset() {
	*x = CreateScheduledReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScheduledReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduledReactionRequest) ProtoMessage() {}

func (x *CreateScheduledReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduledReactionRequest.ProtoReflect.Descriptor instead.
func (*CreateScheduledReactionRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{25}
}

func (x *CreateScheduledReactionRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CreateScheduledReactionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateScheduledReactionRequest) GetReactionType() ScheduleReactionType {
	if x != nil {
		return x.ReactionType
	}
	return ScheduleReactionType_SCHEDULE_REACTION_TYPE_UNSPECIFIED
}

func (x *CreateScheduledReactionRequest) GetCronTab() string {
	if x != nil {
		return x.CronTab
	}
	return ""
}

func (m *CreateScheduledReactionRequest) GetReactionPayload() isCreateScheduledReactionRequest_ReactionPayload {
	if m != nil {
		return m.ReactionPayload
	}
	return nil
}

func (x *CreateScheduledReactionRequest) GetCreateContractPayload() *CreateContractReactionPayload {
	if x, ok := x.GetReactionPayload().(*CreateScheduledReactionRequest_CreateContractPayload); ok {
		return x.CreateContractPayload
	}
	return nil
}

type isCreateScheduledReactionRequest_ReactionPayload interface {
	isCreateScheduledReactionRequest_ReactionPayload()
}

type CreateScheduledReactionRequest_CreateContractPayload struct {
	// Reaction Payload for sending payment.
	CreateContractPayload *CreateContractReactionPayload `protobuf:"bytes,5,opt,name=create_contract_payload,json=createContractPayload,proto3,oneof"`
}

func (*CreateScheduledReactionRequest_CreateContractPayload) isCreateScheduledReactionRequest_ReactionPayload() {
}

type CreateScheduledReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduledReaction *ScheduledReaction `protobuf:"bytes,1,opt,name=scheduled_reaction,json=scheduledReaction,proto3" json:"scheduled_reaction,omitempty"`
}

func (x *CreateScheduledReactionResponse) Reset() {
	*x = CreateScheduledReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScheduledReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduledReactionResponse) ProtoMessage() {}

func (x *CreateScheduledReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduledReactionResponse.ProtoReflect.Descriptor instead.
func (*CreateScheduledReactionResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{26}
}

func (x *CreateScheduledReactionResponse) GetScheduledReaction() *ScheduledReaction {
	if x != nil {
		return x.ScheduledReaction
	}
	return nil
}

type ListScheduledReactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Page number for pagination.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size of the page for pagination.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Potential filters to apply to the list of scheduled reactions.
	Filters *v1.Filter `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Potential sort to apply to the list of scheduled reactions.
	SortBy *v1.SortBy `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ListScheduledReactionsRequest) Reset() {
	*x = ListScheduledReactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScheduledReactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduledReactionsRequest) ProtoMessage() {}

func (x *ListScheduledReactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduledReactionsRequest.ProtoReflect.Descriptor instead.
func (*ListScheduledReactionsRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{27}
}

func (x *ListScheduledReactionsRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ListScheduledReactionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListScheduledReactionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListScheduledReactionsRequest) GetFilters() *v1.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListScheduledReactionsRequest) GetSortBy() *v1.SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

type ListScheduledReactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduledReactions           []*ScheduledReaction `protobuf:"bytes,1,rep,name=scheduled_reactions,json=scheduledReactions,proto3" json:"scheduled_reactions,omitempty"`
	TotalOwnedScheduledReactions uint32               `protobuf:"varint,2,opt,name=total_owned_scheduled_reactions,json=totalOwnedScheduledReactions,proto3" json:"total_owned_scheduled_reactions,omitempty"`
}

func (x *ListScheduledReactionsResponse) Reset() {
	*x = ListScheduledReactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScheduledReactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduledReactionsResponse) ProtoMessage() {}

func (x *ListScheduledReactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduledReactionsResponse.ProtoReflect.Descriptor instead.
func (*ListScheduledReactionsResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{28}
}

func (x *ListScheduledReactionsResponse) GetScheduledReactions() []*ScheduledReaction {
	if x != nil {
		return x.ScheduledReactions
	}
	return nil
}

func (x *ListScheduledReactionsResponse) GetTotalOwnedScheduledReactions() uint32 {
	if x != nil {
		return x.TotalOwnedScheduledReactions
	}
	return 0
}

type DeleteScheduledReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Scheduled Reaction ID.
	ScheduledReactionId string `protobuf:"bytes,2,opt,name=scheduled_reaction_id,json=scheduledReactionId,proto3" json:"scheduled_reaction_id,omitempty"`
}

func (x *DeleteScheduledReactionRequest) Reset() {
	*x = DeleteScheduledReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduledReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduledReactionRequest) ProtoMessage() {}

func (x *DeleteScheduledReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduledReactionRequest.ProtoReflect.Descriptor instead.
func (*DeleteScheduledReactionRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteScheduledReactionRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DeleteScheduledReactionRequest) GetScheduledReactionId() string {
	if x != nil {
		return x.ScheduledReactionId
	}
	return ""
}

type DeleteScheduledReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteScheduledReactionResponse) Reset() {
	*x = DeleteScheduledReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduledReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduledReactionResponse) ProtoMessage() {}

func (x *DeleteScheduledReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduledReactionResponse.ProtoReflect.Descriptor instead.
func (*DeleteScheduledReactionResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{30}
}

type Prevalidation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Trigger for the prevalidation.
	//
	// Types that are assignable to Trigger:
	//
	//	*Prevalidation_ConsideringContractPrevalidation
	Trigger isPrevalidation_Trigger `protobuf_oneof:"trigger"`
}

func (x *Prevalidation) Reset() {
	*x = Prevalidation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prevalidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prevalidation) ProtoMessage() {}

func (x *Prevalidation) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prevalidation.ProtoReflect.Descriptor instead.
func (*Prevalidation) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{31}
}

func (x *Prevalidation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Prevalidation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Prevalidation) GetTrigger() isPrevalidation_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (x *Prevalidation) GetConsideringContractPrevalidation() *ConsideringContractPrevalidation {
	if x, ok := x.GetTrigger().(*Prevalidation_ConsideringContractPrevalidation); ok {
		return x.ConsideringContractPrevalidation
	}
	return nil
}

type isPrevalidation_Trigger interface {
	isPrevalidation_Trigger()
}

type Prevalidation_ConsideringContractPrevalidation struct {
	ConsideringContractPrevalidation *ConsideringContractPrevalidation `protobuf:"bytes,3,opt,name=considering_contract_prevalidation,json=consideringContractPrevalidation,proto3,oneof"`
}

func (*Prevalidation_ConsideringContractPrevalidation) isPrevalidation_Trigger() {}

type ConsideringContractPrevalidation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Conditions to be evaluated
	Condition []*ConsideringContractPrevalidation_ValidationCondition `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty"`
	// Outcome of the prevalidation if the condition is true
	Outcome     ConsideringContractPrevalidation_ValidationOutcome `protobuf:"varint,2,opt,name=outcome,proto3,enum=webhook_api.v1.ConsideringContractPrevalidation_ValidationOutcome" json:"outcome,omitempty"`
	LogicalBase v1.LogicalOperator                                 `protobuf:"varint,3,opt,name=logical_base,json=logicalBase,proto3,enum=common.LogicalOperator" json:"logical_base,omitempty"`
}

func (x *ConsideringContractPrevalidation) Reset() {
	*x = ConsideringContractPrevalidation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsideringContractPrevalidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsideringContractPrevalidation) ProtoMessage() {}

func (x *ConsideringContractPrevalidation) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsideringContractPrevalidation.ProtoReflect.Descriptor instead.
func (*ConsideringContractPrevalidation) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{32}
}

func (x *ConsideringContractPrevalidation) GetCondition() []*ConsideringContractPrevalidation_ValidationCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ConsideringContractPrevalidation) GetOutcome() ConsideringContractPrevalidation_ValidationOutcome {
	if x != nil {
		return x.Outcome
	}
	return ConsideringContractPrevalidation_CONSIDERING_CONTRACT_OUTCOME_UNSPECIFIED
}

func (x *ConsideringContractPrevalidation) GetLogicalBase() v1.LogicalOperator {
	if x != nil {
		return x.LogicalBase
	}
	return v1.LogicalOperator(0)
}

type CreatePrevalidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Name of the prevalidation.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Trigger for the prevalidation.
	//
	// Types that are assignable to Trigger:
	//
	//	*CreatePrevalidationRequest_ConsideringContractPrevalidation
	Trigger isCreatePrevalidationRequest_Trigger `protobuf_oneof:"trigger"`
}

func (x *CreatePrevalidationRequest) Reset() {
	*x = CreatePrevalidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePrevalidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrevalidationRequest) ProtoMessage() {}

func (x *CreatePrevalidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrevalidationRequest.ProtoReflect.Descriptor instead.
func (*CreatePrevalidationRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{33}
}

func (x *CreatePrevalidationRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CreatePrevalidationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *CreatePrevalidationRequest) GetTrigger() isCreatePrevalidationRequest_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (x *CreatePrevalidationRequest) GetConsideringContractPrevalidation() *ConsideringContractPrevalidation {
	if x, ok := x.GetTrigger().(*CreatePrevalidationRequest_ConsideringContractPrevalidation); ok {
		return x.ConsideringContractPrevalidation
	}
	return nil
}

type isCreatePrevalidationRequest_Trigger interface {
	isCreatePrevalidationRequest_Trigger()
}

type CreatePrevalidationRequest_ConsideringContractPrevalidation struct {
	ConsideringContractPrevalidation *ConsideringContractPrevalidation `protobuf:"bytes,3,opt,name=considering_contract_prevalidation,json=consideringContractPrevalidation,proto3,oneof"`
}

func (*CreatePrevalidationRequest_ConsideringContractPrevalidation) isCreatePrevalidationRequest_Trigger() {
}

type CreatePrevalidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Prevalidation.
	Prevalidation *Prevalidation `protobuf:"bytes,1,opt,name=prevalidation,proto3" json:"prevalidation,omitempty"`
}

func (x *CreatePrevalidationResponse) Reset() {
	*x = CreatePrevalidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePrevalidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrevalidationResponse) ProtoMessage() {}

func (x *CreatePrevalidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrevalidationResponse.ProtoReflect.Descriptor instead.
func (*CreatePrevalidationResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{34}
}

func (x *CreatePrevalidationResponse) GetPrevalidation() *Prevalidation {
	if x != nil {
		return x.Prevalidation
	}
	return nil
}

type ListPrevalidationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Page number for pagination.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size of the page for pagination.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Potential filters to apply to the list of prevalidations.
	Filters *v1.Filter `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Potential sort to apply to the list of prevalidations.
	SortBy *v1.SortBy `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ListPrevalidationsRequest) Reset() {
	*x = ListPrevalidationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrevalidationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrevalidationsRequest) ProtoMessage() {}

func (x *ListPrevalidationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrevalidationsRequest.ProtoReflect.Descriptor instead.
func (*ListPrevalidationsRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{35}
}

func (x *ListPrevalidationsRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ListPrevalidationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPrevalidationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPrevalidationsRequest) GetFilters() *v1.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListPrevalidationsRequest) GetSortBy() *v1.SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

type ListPrevalidationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of Prevalidations returned.
	Prevalidations []*Prevalidation `protobuf:"bytes,1,rep,name=prevalidations,proto3" json:"prevalidations,omitempty"`
	// Total number of owned prevalidations returned.
	TotalOwnedPrevalidations uint32 `protobuf:"varint,2,opt,name=total_owned_prevalidations,json=totalOwnedPrevalidations,proto3" json:"total_owned_prevalidations,omitempty"`
}

func (x *ListPrevalidationsResponse) Reset() {
	*x = ListPrevalidationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrevalidationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrevalidationsResponse) ProtoMessage() {}

func (x *ListPrevalidationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrevalidationsResponse.ProtoReflect.Descriptor instead.
func (*ListPrevalidationsResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{36}
}

func (x *ListPrevalidationsResponse) GetPrevalidations() []*Prevalidation {
	if x != nil {
		return x.Prevalidations
	}
	return nil
}

func (x *ListPrevalidationsResponse) GetTotalOwnedPrevalidations() uint32 {
	if x != nil {
		return x.TotalOwnedPrevalidations
	}
	return 0
}

type DeletePrevalidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// API Key as a JWT
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Prevalidation ID.
	PrevalidationId string `protobuf:"bytes,2,opt,name=prevalidation_id,json=prevalidationId,proto3" json:"prevalidation_id,omitempty"`
}

func (x *DeletePrevalidationRequest) Reset() {
	*x = DeletePrevalidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePrevalidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrevalidationRequest) ProtoMessage() {}

func (x *DeletePrevalidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrevalidationRequest.ProtoReflect.Descriptor instead.
func (*DeletePrevalidationRequest) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{37}
}

func (x *DeletePrevalidationRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DeletePrevalidationRequest) GetPrevalidationId() string {
	if x != nil {
		return x.PrevalidationId
	}
	return ""
}

type DeletePrevalidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePrevalidationResponse) Reset() {
	*x = DeletePrevalidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePrevalidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrevalidationResponse) ProtoMessage() {}

func (x *DeletePrevalidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrevalidationResponse.ProtoReflect.Descriptor instead.
func (*DeletePrevalidationResponse) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{38}
}

type ListDeliveryHistoryResponse_DeliveryHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Delivery History ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Webhook ID.
	WebhookId string `protobuf:"bytes,2,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	// Event ID.
	EventId string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Owner ID
	OwnerId string `protobuf:"bytes,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Delivery Stage.
	DeliveryStage DeliveryStage `protobuf:"varint,5,opt,name=delivery_stage,json=deliveryStage,proto3,enum=webhook_api.v1.DeliveryStage" json:"delivery_stage,omitempty"`
	// Created Date. Rfc3339 format.
	Created string `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) Reset() {
	*x = ListDeliveryHistoryResponse_DeliveryHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeliveryHistoryResponse_DeliveryHistory) ProtoMessage() {}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeliveryHistoryResponse_DeliveryHistory.ProtoReflect.Descriptor instead.
func (*ListDeliveryHistoryResponse_DeliveryHistory) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{22, 0}
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) GetDeliveryStage() DeliveryStage {
	if x != nil {
		return x.DeliveryStage
	}
	return DeliveryStage_DELIVERY_STAGE_UNSPECIFIED
}

func (x *ListDeliveryHistoryResponse_DeliveryHistory) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

type ConsideringContractPrevalidation_ValidationCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target   ConsideringContractPrevalidation_ValidationTarget `protobuf:"varint,1,opt,name=target,proto3,enum=webhook_api.v1.ConsideringContractPrevalidation_ValidationTarget" json:"target,omitempty"`
	Operator ValidationOperator                                `protobuf:"varint,2,opt,name=operator,proto3,enum=webhook_api.v1.ValidationOperator" json:"operator,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ConsideringContractPrevalidation_ValidationCondition_AmountValue
	Value isConsideringContractPrevalidation_ValidationCondition_Value `protobuf_oneof:"value"`
}

func (x *ConsideringContractPrevalidation_ValidationCondition) Reset() {
	*x = ConsideringContractPrevalidation_ValidationCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webhook_api_v1_webhook_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsideringContractPrevalidation_ValidationCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsideringContractPrevalidation_ValidationCondition) ProtoMessage() {}

func (x *ConsideringContractPrevalidation_ValidationCondition) ProtoReflect() protoreflect.Message {
	mi := &file_webhook_api_v1_webhook_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsideringContractPrevalidation_ValidationCondition.ProtoReflect.Descriptor instead.
func (*ConsideringContractPrevalidation_ValidationCondition) Descriptor() ([]byte, []int) {
	return file_webhook_api_v1_webhook_proto_rawDescGZIP(), []int{32, 0}
}

func (x *ConsideringContractPrevalidation_ValidationCondition) GetTarget() ConsideringContractPrevalidation_ValidationTarget {
	if x != nil {
		return x.Target
	}
	return ConsideringContractPrevalidation_VALIDATION_TARGET_UNSPECIFIED
}

func (x *ConsideringContractPrevalidation_ValidationCondition) GetOperator() ValidationOperator {
	if x != nil {
		return x.Operator
	}
	return ValidationOperator_VALIDATION_OPERATOR_UNSPECIFIED
}

func (m *ConsideringContractPrevalidation_ValidationCondition) GetValue() isConsideringContractPrevalidation_ValidationCondition_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ConsideringContractPrevalidation_ValidationCondition) GetAmountValue() *v1.Amount {
	if x, ok := x.GetValue().(*ConsideringContractPrevalidation_ValidationCondition_AmountValue); ok {
		return x.AmountValue
	}
	return nil
}

type isConsideringContractPrevalidation_ValidationCondition_Value interface {
	isConsideringContractPrevalidation_ValidationCondition_Value()
}

type ConsideringContractPrevalidation_ValidationCondition_AmountValue struct {
	AmountValue *v1.Amount `protobuf:"bytes,3,opt,name=amount_value,json=amountValue,proto3,oneof"`
}

func (*ConsideringContractPrevalidation_ValidationCondition_AmountValue) isConsideringContractPrevalidation_ValidationCondition_Value() {
}

var File_webhook_api_v1_webhook_proto protoreflect.FileDescriptor

var file_webhook_api_v1_webhook_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc,
	0x01, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x4b, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x55, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x38, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x27,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x1f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xf8,
	0x05, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x16, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x14, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x6b, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x6d,
	0x69, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x19, 0x70, 0x72, 0x6f, 0x6d,
	0x69, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x81, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x7e, 0x0a, 0x22, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x1f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x44, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x4b, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x22, 0x78, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0x5f, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7d,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x08, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4f, 0x77, 0x6e, 0x65, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x4e, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x17, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x71, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f,
	0x77, 0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x11, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x22, 0x9f, 0x03, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0xd6, 0x01, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0d,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x5f,
	0x74, 0x61, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x6f, 0x6e, 0x54,
	0x61, 0x62, 0x12, 0x67, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x48, 0x00, 0x52, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xe9, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x1e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x74,
	0x61, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x6f, 0x6e, 0x54, 0x61,
	0x62, 0x12, 0x67, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x48, 0x00, 0x52, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x73,
	0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x28, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x6d, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x21, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72,
	0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x8b, 0x06, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72,
	0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5c, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x42, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x1a, 0xee, 0x01, 0x0a, 0x13, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x59, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x41, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3e, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0c,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x21,
	0x0a, 0x1d, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x27, 0x0a, 0x23, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4e, 0x54,
	0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x28, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x44, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x29,
	0x0a, 0x25, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x44, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x41,
	0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4e,
	0x53, 0x49, 0x44, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x22, 0xd7, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x62,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0d, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0xa1, 0x01,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0e,
	0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x77,
	0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x60, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2a, 0x88, 0x02, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59,
	0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59,
	0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x54,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59,
	0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x54, 0x52, 0x59, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52,
	0x59, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x48, 0x49, 0x52, 0x44, 0x5f, 0x52, 0x45,
	0x54, 0x52, 0x59, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52,
	0x59, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x54, 0x48, 0x5f, 0x52,
	0x45, 0x54, 0x52, 0x59, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x46, 0x54, 0x48, 0x5f, 0x52,
	0x45, 0x54, 0x52, 0x59, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x06, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x07, 0x2a, 0xd6, 0x01,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x49, 0x53, 0x53, 0x4f, 0x52, 0x59, 0x5f,
	0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x2a, 0x0a, 0x26, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41,
	0x43, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x2a, 0x78, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x20,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10,
	0x01, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x02,
	0x2a, 0x6a, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x2a, 0x0a, 0x26, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x01, 0x2a, 0xfc, 0x01, 0x0a,
	0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x1f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x2d, 0x0a,
	0x29, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41,
	0x4e, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x04, 0x12,
	0x2a, 0x0a, 0x26, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e,
	0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x05, 0x32, 0xc9, 0x0a, 0x0a, 0x15,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x12, 0x23, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12,
	0x24, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1b,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2d, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x29, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x5c, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x44, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6e, 0x6f, 0x78, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x73, 0x2f, 0x73, 0x64, 0x6b, 0x2f,
	0x67, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_webhook_api_v1_webhook_proto_rawDescOnce sync.Once
	file_webhook_api_v1_webhook_proto_rawDescData = file_webhook_api_v1_webhook_proto_rawDesc
)

func file_webhook_api_v1_webhook_proto_rawDescGZIP() []byte {
	file_webhook_api_v1_webhook_proto_rawDescOnce.Do(func() {
		file_webhook_api_v1_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(file_webhook_api_v1_webhook_proto_rawDescData)
	})
	return file_webhook_api_v1_webhook_proto_rawDescData
}

var file_webhook_api_v1_webhook_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_webhook_api_v1_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_webhook_api_v1_webhook_proto_goTypes = []interface{}{
	(DeliveryStage)(0),        // 0: webhook_api.v1.DeliveryStage
	(EventType)(0),            // 1: webhook_api.v1.EventType
	(DeliveryMethodType)(0),   // 2: webhook_api.v1.DeliveryMethodType
	(ScheduleReactionType)(0), // 3: webhook_api.v1.ScheduleReactionType
	(ValidationOperator)(0),   // 4: webhook_api.v1.ValidationOperator
	(ConsideringContractPrevalidation_ValidationTarget)(0),  // 5: webhook_api.v1.ConsideringContractPrevalidation.ValidationTarget
	(ConsideringContractPrevalidation_ValidationOutcome)(0), // 6: webhook_api.v1.ConsideringContractPrevalidation.ValidationOutcome
	(*Webhook)(nil),                                              // 7: webhook_api.v1.Webhook
	(*CreateWalletPayload)(nil),                                  // 8: webhook_api.v1.CreateWalletPayload
	(*PromissoryReceivedPayload)(nil),                            // 9: webhook_api.v1.PromissoryReceivedPayload
	(*PingPayload)(nil),                                          // 10: webhook_api.v1.PingPayload
	(*ContractProposalCompletedPayload)(nil),                     // 11: webhook_api.v1.ContractProposalCompletedPayload
	(*ContractPaymentCompletedPayload)(nil),                      // 12: webhook_api.v1.ContractPaymentCompletedPayload
	(*Event)(nil),                                                // 13: webhook_api.v1.Event
	(*CreateWebhookRequest)(nil),                                 // 14: webhook_api.v1.CreateWebhookRequest
	(*CreateWebhookResponse)(nil),                                // 15: webhook_api.v1.CreateWebhookResponse
	(*ListWebhooksRequest)(nil),                                  // 16: webhook_api.v1.ListWebhooksRequest
	(*ListWebhooksResponse)(nil),                                 // 17: webhook_api.v1.ListWebhooksResponse
	(*DeleteWebhookRequest)(nil),                                 // 18: webhook_api.v1.DeleteWebhookRequest
	(*DeleteWebhookResponse)(nil),                                // 19: webhook_api.v1.DeleteWebhookResponse
	(*EventRequest)(nil),                                         // 20: webhook_api.v1.EventRequest
	(*EventResponse)(nil),                                        // 21: webhook_api.v1.EventResponse
	(*ListEventsRequest)(nil),                                    // 22: webhook_api.v1.ListEventsRequest
	(*ListEventsResponse)(nil),                                   // 23: webhook_api.v1.ListEventsResponse
	(*RetryEventRequest)(nil),                                    // 24: webhook_api.v1.RetryEventRequest
	(*RetryEventResponse)(nil),                                   // 25: webhook_api.v1.RetryEventResponse
	(*PingRequest)(nil),                                          // 26: webhook_api.v1.PingRequest
	(*PingResponse)(nil),                                         // 27: webhook_api.v1.PingResponse
	(*ListDeliveryHistoryRequest)(nil),                           // 28: webhook_api.v1.ListDeliveryHistoryRequest
	(*ListDeliveryHistoryResponse)(nil),                          // 29: webhook_api.v1.ListDeliveryHistoryResponse
	(*ScheduledReaction)(nil),                                    // 30: webhook_api.v1.ScheduledReaction
	(*CreateContractReactionPayload)(nil),                        // 31: webhook_api.v1.CreateContractReactionPayload
	(*CreateScheduledReactionRequest)(nil),                       // 32: webhook_api.v1.CreateScheduledReactionRequest
	(*CreateScheduledReactionResponse)(nil),                      // 33: webhook_api.v1.CreateScheduledReactionResponse
	(*ListScheduledReactionsRequest)(nil),                        // 34: webhook_api.v1.ListScheduledReactionsRequest
	(*ListScheduledReactionsResponse)(nil),                       // 35: webhook_api.v1.ListScheduledReactionsResponse
	(*DeleteScheduledReactionRequest)(nil),                       // 36: webhook_api.v1.DeleteScheduledReactionRequest
	(*DeleteScheduledReactionResponse)(nil),                      // 37: webhook_api.v1.DeleteScheduledReactionResponse
	(*Prevalidation)(nil),                                        // 38: webhook_api.v1.Prevalidation
	(*ConsideringContractPrevalidation)(nil),                     // 39: webhook_api.v1.ConsideringContractPrevalidation
	(*CreatePrevalidationRequest)(nil),                           // 40: webhook_api.v1.CreatePrevalidationRequest
	(*CreatePrevalidationResponse)(nil),                          // 41: webhook_api.v1.CreatePrevalidationResponse
	(*ListPrevalidationsRequest)(nil),                            // 42: webhook_api.v1.ListPrevalidationsRequest
	(*ListPrevalidationsResponse)(nil),                           // 43: webhook_api.v1.ListPrevalidationsResponse
	(*DeletePrevalidationRequest)(nil),                           // 44: webhook_api.v1.DeletePrevalidationRequest
	(*DeletePrevalidationResponse)(nil),                          // 45: webhook_api.v1.DeletePrevalidationResponse
	(*ListDeliveryHistoryResponse_DeliveryHistory)(nil),          // 46: webhook_api.v1.ListDeliveryHistoryResponse.DeliveryHistory
	(*ConsideringContractPrevalidation_ValidationCondition)(nil), // 47: webhook_api.v1.ConsideringContractPrevalidation.ValidationCondition
	(*v1.Commitment)(nil),                                        // 48: common.Commitment
	(*v1.Filter)(nil),                                            // 49: common.Filter
	(*v1.SortBy)(nil),                                            // 50: common.SortBy
	(*v1.Condition)(nil),                                         // 51: common.Condition
	(v1.LogicalOperator)(0),                                      // 52: common.LogicalOperator
	(*v1.Amount)(nil),                                            // 53: common.Amount
}
var file_webhook_api_v1_webhook_proto_depIdxs = []int32{
	1,  // 0: webhook_api.v1.Webhook.supported_events:type_name -> webhook_api.v1.EventType
	2,  // 1: webhook_api.v1.Webhook.delivery_method:type_name -> webhook_api.v1.DeliveryMethodType
	48, // 2: webhook_api.v1.ContractProposalCompletedPayload.commitments:type_name -> common.Commitment
	48, // 3: webhook_api.v1.ContractPaymentCompletedPayload.commitments:type_name -> common.Commitment
	1,  // 4: webhook_api.v1.Event.event_type:type_name -> webhook_api.v1.EventType
	8,  // 5: webhook_api.v1.Event.wallet_created_payload:type_name -> webhook_api.v1.CreateWalletPayload
	9,  // 6: webhook_api.v1.Event.promissory_received_payload:type_name -> webhook_api.v1.PromissoryReceivedPayload
	10, // 7: webhook_api.v1.Event.ping_payload:type_name -> webhook_api.v1.PingPayload
	11, // 8: webhook_api.v1.Event.contract_proposal_completed_payload:type_name -> webhook_api.v1.ContractProposalCompletedPayload
	12, // 9: webhook_api.v1.Event.contract_payment_completed_payload:type_name -> webhook_api.v1.ContractPaymentCompletedPayload
	1,  // 10: webhook_api.v1.CreateWebhookRequest.supported_events:type_name -> webhook_api.v1.EventType
	2,  // 11: webhook_api.v1.CreateWebhookRequest.delivery_method:type_name -> webhook_api.v1.DeliveryMethodType
	7,  // 12: webhook_api.v1.CreateWebhookResponse.webhook:type_name -> webhook_api.v1.Webhook
	7,  // 13: webhook_api.v1.ListWebhooksResponse.webhooks:type_name -> webhook_api.v1.Webhook
	13, // 14: webhook_api.v1.EventRequest.event:type_name -> webhook_api.v1.Event
	49, // 15: webhook_api.v1.ListEventsRequest.filters:type_name -> common.Filter
	50, // 16: webhook_api.v1.ListEventsRequest.sort_by:type_name -> common.SortBy
	13, // 17: webhook_api.v1.ListEventsResponse.events:type_name -> webhook_api.v1.Event
	49, // 18: webhook_api.v1.ListDeliveryHistoryRequest.filters:type_name -> common.Filter
	50, // 19: webhook_api.v1.ListDeliveryHistoryRequest.sort_by:type_name -> common.SortBy
	46, // 20: webhook_api.v1.ListDeliveryHistoryResponse.delivery_history:type_name -> webhook_api.v1.ListDeliveryHistoryResponse.DeliveryHistory
	3,  // 21: webhook_api.v1.ScheduledReaction.reaction_type:type_name -> webhook_api.v1.ScheduleReactionType
	31, // 22: webhook_api.v1.ScheduledReaction.create_contract_payload:type_name -> webhook_api.v1.CreateContractReactionPayload
	48, // 23: webhook_api.v1.CreateContractReactionPayload.commitments:type_name -> common.Commitment
	51, // 24: webhook_api.v1.CreateContractReactionPayload.conditions:type_name -> common.Condition
	3,  // 25: webhook_api.v1.CreateScheduledReactionRequest.reaction_type:type_name -> webhook_api.v1.ScheduleReactionType
	31, // 26: webhook_api.v1.CreateScheduledReactionRequest.create_contract_payload:type_name -> webhook_api.v1.CreateContractReactionPayload
	30, // 27: webhook_api.v1.CreateScheduledReactionResponse.scheduled_reaction:type_name -> webhook_api.v1.ScheduledReaction
	49, // 28: webhook_api.v1.ListScheduledReactionsRequest.filters:type_name -> common.Filter
	50, // 29: webhook_api.v1.ListScheduledReactionsRequest.sort_by:type_name -> common.SortBy
	30, // 30: webhook_api.v1.ListScheduledReactionsResponse.scheduled_reactions:type_name -> webhook_api.v1.ScheduledReaction
	39, // 31: webhook_api.v1.Prevalidation.considering_contract_prevalidation:type_name -> webhook_api.v1.ConsideringContractPrevalidation
	47, // 32: webhook_api.v1.ConsideringContractPrevalidation.condition:type_name -> webhook_api.v1.ConsideringContractPrevalidation.ValidationCondition
	6,  // 33: webhook_api.v1.ConsideringContractPrevalidation.outcome:type_name -> webhook_api.v1.ConsideringContractPrevalidation.ValidationOutcome
	52, // 34: webhook_api.v1.ConsideringContractPrevalidation.logical_base:type_name -> common.LogicalOperator
	39, // 35: webhook_api.v1.CreatePrevalidationRequest.considering_contract_prevalidation:type_name -> webhook_api.v1.ConsideringContractPrevalidation
	38, // 36: webhook_api.v1.CreatePrevalidationResponse.prevalidation:type_name -> webhook_api.v1.Prevalidation
	49, // 37: webhook_api.v1.ListPrevalidationsRequest.filters:type_name -> common.Filter
	50, // 38: webhook_api.v1.ListPrevalidationsRequest.sort_by:type_name -> common.SortBy
	38, // 39: webhook_api.v1.ListPrevalidationsResponse.prevalidations:type_name -> webhook_api.v1.Prevalidation
	0,  // 40: webhook_api.v1.ListDeliveryHistoryResponse.DeliveryHistory.delivery_stage:type_name -> webhook_api.v1.DeliveryStage
	5,  // 41: webhook_api.v1.ConsideringContractPrevalidation.ValidationCondition.target:type_name -> webhook_api.v1.ConsideringContractPrevalidation.ValidationTarget
	4,  // 42: webhook_api.v1.ConsideringContractPrevalidation.ValidationCondition.operator:type_name -> webhook_api.v1.ValidationOperator
	53, // 43: webhook_api.v1.ConsideringContractPrevalidation.ValidationCondition.amount_value:type_name -> common.Amount
	14, // 44: webhook_api.v1.WebhookManagerService.CreateWebhook:input_type -> webhook_api.v1.CreateWebhookRequest
	16, // 45: webhook_api.v1.WebhookManagerService.ListWebhooks:input_type -> webhook_api.v1.ListWebhooksRequest
	18, // 46: webhook_api.v1.WebhookManagerService.DeleteWebhook:input_type -> webhook_api.v1.DeleteWebhookRequest
	22, // 47: webhook_api.v1.WebhookManagerService.ListEvents:input_type -> webhook_api.v1.ListEventsRequest
	24, // 48: webhook_api.v1.WebhookManagerService.RetryEvent:input_type -> webhook_api.v1.RetryEventRequest
	26, // 49: webhook_api.v1.WebhookManagerService.Ping:input_type -> webhook_api.v1.PingRequest
	28, // 50: webhook_api.v1.WebhookManagerService.ListDeliveryHistory:input_type -> webhook_api.v1.ListDeliveryHistoryRequest
	32, // 51: webhook_api.v1.WebhookManagerService.CreateScheduledReaction:input_type -> webhook_api.v1.CreateScheduledReactionRequest
	34, // 52: webhook_api.v1.WebhookManagerService.ListScheduledReactions:input_type -> webhook_api.v1.ListScheduledReactionsRequest
	36, // 53: webhook_api.v1.WebhookManagerService.DeleteScheduledReaction:input_type -> webhook_api.v1.DeleteScheduledReactionRequest
	40, // 54: webhook_api.v1.WebhookManagerService.CreatePrevalidation:input_type -> webhook_api.v1.CreatePrevalidationRequest
	42, // 55: webhook_api.v1.WebhookManagerService.ListPrevalidations:input_type -> webhook_api.v1.ListPrevalidationsRequest
	44, // 56: webhook_api.v1.WebhookManagerService.DeletePrevalidation:input_type -> webhook_api.v1.DeletePrevalidationRequest
	20, // 57: webhook_api.v1.EventConsumerService.Event:input_type -> webhook_api.v1.EventRequest
	15, // 58: webhook_api.v1.WebhookManagerService.CreateWebhook:output_type -> webhook_api.v1.CreateWebhookResponse
	17, // 59: webhook_api.v1.WebhookManagerService.ListWebhooks:output_type -> webhook_api.v1.ListWebhooksResponse
	19, // 60: webhook_api.v1.WebhookManagerService.DeleteWebhook:output_type -> webhook_api.v1.DeleteWebhookResponse
	23, // 61: webhook_api.v1.WebhookManagerService.ListEvents:output_type -> webhook_api.v1.ListEventsResponse
	25, // 62: webhook_api.v1.WebhookManagerService.RetryEvent:output_type -> webhook_api.v1.RetryEventResponse
	27, // 63: webhook_api.v1.WebhookManagerService.Ping:output_type -> webhook_api.v1.PingResponse
	29, // 64: webhook_api.v1.WebhookManagerService.ListDeliveryHistory:output_type -> webhook_api.v1.ListDeliveryHistoryResponse
	33, // 65: webhook_api.v1.WebhookManagerService.CreateScheduledReaction:output_type -> webhook_api.v1.CreateScheduledReactionResponse
	35, // 66: webhook_api.v1.WebhookManagerService.ListScheduledReactions:output_type -> webhook_api.v1.ListScheduledReactionsResponse
	37, // 67: webhook_api.v1.WebhookManagerService.DeleteScheduledReaction:output_type -> webhook_api.v1.DeleteScheduledReactionResponse
	41, // 68: webhook_api.v1.WebhookManagerService.CreatePrevalidation:output_type -> webhook_api.v1.CreatePrevalidationResponse
	43, // 69: webhook_api.v1.WebhookManagerService.ListPrevalidations:output_type -> webhook_api.v1.ListPrevalidationsResponse
	45, // 70: webhook_api.v1.WebhookManagerService.DeletePrevalidation:output_type -> webhook_api.v1.DeletePrevalidationResponse
	21, // 71: webhook_api.v1.EventConsumerService.Event:output_type -> webhook_api.v1.EventResponse
	58, // [58:72] is the sub-list for method output_type
	44, // [44:58] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_webhook_api_v1_webhook_proto_init() }
func file_webhook_api_v1_webhook_proto_init() {
	if File_webhook_api_v1_webhook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webhook_api_v1_webhook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Webhook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromissoryReceivedPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractProposalCompletedPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractPaymentCompletedPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeliveryHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeliveryHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContractReactionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScheduledReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScheduledReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScheduledReactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScheduledReactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduledReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduledReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prevalidation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsideringContractPrevalidation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePrevalidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePrevalidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrevalidationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrevalidationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrevalidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrevalidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeliveryHistoryResponse_DeliveryHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webhook_api_v1_webhook_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsideringContractPrevalidation_ValidationCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_webhook_api_v1_webhook_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Event_WalletCreatedPayload)(nil),
		(*Event_PromissoryReceivedPayload)(nil),
		(*Event_PingPayload)(nil),
		(*Event_ContractProposalCompletedPayload)(nil),
		(*Event_ContractPaymentCompletedPayload)(nil),
	}
	file_webhook_api_v1_webhook_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*ScheduledReaction_CreateContractPayload)(nil),
	}
	file_webhook_api_v1_webhook_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*CreateScheduledReactionRequest_CreateContractPayload)(nil),
	}
	file_webhook_api_v1_webhook_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*Prevalidation_ConsideringContractPrevalidation)(nil),
	}
	file_webhook_api_v1_webhook_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*CreatePrevalidationRequest_ConsideringContractPrevalidation)(nil),
	}
	file_webhook_api_v1_webhook_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*ConsideringContractPrevalidation_ValidationCondition_AmountValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webhook_api_v1_webhook_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_webhook_api_v1_webhook_proto_goTypes,
		DependencyIndexes: file_webhook_api_v1_webhook_proto_depIdxs,
		EnumInfos:         file_webhook_api_v1_webhook_proto_enumTypes,
		MessageInfos:      file_webhook_api_v1_webhook_proto_msgTypes,
	}.Build()
	File_webhook_api_v1_webhook_proto = out.File
	file_webhook_api_v1_webhook_proto_rawDesc = nil
	file_webhook_api_v1_webhook_proto_goTypes = nil
	file_webhook_api_v1_webhook_proto_depIdxs = nil
}
