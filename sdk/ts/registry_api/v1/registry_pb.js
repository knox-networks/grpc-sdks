/* eslint-disable */
/*Generated by GenDocu.com*/
// source: registry_api/v1/registry.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.registry_api.v1.CreateCredentialIssuerRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.CreateCredentialIssuerResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.CreateRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.CreateResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.CreateStatusListEntryRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.CreateStatusListEntryResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.CredentialIssuer', null, global);
goog.exportSymbol('proto.registry_api.v1.DidDocumentMetadata', null, global);
goog.exportSymbol('proto.registry_api.v1.GetCredentialIssuerRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.GetCredentialIssuerResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.GetStatusListCredentialRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.GetStatusListCredentialResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.IssuerStatus', null, global);
goog.exportSymbol('proto.registry_api.v1.PostalAddress', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolutionMetadata', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolutionMetadataDidUrl', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolutionOption', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolutionOptionAccept', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolveRepresentationRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolveRepresentationResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolveRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.ResolveResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.RevokeRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.RevokeResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.StatusListEntry', null, global);
goog.exportSymbol('proto.registry_api.v1.StatusPurpose', null, global);
goog.exportSymbol('proto.registry_api.v1.UpdateCredentialIssuerRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.UpdateCredentialIssuerResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.UpdateRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.UpdateResponse', null, global);
goog.exportSymbol('proto.registry_api.v1.UpdateStatusListEntryRequest', null, global);
goog.exportSymbol('proto.registry_api.v1.UpdateStatusListEntryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CreateRequest.displayName = 'proto.registry_api.v1.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CreateResponse.displayName = 'proto.registry_api.v1.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolveRequest.displayName = 'proto.registry_api.v1.ResolveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolveRepresentationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolveRepresentationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolveRepresentationRequest.displayName = 'proto.registry_api.v1.ResolveRepresentationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolutionOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolutionOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolutionOption.displayName = 'proto.registry_api.v1.ResolutionOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.DidDocumentMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.DidDocumentMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.DidDocumentMetadata.displayName = 'proto.registry_api.v1.DidDocumentMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolveResponse.displayName = 'proto.registry_api.v1.ResolveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolveRepresentationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolveRepresentationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolveRepresentationResponse.displayName = 'proto.registry_api.v1.ResolveRepresentationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolutionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolutionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolutionMetadata.displayName = 'proto.registry_api.v1.ResolutionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.ResolutionMetadataDidUrl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.ResolutionMetadataDidUrl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.ResolutionMetadataDidUrl.displayName = 'proto.registry_api.v1.ResolutionMetadataDidUrl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.UpdateRequest.displayName = 'proto.registry_api.v1.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.UpdateResponse.displayName = 'proto.registry_api.v1.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.RevokeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.RevokeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.RevokeRequest.displayName = 'proto.registry_api.v1.RevokeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.RevokeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.RevokeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.RevokeResponse.displayName = 'proto.registry_api.v1.RevokeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.PostalAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.PostalAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.PostalAddress.displayName = 'proto.registry_api.v1.PostalAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CredentialIssuer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CredentialIssuer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CredentialIssuer.displayName = 'proto.registry_api.v1.CredentialIssuer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CreateCredentialIssuerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CreateCredentialIssuerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CreateCredentialIssuerRequest.displayName = 'proto.registry_api.v1.CreateCredentialIssuerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CreateCredentialIssuerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CreateCredentialIssuerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CreateCredentialIssuerResponse.displayName = 'proto.registry_api.v1.CreateCredentialIssuerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.GetCredentialIssuerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.GetCredentialIssuerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.GetCredentialIssuerRequest.displayName = 'proto.registry_api.v1.GetCredentialIssuerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.GetCredentialIssuerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.GetCredentialIssuerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.GetCredentialIssuerResponse.displayName = 'proto.registry_api.v1.GetCredentialIssuerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.UpdateCredentialIssuerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.UpdateCredentialIssuerRequest.displayName = 'proto.registry_api.v1.UpdateCredentialIssuerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.UpdateCredentialIssuerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.UpdateCredentialIssuerResponse.displayName = 'proto.registry_api.v1.UpdateCredentialIssuerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.StatusListEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.StatusListEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.StatusListEntry.displayName = 'proto.registry_api.v1.StatusListEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CreateStatusListEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CreateStatusListEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CreateStatusListEntryRequest.displayName = 'proto.registry_api.v1.CreateStatusListEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.CreateStatusListEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.CreateStatusListEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.CreateStatusListEntryResponse.displayName = 'proto.registry_api.v1.CreateStatusListEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.GetStatusListCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.GetStatusListCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.GetStatusListCredentialRequest.displayName = 'proto.registry_api.v1.GetStatusListCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.GetStatusListCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.GetStatusListCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.GetStatusListCredentialResponse.displayName = 'proto.registry_api.v1.GetStatusListCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.UpdateStatusListEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.UpdateStatusListEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.UpdateStatusListEntryRequest.displayName = 'proto.registry_api.v1.UpdateStatusListEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry_api.v1.UpdateStatusListEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry_api.v1.UpdateStatusListEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry_api.v1.UpdateStatusListEntryResponse.displayName = 'proto.registry_api.v1.UpdateStatusListEntryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    document: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CreateRequest}
 */
proto.registry_api.v1.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CreateRequest;
  return proto.registry_api.v1.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CreateRequest}
 */
proto.registry_api.v1.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.registry_api.v1.CreateRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CreateRequest} returns this
 */
proto.registry_api.v1.CreateRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string document = 2;
 * @return {string}
 */
proto.registry_api.v1.CreateRequest.prototype.getDocument = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CreateRequest} returns this
 */
proto.registry_api.v1.CreateRequest.prototype.setDocument = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CreateResponse}
 */
proto.registry_api.v1.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CreateResponse;
  return proto.registry_api.v1.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CreateResponse}
 */
proto.registry_api.v1.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resolutionoption: (f = msg.getResolutionoption()) && proto.registry_api.v1.ResolutionOption.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolveRequest}
 */
proto.registry_api.v1.ResolveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolveRequest;
  return proto.registry_api.v1.ResolveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolveRequest}
 */
proto.registry_api.v1.ResolveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = new proto.registry_api.v1.ResolutionOption;
      reader.readMessage(value,proto.registry_api.v1.ResolutionOption.deserializeBinaryFromReader);
      msg.setResolutionoption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResolutionoption();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.registry_api.v1.ResolutionOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.registry_api.v1.ResolveRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolveRequest} returns this
 */
proto.registry_api.v1.ResolveRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResolutionOption resolutionOption = 2;
 * @return {?proto.registry_api.v1.ResolutionOption}
 */
proto.registry_api.v1.ResolveRequest.prototype.getResolutionoption = function() {
  return /** @type{?proto.registry_api.v1.ResolutionOption} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.ResolutionOption, 2));
};


/**
 * @param {?proto.registry_api.v1.ResolutionOption|undefined} value
 * @return {!proto.registry_api.v1.ResolveRequest} returns this
*/
proto.registry_api.v1.ResolveRequest.prototype.setResolutionoption = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveRequest} returns this
 */
proto.registry_api.v1.ResolveRequest.prototype.clearResolutionoption = function() {
  return this.setResolutionoption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveRequest.prototype.hasResolutionoption = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolveRepresentationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolveRepresentationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveRepresentationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resolutionoption: (f = msg.getResolutionoption()) && proto.registry_api.v1.ResolutionOption.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolveRepresentationRequest}
 */
proto.registry_api.v1.ResolveRepresentationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolveRepresentationRequest;
  return proto.registry_api.v1.ResolveRepresentationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolveRepresentationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolveRepresentationRequest}
 */
proto.registry_api.v1.ResolveRepresentationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = new proto.registry_api.v1.ResolutionOption;
      reader.readMessage(value,proto.registry_api.v1.ResolutionOption.deserializeBinaryFromReader);
      msg.setResolutionoption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolveRepresentationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolveRepresentationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveRepresentationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResolutionoption();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.registry_api.v1.ResolutionOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolveRepresentationRequest} returns this
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResolutionOption resolutionOption = 2;
 * @return {?proto.registry_api.v1.ResolutionOption}
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.getResolutionoption = function() {
  return /** @type{?proto.registry_api.v1.ResolutionOption} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.ResolutionOption, 2));
};


/**
 * @param {?proto.registry_api.v1.ResolutionOption|undefined} value
 * @return {!proto.registry_api.v1.ResolveRepresentationRequest} returns this
*/
proto.registry_api.v1.ResolveRepresentationRequest.prototype.setResolutionoption = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveRepresentationRequest} returns this
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.clearResolutionoption = function() {
  return this.setResolutionoption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveRepresentationRequest.prototype.hasResolutionoption = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolutionOption.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolutionOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolutionOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolutionOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    accept: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolutionOption}
 */
proto.registry_api.v1.ResolutionOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolutionOption;
  return proto.registry_api.v1.ResolutionOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolutionOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolutionOption}
 */
proto.registry_api.v1.ResolutionOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.registry_api.v1.ResolutionOptionAccept} */ (reader.readEnum());
      msg.setAccept(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolutionOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolutionOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolutionOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolutionOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccept();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional ResolutionOptionAccept accept = 1;
 * @return {!proto.registry_api.v1.ResolutionOptionAccept}
 */
proto.registry_api.v1.ResolutionOption.prototype.getAccept = function() {
  return /** @type {!proto.registry_api.v1.ResolutionOptionAccept} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.registry_api.v1.ResolutionOptionAccept} value
 * @return {!proto.registry_api.v1.ResolutionOption} returns this
 */
proto.registry_api.v1.ResolutionOption.prototype.setAccept = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.DidDocumentMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.DidDocumentMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.DidDocumentMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.DidDocumentMetadata}
 */
proto.registry_api.v1.DidDocumentMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.DidDocumentMetadata;
  return proto.registry_api.v1.DidDocumentMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.DidDocumentMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.DidDocumentMetadata}
 */
proto.registry_api.v1.DidDocumentMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.DidDocumentMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.DidDocumentMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.DidDocumentMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp created = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.registry_api.v1.DidDocumentMetadata} returns this
*/
proto.registry_api.v1.DidDocumentMetadata.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.DidDocumentMetadata} returns this
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.registry_api.v1.DidDocumentMetadata} returns this
*/
proto.registry_api.v1.DidDocumentMetadata.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.DidDocumentMetadata} returns this
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.DidDocumentMetadata.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    didresolutionmetadata: (f = msg.getDidresolutionmetadata()) && proto.registry_api.v1.ResolutionMetadata.toObject(includeInstance, f),
    diddocument: (f = msg.getDiddocument()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    diddocumentmetadata: (f = msg.getDiddocumentmetadata()) && proto.registry_api.v1.DidDocumentMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolveResponse}
 */
proto.registry_api.v1.ResolveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolveResponse;
  return proto.registry_api.v1.ResolveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolveResponse}
 */
proto.registry_api.v1.ResolveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry_api.v1.ResolutionMetadata;
      reader.readMessage(value,proto.registry_api.v1.ResolutionMetadata.deserializeBinaryFromReader);
      msg.setDidresolutionmetadata(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDiddocument(value);
      break;
    case 3:
      var value = new proto.registry_api.v1.DidDocumentMetadata;
      reader.readMessage(value,proto.registry_api.v1.DidDocumentMetadata.deserializeBinaryFromReader);
      msg.setDiddocumentmetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDidresolutionmetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry_api.v1.ResolutionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getDiddocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDiddocumentmetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.registry_api.v1.DidDocumentMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResolutionMetadata didResolutionMetadata = 1;
 * @return {?proto.registry_api.v1.ResolutionMetadata}
 */
proto.registry_api.v1.ResolveResponse.prototype.getDidresolutionmetadata = function() {
  return /** @type{?proto.registry_api.v1.ResolutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.ResolutionMetadata, 1));
};


/**
 * @param {?proto.registry_api.v1.ResolutionMetadata|undefined} value
 * @return {!proto.registry_api.v1.ResolveResponse} returns this
*/
proto.registry_api.v1.ResolveResponse.prototype.setDidresolutionmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveResponse} returns this
 */
proto.registry_api.v1.ResolveResponse.prototype.clearDidresolutionmetadata = function() {
  return this.setDidresolutionmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveResponse.prototype.hasDidresolutionmetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct didDocument = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.registry_api.v1.ResolveResponse.prototype.getDiddocument = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.registry_api.v1.ResolveResponse} returns this
*/
proto.registry_api.v1.ResolveResponse.prototype.setDiddocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveResponse} returns this
 */
proto.registry_api.v1.ResolveResponse.prototype.clearDiddocument = function() {
  return this.setDiddocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveResponse.prototype.hasDiddocument = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DidDocumentMetadata didDocumentMetadata = 3;
 * @return {?proto.registry_api.v1.DidDocumentMetadata}
 */
proto.registry_api.v1.ResolveResponse.prototype.getDiddocumentmetadata = function() {
  return /** @type{?proto.registry_api.v1.DidDocumentMetadata} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.DidDocumentMetadata, 3));
};


/**
 * @param {?proto.registry_api.v1.DidDocumentMetadata|undefined} value
 * @return {!proto.registry_api.v1.ResolveResponse} returns this
*/
proto.registry_api.v1.ResolveResponse.prototype.setDiddocumentmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveResponse} returns this
 */
proto.registry_api.v1.ResolveResponse.prototype.clearDiddocumentmetadata = function() {
  return this.setDiddocumentmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveResponse.prototype.hasDiddocumentmetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolveRepresentationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolveRepresentationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveRepresentationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    diddocumentstream: jspb.Message.getFieldWithDefault(msg, 1, ""),
    didresolutionmetadata: (f = msg.getDidresolutionmetadata()) && proto.registry_api.v1.ResolutionMetadata.toObject(includeInstance, f),
    diddocumentmetadata: (f = msg.getDiddocumentmetadata()) && proto.registry_api.v1.DidDocumentMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse}
 */
proto.registry_api.v1.ResolveRepresentationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolveRepresentationResponse;
  return proto.registry_api.v1.ResolveRepresentationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolveRepresentationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse}
 */
proto.registry_api.v1.ResolveRepresentationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiddocumentstream(value);
      break;
    case 2:
      var value = new proto.registry_api.v1.ResolutionMetadata;
      reader.readMessage(value,proto.registry_api.v1.ResolutionMetadata.deserializeBinaryFromReader);
      msg.setDidresolutionmetadata(value);
      break;
    case 3:
      var value = new proto.registry_api.v1.DidDocumentMetadata;
      reader.readMessage(value,proto.registry_api.v1.DidDocumentMetadata.deserializeBinaryFromReader);
      msg.setDiddocumentmetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolveRepresentationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolveRepresentationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolveRepresentationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiddocumentstream();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDidresolutionmetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.registry_api.v1.ResolutionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getDiddocumentmetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.registry_api.v1.DidDocumentMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string didDocumentStream = 1;
 * @return {string}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.getDiddocumentstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse} returns this
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.setDiddocumentstream = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResolutionMetadata didResolutionMetadata = 2;
 * @return {?proto.registry_api.v1.ResolutionMetadata}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.getDidresolutionmetadata = function() {
  return /** @type{?proto.registry_api.v1.ResolutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.ResolutionMetadata, 2));
};


/**
 * @param {?proto.registry_api.v1.ResolutionMetadata|undefined} value
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse} returns this
*/
proto.registry_api.v1.ResolveRepresentationResponse.prototype.setDidresolutionmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse} returns this
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.clearDidresolutionmetadata = function() {
  return this.setDidresolutionmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.hasDidresolutionmetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DidDocumentMetadata didDocumentMetadata = 3;
 * @return {?proto.registry_api.v1.DidDocumentMetadata}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.getDiddocumentmetadata = function() {
  return /** @type{?proto.registry_api.v1.DidDocumentMetadata} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.DidDocumentMetadata, 3));
};


/**
 * @param {?proto.registry_api.v1.DidDocumentMetadata|undefined} value
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse} returns this
*/
proto.registry_api.v1.ResolveRepresentationResponse.prototype.setDiddocumentmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolveRepresentationResponse} returns this
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.clearDiddocumentmetadata = function() {
  return this.setDiddocumentmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolveRepresentationResponse.prototype.hasDiddocumentmetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolutionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolutionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolutionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    contenttype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 2, 0),
    didurl: (f = msg.getDidurl()) && proto.registry_api.v1.ResolutionMetadataDidUrl.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolutionMetadata}
 */
proto.registry_api.v1.ResolutionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolutionMetadata;
  return proto.registry_api.v1.ResolutionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolutionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolutionMetadata}
 */
proto.registry_api.v1.ResolutionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContenttype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 3:
      var value = new proto.registry_api.v1.ResolutionMetadataDidUrl;
      reader.readMessage(value,proto.registry_api.v1.ResolutionMetadataDidUrl.deserializeBinaryFromReader);
      msg.setDidurl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolutionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolutionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolutionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDidurl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.registry_api.v1.ResolutionMetadataDidUrl.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string contentType = 1;
 * @return {string}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.getContenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.setContenttype = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.clearContenttype = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.hasContenttype = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 duration = 2;
 * @return {number}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResolutionMetadataDidUrl didUrl = 3;
 * @return {?proto.registry_api.v1.ResolutionMetadataDidUrl}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.getDidurl = function() {
  return /** @type{?proto.registry_api.v1.ResolutionMetadataDidUrl} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.ResolutionMetadataDidUrl, 3));
};


/**
 * @param {?proto.registry_api.v1.ResolutionMetadataDidUrl|undefined} value
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
*/
proto.registry_api.v1.ResolutionMetadata.prototype.setDidurl = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.clearDidurl = function() {
  return this.setDidurl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.hasDidurl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string error = 4;
 * @return {string}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.setError = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.registry_api.v1.ResolutionMetadata} returns this
 */
proto.registry_api.v1.ResolutionMetadata.prototype.clearError = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.ResolutionMetadata.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.ResolutionMetadataDidUrl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.ResolutionMetadataDidUrl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    methodname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    methodspecificid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.ResolutionMetadataDidUrl}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.ResolutionMetadataDidUrl;
  return proto.registry_api.v1.ResolutionMetadataDidUrl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.ResolutionMetadataDidUrl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.ResolutionMetadataDidUrl}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodspecificid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.ResolutionMetadataDidUrl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.ResolutionMetadataDidUrl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethodname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethodspecificid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolutionMetadataDidUrl} returns this
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string methodName = 2;
 * @return {string}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.getMethodname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolutionMetadataDidUrl} returns this
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.setMethodname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string methodSpecificId = 3;
 * @return {string}
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.getMethodspecificid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.ResolutionMetadataDidUrl} returns this
 */
proto.registry_api.v1.ResolutionMetadataDidUrl.prototype.setMethodspecificid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    document: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.UpdateRequest}
 */
proto.registry_api.v1.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.UpdateRequest;
  return proto.registry_api.v1.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.UpdateRequest}
 */
proto.registry_api.v1.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.registry_api.v1.UpdateRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.UpdateRequest} returns this
 */
proto.registry_api.v1.UpdateRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string document = 2;
 * @return {string}
 */
proto.registry_api.v1.UpdateRequest.prototype.getDocument = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.UpdateRequest} returns this
 */
proto.registry_api.v1.UpdateRequest.prototype.setDocument = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.UpdateResponse}
 */
proto.registry_api.v1.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.UpdateResponse;
  return proto.registry_api.v1.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.UpdateResponse}
 */
proto.registry_api.v1.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.RevokeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.RevokeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.RevokeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.RevokeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    document: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.RevokeRequest}
 */
proto.registry_api.v1.RevokeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.RevokeRequest;
  return proto.registry_api.v1.RevokeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.RevokeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.RevokeRequest}
 */
proto.registry_api.v1.RevokeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.RevokeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.RevokeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.RevokeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.RevokeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.registry_api.v1.RevokeRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.RevokeRequest} returns this
 */
proto.registry_api.v1.RevokeRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string document = 2;
 * @return {string}
 */
proto.registry_api.v1.RevokeRequest.prototype.getDocument = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.RevokeRequest} returns this
 */
proto.registry_api.v1.RevokeRequest.prototype.setDocument = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.RevokeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.RevokeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.RevokeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.RevokeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.RevokeResponse}
 */
proto.registry_api.v1.RevokeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.RevokeResponse;
  return proto.registry_api.v1.RevokeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.RevokeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.RevokeResponse}
 */
proto.registry_api.v1.RevokeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.RevokeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.RevokeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.RevokeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.RevokeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.PostalAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.PostalAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.PostalAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.PostalAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    city: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    street: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.PostalAddress}
 */
proto.registry_api.v1.PostalAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.PostalAddress;
  return proto.registry_api.v1.PostalAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.PostalAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.PostalAddress}
 */
proto.registry_api.v1.PostalAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.PostalAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.PostalAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.PostalAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.PostalAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStreet();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.registry_api.v1.PostalAddress.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.PostalAddress} returns this
 */
proto.registry_api.v1.PostalAddress.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string city = 2;
 * @return {string}
 */
proto.registry_api.v1.PostalAddress.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.PostalAddress} returns this
 */
proto.registry_api.v1.PostalAddress.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.registry_api.v1.PostalAddress.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.PostalAddress} returns this
 */
proto.registry_api.v1.PostalAddress.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string postal_code = 4;
 * @return {string}
 */
proto.registry_api.v1.PostalAddress.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.PostalAddress} returns this
 */
proto.registry_api.v1.PostalAddress.prototype.setPostalCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string street = 5;
 * @return {string}
 */
proto.registry_api.v1.PostalAddress.prototype.getStreet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.PostalAddress} returns this
 */
proto.registry_api.v1.PostalAddress.prototype.setStreet = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CredentialIssuer.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CredentialIssuer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CredentialIssuer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CredentialIssuer.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerDid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuerName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    website: jspb.Message.getFieldWithDefault(msg, 4, ""),
    postalAddress: (f = msg.getPostalAddress()) && proto.registry_api.v1.PostalAddress.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CredentialIssuer}
 */
proto.registry_api.v1.CredentialIssuer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CredentialIssuer;
  return proto.registry_api.v1.CredentialIssuer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CredentialIssuer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CredentialIssuer}
 */
proto.registry_api.v1.CredentialIssuer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 5:
      var value = new proto.registry_api.v1.PostalAddress;
      reader.readMessage(value,proto.registry_api.v1.PostalAddress.deserializeBinaryFromReader);
      msg.setPostalAddress(value);
      break;
    case 6:
      var value = /** @type {!proto.registry_api.v1.IssuerStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CredentialIssuer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CredentialIssuer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CredentialIssuer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CredentialIssuer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuerName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPostalAddress();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.registry_api.v1.PostalAddress.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string issuer_did = 1;
 * @return {string}
 */
proto.registry_api.v1.CredentialIssuer.prototype.getIssuerDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
 */
proto.registry_api.v1.CredentialIssuer.prototype.setIssuerDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string issuer_name = 2;
 * @return {string}
 */
proto.registry_api.v1.CredentialIssuer.prototype.getIssuerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
 */
proto.registry_api.v1.CredentialIssuer.prototype.setIssuerName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.registry_api.v1.CredentialIssuer.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
 */
proto.registry_api.v1.CredentialIssuer.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string website = 4;
 * @return {string}
 */
proto.registry_api.v1.CredentialIssuer.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
 */
proto.registry_api.v1.CredentialIssuer.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional PostalAddress postal_address = 5;
 * @return {?proto.registry_api.v1.PostalAddress}
 */
proto.registry_api.v1.CredentialIssuer.prototype.getPostalAddress = function() {
  return /** @type{?proto.registry_api.v1.PostalAddress} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.PostalAddress, 5));
};


/**
 * @param {?proto.registry_api.v1.PostalAddress|undefined} value
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
*/
proto.registry_api.v1.CredentialIssuer.prototype.setPostalAddress = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
 */
proto.registry_api.v1.CredentialIssuer.prototype.clearPostalAddress = function() {
  return this.setPostalAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.CredentialIssuer.prototype.hasPostalAddress = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional IssuerStatus status = 6;
 * @return {!proto.registry_api.v1.IssuerStatus}
 */
proto.registry_api.v1.CredentialIssuer.prototype.getStatus = function() {
  return /** @type {!proto.registry_api.v1.IssuerStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.registry_api.v1.IssuerStatus} value
 * @return {!proto.registry_api.v1.CredentialIssuer} returns this
 */
proto.registry_api.v1.CredentialIssuer.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CreateCredentialIssuerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CreateCredentialIssuerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialIssuer: (f = msg.getCredentialIssuer()) && proto.registry_api.v1.CredentialIssuer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CreateCredentialIssuerRequest}
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CreateCredentialIssuerRequest;
  return proto.registry_api.v1.CreateCredentialIssuerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CreateCredentialIssuerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CreateCredentialIssuerRequest}
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry_api.v1.CredentialIssuer;
      reader.readMessage(value,proto.registry_api.v1.CredentialIssuer.deserializeBinaryFromReader);
      msg.setCredentialIssuer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CreateCredentialIssuerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CreateCredentialIssuerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialIssuer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry_api.v1.CredentialIssuer.serializeBinaryToWriter
    );
  }
};


/**
 * optional CredentialIssuer credential_issuer = 1;
 * @return {?proto.registry_api.v1.CredentialIssuer}
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.prototype.getCredentialIssuer = function() {
  return /** @type{?proto.registry_api.v1.CredentialIssuer} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.CredentialIssuer, 1));
};


/**
 * @param {?proto.registry_api.v1.CredentialIssuer|undefined} value
 * @return {!proto.registry_api.v1.CreateCredentialIssuerRequest} returns this
*/
proto.registry_api.v1.CreateCredentialIssuerRequest.prototype.setCredentialIssuer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.CreateCredentialIssuerRequest} returns this
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.prototype.clearCredentialIssuer = function() {
  return this.setCredentialIssuer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.CreateCredentialIssuerRequest.prototype.hasCredentialIssuer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CreateCredentialIssuerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CreateCredentialIssuerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CreateCredentialIssuerResponse}
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CreateCredentialIssuerResponse;
  return proto.registry_api.v1.CreateCredentialIssuerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CreateCredentialIssuerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CreateCredentialIssuerResponse}
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CreateCredentialIssuerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CreateCredentialIssuerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry_api.v1.CreateCredentialIssuerResponse} returns this
 */
proto.registry_api.v1.CreateCredentialIssuerResponse.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.GetCredentialIssuerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.GetCredentialIssuerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.GetCredentialIssuerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetCredentialIssuerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerDid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.GetCredentialIssuerRequest}
 */
proto.registry_api.v1.GetCredentialIssuerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.GetCredentialIssuerRequest;
  return proto.registry_api.v1.GetCredentialIssuerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.GetCredentialIssuerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.GetCredentialIssuerRequest}
 */
proto.registry_api.v1.GetCredentialIssuerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerDid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.GetCredentialIssuerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.GetCredentialIssuerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.GetCredentialIssuerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetCredentialIssuerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string issuer_did = 1;
 * @return {string}
 */
proto.registry_api.v1.GetCredentialIssuerRequest.prototype.getIssuerDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.GetCredentialIssuerRequest} returns this
 */
proto.registry_api.v1.GetCredentialIssuerRequest.prototype.setIssuerDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.GetCredentialIssuerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.GetCredentialIssuerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.GetCredentialIssuerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetCredentialIssuerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialIssuer: (f = msg.getCredentialIssuer()) && proto.registry_api.v1.CredentialIssuer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.GetCredentialIssuerResponse}
 */
proto.registry_api.v1.GetCredentialIssuerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.GetCredentialIssuerResponse;
  return proto.registry_api.v1.GetCredentialIssuerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.GetCredentialIssuerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.GetCredentialIssuerResponse}
 */
proto.registry_api.v1.GetCredentialIssuerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry_api.v1.CredentialIssuer;
      reader.readMessage(value,proto.registry_api.v1.CredentialIssuer.deserializeBinaryFromReader);
      msg.setCredentialIssuer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.GetCredentialIssuerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.GetCredentialIssuerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.GetCredentialIssuerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetCredentialIssuerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialIssuer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry_api.v1.CredentialIssuer.serializeBinaryToWriter
    );
  }
};


/**
 * optional CredentialIssuer credential_issuer = 1;
 * @return {?proto.registry_api.v1.CredentialIssuer}
 */
proto.registry_api.v1.GetCredentialIssuerResponse.prototype.getCredentialIssuer = function() {
  return /** @type{?proto.registry_api.v1.CredentialIssuer} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.CredentialIssuer, 1));
};


/**
 * @param {?proto.registry_api.v1.CredentialIssuer|undefined} value
 * @return {!proto.registry_api.v1.GetCredentialIssuerResponse} returns this
*/
proto.registry_api.v1.GetCredentialIssuerResponse.prototype.setCredentialIssuer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.GetCredentialIssuerResponse} returns this
 */
proto.registry_api.v1.GetCredentialIssuerResponse.prototype.clearCredentialIssuer = function() {
  return this.setCredentialIssuer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.GetCredentialIssuerResponse.prototype.hasCredentialIssuer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.UpdateCredentialIssuerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.UpdateCredentialIssuerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialIssuer: (f = msg.getCredentialIssuer()) && proto.registry_api.v1.CredentialIssuer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerRequest}
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.UpdateCredentialIssuerRequest;
  return proto.registry_api.v1.UpdateCredentialIssuerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.UpdateCredentialIssuerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerRequest}
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry_api.v1.CredentialIssuer;
      reader.readMessage(value,proto.registry_api.v1.CredentialIssuer.deserializeBinaryFromReader);
      msg.setCredentialIssuer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.UpdateCredentialIssuerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.UpdateCredentialIssuerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialIssuer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry_api.v1.CredentialIssuer.serializeBinaryToWriter
    );
  }
};


/**
 * optional CredentialIssuer credential_issuer = 1;
 * @return {?proto.registry_api.v1.CredentialIssuer}
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.prototype.getCredentialIssuer = function() {
  return /** @type{?proto.registry_api.v1.CredentialIssuer} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.CredentialIssuer, 1));
};


/**
 * @param {?proto.registry_api.v1.CredentialIssuer|undefined} value
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerRequest} returns this
*/
proto.registry_api.v1.UpdateCredentialIssuerRequest.prototype.setCredentialIssuer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerRequest} returns this
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.prototype.clearCredentialIssuer = function() {
  return this.setCredentialIssuer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.UpdateCredentialIssuerRequest.prototype.hasCredentialIssuer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.UpdateCredentialIssuerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.UpdateCredentialIssuerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerResponse}
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.UpdateCredentialIssuerResponse;
  return proto.registry_api.v1.UpdateCredentialIssuerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.UpdateCredentialIssuerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerResponse}
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.UpdateCredentialIssuerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.UpdateCredentialIssuerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry_api.v1.UpdateCredentialIssuerResponse} returns this
 */
proto.registry_api.v1.UpdateCredentialIssuerResponse.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.StatusListEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.StatusListEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.StatusListEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.StatusListEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialIssuerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statusPurpose: jspb.Message.getFieldWithDefault(msg, 3, 0),
    credentialType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    statusListIndex: jspb.Message.getFieldWithDefault(msg, 5, 0),
    statusListCredentialId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.StatusListEntry}
 */
proto.registry_api.v1.StatusListEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.StatusListEntry;
  return proto.registry_api.v1.StatusListEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.StatusListEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.StatusListEntry}
 */
proto.registry_api.v1.StatusListEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialIssuerId(value);
      break;
    case 3:
      var value = /** @type {!proto.registry_api.v1.StatusPurpose} */ (reader.readEnum());
      msg.setStatusPurpose(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatusListIndex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusListCredentialId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.StatusListEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.StatusListEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.StatusListEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.StatusListEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialIssuerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatusPurpose();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCredentialType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatusListIndex();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStatusListCredentialId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.registry_api.v1.StatusListEntry.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_issuer_id = 2;
 * @return {string}
 */
proto.registry_api.v1.StatusListEntry.prototype.getCredentialIssuerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setCredentialIssuerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StatusPurpose status_purpose = 3;
 * @return {!proto.registry_api.v1.StatusPurpose}
 */
proto.registry_api.v1.StatusListEntry.prototype.getStatusPurpose = function() {
  return /** @type {!proto.registry_api.v1.StatusPurpose} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.registry_api.v1.StatusPurpose} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setStatusPurpose = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string credential_type = 4;
 * @return {string}
 */
proto.registry_api.v1.StatusListEntry.prototype.getCredentialType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setCredentialType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 status_list_index = 5;
 * @return {number}
 */
proto.registry_api.v1.StatusListEntry.prototype.getStatusListIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setStatusListIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string status_list_credential_id = 6;
 * @return {string}
 */
proto.registry_api.v1.StatusListEntry.prototype.getStatusListCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setStatusListCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool status = 7;
 * @return {boolean}
 */
proto.registry_api.v1.StatusListEntry.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry_api.v1.StatusListEntry} returns this
 */
proto.registry_api.v1.StatusListEntry.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CreateStatusListEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CreateStatusListEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateStatusListEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialIssuerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statusPurpose: jspb.Message.getFieldWithDefault(msg, 3, 0),
    credentialType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CreateStatusListEntryRequest;
  return proto.registry_api.v1.CreateStatusListEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CreateStatusListEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialIssuerId(value);
      break;
    case 3:
      var value = /** @type {!proto.registry_api.v1.StatusPurpose} */ (reader.readEnum());
      msg.setStatusPurpose(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CreateStatusListEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CreateStatusListEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateStatusListEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialIssuerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatusPurpose();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCredentialType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_issuer_id = 2;
 * @return {string}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.getCredentialIssuerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.setCredentialIssuerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StatusPurpose status_purpose = 3;
 * @return {!proto.registry_api.v1.StatusPurpose}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.getStatusPurpose = function() {
  return /** @type {!proto.registry_api.v1.StatusPurpose} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.registry_api.v1.StatusPurpose} value
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.setStatusPurpose = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string credential_type = 4;
 * @return {string}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.getCredentialType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.setCredentialType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool status = 5;
 * @return {boolean}
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry_api.v1.CreateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.CreateStatusListEntryRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.CreateStatusListEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.CreateStatusListEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.CreateStatusListEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateStatusListEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusListEntry: (f = msg.getStatusListEntry()) && proto.registry_api.v1.StatusListEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.CreateStatusListEntryResponse}
 */
proto.registry_api.v1.CreateStatusListEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.CreateStatusListEntryResponse;
  return proto.registry_api.v1.CreateStatusListEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.CreateStatusListEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.CreateStatusListEntryResponse}
 */
proto.registry_api.v1.CreateStatusListEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry_api.v1.StatusListEntry;
      reader.readMessage(value,proto.registry_api.v1.StatusListEntry.deserializeBinaryFromReader);
      msg.setStatusListEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.CreateStatusListEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.CreateStatusListEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.CreateStatusListEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.CreateStatusListEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusListEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry_api.v1.StatusListEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional StatusListEntry status_list_entry = 1;
 * @return {?proto.registry_api.v1.StatusListEntry}
 */
proto.registry_api.v1.CreateStatusListEntryResponse.prototype.getStatusListEntry = function() {
  return /** @type{?proto.registry_api.v1.StatusListEntry} */ (
    jspb.Message.getWrapperField(this, proto.registry_api.v1.StatusListEntry, 1));
};


/**
 * @param {?proto.registry_api.v1.StatusListEntry|undefined} value
 * @return {!proto.registry_api.v1.CreateStatusListEntryResponse} returns this
*/
proto.registry_api.v1.CreateStatusListEntryResponse.prototype.setStatusListEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry_api.v1.CreateStatusListEntryResponse} returns this
 */
proto.registry_api.v1.CreateStatusListEntryResponse.prototype.clearStatusListEntry = function() {
  return this.setStatusListEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry_api.v1.CreateStatusListEntryResponse.prototype.hasStatusListEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.GetStatusListCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.GetStatusListCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.GetStatusListCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetStatusListCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusListCredentialId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.GetStatusListCredentialRequest}
 */
proto.registry_api.v1.GetStatusListCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.GetStatusListCredentialRequest;
  return proto.registry_api.v1.GetStatusListCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.GetStatusListCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.GetStatusListCredentialRequest}
 */
proto.registry_api.v1.GetStatusListCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusListCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.GetStatusListCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.GetStatusListCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.GetStatusListCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetStatusListCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusListCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status_list_credential_id = 1;
 * @return {string}
 */
proto.registry_api.v1.GetStatusListCredentialRequest.prototype.getStatusListCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.GetStatusListCredentialRequest} returns this
 */
proto.registry_api.v1.GetStatusListCredentialRequest.prototype.setStatusListCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.GetStatusListCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.GetStatusListCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.GetStatusListCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetStatusListCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusListCredential: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.GetStatusListCredentialResponse}
 */
proto.registry_api.v1.GetStatusListCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.GetStatusListCredentialResponse;
  return proto.registry_api.v1.GetStatusListCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.GetStatusListCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.GetStatusListCredentialResponse}
 */
proto.registry_api.v1.GetStatusListCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusListCredential(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.GetStatusListCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.GetStatusListCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.GetStatusListCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.GetStatusListCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusListCredential();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status_list_credential = 1;
 * @return {string}
 */
proto.registry_api.v1.GetStatusListCredentialResponse.prototype.getStatusListCredential = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.GetStatusListCredentialResponse} returns this
 */
proto.registry_api.v1.GetStatusListCredentialResponse.prototype.setStatusListCredential = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.UpdateStatusListEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.UpdateStatusListEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialIssuerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statusPurpose: jspb.Message.getFieldWithDefault(msg, 3, 0),
    credentialType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.UpdateStatusListEntryRequest;
  return proto.registry_api.v1.UpdateStatusListEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.UpdateStatusListEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialIssuerId(value);
      break;
    case 3:
      var value = /** @type {!proto.registry_api.v1.StatusPurpose} */ (reader.readEnum());
      msg.setStatusPurpose(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.UpdateStatusListEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.UpdateStatusListEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialIssuerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatusPurpose();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCredentialType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_issuer_id = 2;
 * @return {string}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.getCredentialIssuerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.setCredentialIssuerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StatusPurpose status_purpose = 3;
 * @return {!proto.registry_api.v1.StatusPurpose}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.getStatusPurpose = function() {
  return /** @type {!proto.registry_api.v1.StatusPurpose} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.registry_api.v1.StatusPurpose} value
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.setStatusPurpose = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string credential_type = 4;
 * @return {string}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.getCredentialType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.setCredentialType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool status = 5;
 * @return {boolean}
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry_api.v1.UpdateStatusListEntryRequest} returns this
 */
proto.registry_api.v1.UpdateStatusListEntryRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry_api.v1.UpdateStatusListEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry_api.v1.UpdateStatusListEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry_api.v1.UpdateStatusListEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateStatusListEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry_api.v1.UpdateStatusListEntryResponse}
 */
proto.registry_api.v1.UpdateStatusListEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry_api.v1.UpdateStatusListEntryResponse;
  return proto.registry_api.v1.UpdateStatusListEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry_api.v1.UpdateStatusListEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry_api.v1.UpdateStatusListEntryResponse}
 */
proto.registry_api.v1.UpdateStatusListEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry_api.v1.UpdateStatusListEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry_api.v1.UpdateStatusListEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry_api.v1.UpdateStatusListEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry_api.v1.UpdateStatusListEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.registry_api.v1.ResolutionOptionAccept = {
  RESOLUTION_OPTION_ACCEPT_UNSPECIFIED: 0,
  RESOLUTION_OPTION_ACCEPT_JSON_LD: 1
};

/**
 * @enum {number}
 */
proto.registry_api.v1.IssuerStatus = {
  ISSUER_STATUS_UNSPECIFIED: 0,
  ISSUER_STATUS_ACTIVE: 1,
  ISSUER_STATUS_SUSPENDED: 2
};

/**
 * @enum {number}
 */
proto.registry_api.v1.StatusPurpose = {
  STATUS_PURPOSE_UNSPECIFIED: 0,
  STATUS_PURPOSE_REVOCATION: 1,
  STATUS_PURPOSE_SUSPENSION: 2
};

goog.object.extend(exports, proto.registry_api.v1);
