/* eslint-disable */
/*Generated by GenDocu.com*/
// source: authority_api/v1/authority.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_v1_common_pb = require('../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
goog.exportSymbol('proto.authority_api.v1.AuthorizeRequest', null, global);
goog.exportSymbol('proto.authority_api.v1.AuthorizeResponse', null, global);
goog.exportSymbol('proto.authority_api.v1.GetIssuerLimitsRequest', null, global);
goog.exportSymbol('proto.authority_api.v1.GetIssuerLimitsResponse', null, global);
goog.exportSymbol('proto.authority_api.v1.RedeemRequest', null, global);
goog.exportSymbol('proto.authority_api.v1.RedeemResponse', null, global);
goog.exportSymbol('proto.authority_api.v1.SetIssuerLimitRequest', null, global);
goog.exportSymbol('proto.authority_api.v1.SetIssuerLimitResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.SetIssuerLimitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.SetIssuerLimitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.SetIssuerLimitRequest.displayName = 'proto.authority_api.v1.SetIssuerLimitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.SetIssuerLimitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.SetIssuerLimitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.SetIssuerLimitResponse.displayName = 'proto.authority_api.v1.SetIssuerLimitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.GetIssuerLimitsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.GetIssuerLimitsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.GetIssuerLimitsRequest.displayName = 'proto.authority_api.v1.GetIssuerLimitsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.GetIssuerLimitsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authority_api.v1.GetIssuerLimitsResponse.repeatedFields_, null);
};
goog.inherits(proto.authority_api.v1.GetIssuerLimitsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.GetIssuerLimitsResponse.displayName = 'proto.authority_api.v1.GetIssuerLimitsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.AuthorizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.AuthorizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.AuthorizeRequest.displayName = 'proto.authority_api.v1.AuthorizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.AuthorizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.AuthorizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.AuthorizeResponse.displayName = 'proto.authority_api.v1.AuthorizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.RedeemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.RedeemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.RedeemRequest.displayName = 'proto.authority_api.v1.RedeemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authority_api.v1.RedeemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authority_api.v1.RedeemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authority_api.v1.RedeemResponse.displayName = 'proto.authority_api.v1.RedeemResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.SetIssuerLimitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.SetIssuerLimitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.SetIssuerLimitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: (f = msg.getLimit()) && common_v1_common_pb.Amount.toObject(includeInstance, f),
    issuerPublicKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.SetIssuerLimitRequest}
 */
proto.authority_api.v1.SetIssuerLimitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.SetIssuerLimitRequest;
  return proto.authority_api.v1.SetIssuerLimitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.SetIssuerLimitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.SetIssuerLimitRequest}
 */
proto.authority_api.v1.SetIssuerLimitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.Amount;
      reader.readMessage(value,common_v1_common_pb.Amount.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.SetIssuerLimitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.SetIssuerLimitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.SetIssuerLimitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getIssuerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional common.Amount limit = 1;
 * @return {?proto.common.Amount}
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.getLimit = function() {
  return /** @type{?proto.common.Amount} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Amount, 1));
};


/**
 * @param {?proto.common.Amount|undefined} value
 * @return {!proto.authority_api.v1.SetIssuerLimitRequest} returns this
*/
proto.authority_api.v1.SetIssuerLimitRequest.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authority_api.v1.SetIssuerLimitRequest} returns this
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string issuer_public_key = 2;
 * @return {string}
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.getIssuerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authority_api.v1.SetIssuerLimitRequest} returns this
 */
proto.authority_api.v1.SetIssuerLimitRequest.prototype.setIssuerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.SetIssuerLimitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.SetIssuerLimitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.SetIssuerLimitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: (f = msg.getLimit()) && common_v1_common_pb.Amount.toObject(includeInstance, f),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.SetIssuerLimitResponse}
 */
proto.authority_api.v1.SetIssuerLimitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.SetIssuerLimitResponse;
  return proto.authority_api.v1.SetIssuerLimitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.SetIssuerLimitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.SetIssuerLimitResponse}
 */
proto.authority_api.v1.SetIssuerLimitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.Amount;
      reader.readMessage(value,common_v1_common_pb.Amount.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.SetIssuerLimitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.SetIssuerLimitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.SetIssuerLimitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional common.Amount limit = 1;
 * @return {?proto.common.Amount}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.getLimit = function() {
  return /** @type{?proto.common.Amount} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Amount, 1));
};


/**
 * @param {?proto.common.Amount|undefined} value
 * @return {!proto.authority_api.v1.SetIssuerLimitResponse} returns this
*/
proto.authority_api.v1.SetIssuerLimitResponse.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authority_api.v1.SetIssuerLimitResponse} returns this
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes signature = 2;
 * @return {!(string|Uint8Array)}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature = 2;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.authority_api.v1.SetIssuerLimitResponse} returns this
 */
proto.authority_api.v1.SetIssuerLimitResponse.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.GetIssuerLimitsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.GetIssuerLimitsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.GetIssuerLimitsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.GetIssuerLimitsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerPublicKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.GetIssuerLimitsRequest}
 */
proto.authority_api.v1.GetIssuerLimitsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.GetIssuerLimitsRequest;
  return proto.authority_api.v1.GetIssuerLimitsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.GetIssuerLimitsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.GetIssuerLimitsRequest}
 */
proto.authority_api.v1.GetIssuerLimitsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.GetIssuerLimitsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.GetIssuerLimitsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.GetIssuerLimitsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.GetIssuerLimitsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string issuer_public_key = 2;
 * @return {string}
 */
proto.authority_api.v1.GetIssuerLimitsRequest.prototype.getIssuerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authority_api.v1.GetIssuerLimitsRequest} returns this
 */
proto.authority_api.v1.GetIssuerLimitsRequest.prototype.setIssuerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authority_api.v1.GetIssuerLimitsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.GetIssuerLimitsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.GetIssuerLimitsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.GetIssuerLimitsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    limitList: jspb.Message.toObjectList(msg.getLimitList(),
    common_v1_common_pb.Amount.toObject, includeInstance),
    issuerPublicKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.GetIssuerLimitsResponse}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.GetIssuerLimitsResponse;
  return proto.authority_api.v1.GetIssuerLimitsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.GetIssuerLimitsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.GetIssuerLimitsResponse}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.Amount;
      reader.readMessage(value,common_v1_common_pb.Amount.deserializeBinaryFromReader);
      msg.addLimit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.GetIssuerLimitsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.GetIssuerLimitsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.GetIssuerLimitsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimitList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_v1_common_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getIssuerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated common.Amount limit = 1;
 * @return {!Array<!proto.common.Amount>}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.getLimitList = function() {
  return /** @type{!Array<!proto.common.Amount>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_v1_common_pb.Amount, 1));
};


/**
 * @param {!Array<!proto.common.Amount>} value
 * @return {!proto.authority_api.v1.GetIssuerLimitsResponse} returns this
*/
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.setLimitList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.common.Amount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.Amount}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.addLimit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.common.Amount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authority_api.v1.GetIssuerLimitsResponse} returns this
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.clearLimitList = function() {
  return this.setLimitList([]);
};


/**
 * optional string issuer_public_key = 2;
 * @return {string}
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.getIssuerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authority_api.v1.GetIssuerLimitsResponse} returns this
 */
proto.authority_api.v1.GetIssuerLimitsResponse.prototype.setIssuerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.AuthorizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.AuthorizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.AuthorizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.AuthorizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    promissoryFile: msg.getPromissoryFile_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.AuthorizeRequest}
 */
proto.authority_api.v1.AuthorizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.AuthorizeRequest;
  return proto.authority_api.v1.AuthorizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.AuthorizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.AuthorizeRequest}
 */
proto.authority_api.v1.AuthorizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPromissoryFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.AuthorizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.AuthorizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.AuthorizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.AuthorizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromissoryFile_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes promissory_file = 1;
 * @return {!(string|Uint8Array)}
 */
proto.authority_api.v1.AuthorizeRequest.prototype.getPromissoryFile = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes promissory_file = 1;
 * This is a type-conversion wrapper around `getPromissoryFile()`
 * @return {string}
 */
proto.authority_api.v1.AuthorizeRequest.prototype.getPromissoryFile_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPromissoryFile()));
};


/**
 * optional bytes promissory_file = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPromissoryFile()`
 * @return {!Uint8Array}
 */
proto.authority_api.v1.AuthorizeRequest.prototype.getPromissoryFile_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPromissoryFile()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.authority_api.v1.AuthorizeRequest} returns this
 */
proto.authority_api.v1.AuthorizeRequest.prototype.setPromissoryFile = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.AuthorizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.AuthorizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.AuthorizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.AuthorizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    promissoryFile: msg.getPromissoryFile_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.AuthorizeResponse}
 */
proto.authority_api.v1.AuthorizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.AuthorizeResponse;
  return proto.authority_api.v1.AuthorizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.AuthorizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.AuthorizeResponse}
 */
proto.authority_api.v1.AuthorizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPromissoryFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.AuthorizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.AuthorizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.AuthorizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.AuthorizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromissoryFile_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes promissory_file = 1;
 * @return {!(string|Uint8Array)}
 */
proto.authority_api.v1.AuthorizeResponse.prototype.getPromissoryFile = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes promissory_file = 1;
 * This is a type-conversion wrapper around `getPromissoryFile()`
 * @return {string}
 */
proto.authority_api.v1.AuthorizeResponse.prototype.getPromissoryFile_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPromissoryFile()));
};


/**
 * optional bytes promissory_file = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPromissoryFile()`
 * @return {!Uint8Array}
 */
proto.authority_api.v1.AuthorizeResponse.prototype.getPromissoryFile_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPromissoryFile()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.authority_api.v1.AuthorizeResponse} returns this
 */
proto.authority_api.v1.AuthorizeResponse.prototype.setPromissoryFile = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.RedeemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.RedeemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.RedeemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.RedeemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    promissoryFile: msg.getPromissoryFile_asB64(),
    verifier: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.RedeemRequest}
 */
proto.authority_api.v1.RedeemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.RedeemRequest;
  return proto.authority_api.v1.RedeemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.RedeemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.RedeemRequest}
 */
proto.authority_api.v1.RedeemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPromissoryFile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.RedeemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.RedeemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.RedeemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.RedeemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromissoryFile_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVerifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes promissory_file = 1;
 * @return {!(string|Uint8Array)}
 */
proto.authority_api.v1.RedeemRequest.prototype.getPromissoryFile = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes promissory_file = 1;
 * This is a type-conversion wrapper around `getPromissoryFile()`
 * @return {string}
 */
proto.authority_api.v1.RedeemRequest.prototype.getPromissoryFile_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPromissoryFile()));
};


/**
 * optional bytes promissory_file = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPromissoryFile()`
 * @return {!Uint8Array}
 */
proto.authority_api.v1.RedeemRequest.prototype.getPromissoryFile_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPromissoryFile()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.authority_api.v1.RedeemRequest} returns this
 */
proto.authority_api.v1.RedeemRequest.prototype.setPromissoryFile = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string verifier = 2;
 * @return {string}
 */
proto.authority_api.v1.RedeemRequest.prototype.getVerifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authority_api.v1.RedeemRequest} returns this
 */
proto.authority_api.v1.RedeemRequest.prototype.setVerifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authority_api.v1.RedeemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authority_api.v1.RedeemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authority_api.v1.RedeemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.RedeemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: (f = msg.getLimit()) && common_v1_common_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authority_api.v1.RedeemResponse}
 */
proto.authority_api.v1.RedeemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authority_api.v1.RedeemResponse;
  return proto.authority_api.v1.RedeemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authority_api.v1.RedeemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authority_api.v1.RedeemResponse}
 */
proto.authority_api.v1.RedeemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.Amount;
      reader.readMessage(value,common_v1_common_pb.Amount.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authority_api.v1.RedeemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authority_api.v1.RedeemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authority_api.v1.RedeemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authority_api.v1.RedeemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Amount limit = 1;
 * @return {?proto.common.Amount}
 */
proto.authority_api.v1.RedeemResponse.prototype.getLimit = function() {
  return /** @type{?proto.common.Amount} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Amount, 1));
};


/**
 * @param {?proto.common.Amount|undefined} value
 * @return {!proto.authority_api.v1.RedeemResponse} returns this
*/
proto.authority_api.v1.RedeemResponse.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authority_api.v1.RedeemResponse} returns this
 */
proto.authority_api.v1.RedeemResponse.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authority_api.v1.RedeemResponse.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.authority_api.v1);
