/* eslint-disable */
/*Generated by GenDocu.com*/
// source: issuer_api/v1/issuer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_v1_common_pb = require('../../common/v1/common_pb.js');
goog.object.extend(proto, common_v1_common_pb);
goog.exportSymbol('proto.issuer_api.v1.AuthenticateRequest', null, global);
goog.exportSymbol('proto.issuer_api.v1.AuthenticateResponse', null, global);
goog.exportSymbol('proto.issuer_api.v1.GetRolesRequest', null, global);
goog.exportSymbol('proto.issuer_api.v1.GetRolesResponse', null, global);
goog.exportSymbol('proto.issuer_api.v1.IssueRequest', null, global);
goog.exportSymbol('proto.issuer_api.v1.IssueResponse', null, global);
goog.exportSymbol('proto.issuer_api.v1.SetAssetAuthoritiesRequest', null, global);
goog.exportSymbol('proto.issuer_api.v1.SetAssetAuthoritiesResponse', null, global);
goog.exportSymbol('proto.issuer_api.v1.SetAssetDenominationsRequest', null, global);
goog.exportSymbol('proto.issuer_api.v1.SetAssetDenominationsResponse', null, global);
goog.exportSymbol('proto.issuer_api.v1.SetRoleRequest', null, global);
goog.exportSymbol('proto.issuer_api.v1.SetRoleResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.IssueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.IssueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.IssueRequest.displayName = 'proto.issuer_api.v1.IssueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.IssueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.IssueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.IssueResponse.displayName = 'proto.issuer_api.v1.IssueResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.AuthenticateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.AuthenticateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.AuthenticateRequest.displayName = 'proto.issuer_api.v1.AuthenticateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.AuthenticateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.AuthenticateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.AuthenticateResponse.displayName = 'proto.issuer_api.v1.AuthenticateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.GetRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.GetRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.GetRolesRequest.displayName = 'proto.issuer_api.v1.GetRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.GetRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.GetRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.GetRolesResponse.displayName = 'proto.issuer_api.v1.GetRolesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.SetRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.SetRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.SetRoleRequest.displayName = 'proto.issuer_api.v1.SetRoleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.SetRoleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.SetRoleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.SetRoleResponse.displayName = 'proto.issuer_api.v1.SetRoleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.SetAssetDenominationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.SetAssetDenominationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.SetAssetDenominationsRequest.displayName = 'proto.issuer_api.v1.SetAssetDenominationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.SetAssetDenominationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.SetAssetDenominationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.SetAssetDenominationsResponse.displayName = 'proto.issuer_api.v1.SetAssetDenominationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.SetAssetAuthoritiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.SetAssetAuthoritiesRequest.displayName = 'proto.issuer_api.v1.SetAssetAuthoritiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.issuer_api.v1.SetAssetAuthoritiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.issuer_api.v1.SetAssetAuthoritiesResponse.displayName = 'proto.issuer_api.v1.SetAssetAuthoritiesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.IssueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.IssueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.IssueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.IssueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authenticationSignature: (f = msg.getAuthenticationSignature()) && common_v1_common_pb.AuthenticationSignature.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && common_v1_common_pb.Amount.toObject(includeInstance, f),
    authority: (f = msg.getAuthority()) && common_v1_common_pb.DynamicVerifier.toObject(includeInstance, f),
    recipient: (f = msg.getRecipient()) && common_v1_common_pb.DynamicVerifier.toObject(includeInstance, f),
    distribution: (f = msg.getDistribution()) && common_v1_common_pb.Distribution.toObject(includeInstance, f),
    session: jspb.Message.getFieldWithDefault(msg, 6, ""),
    signatureSystem: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.IssueRequest}
 */
proto.issuer_api.v1.IssueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.IssueRequest;
  return proto.issuer_api.v1.IssueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.IssueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.IssueRequest}
 */
proto.issuer_api.v1.IssueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.AuthenticationSignature;
      reader.readMessage(value,common_v1_common_pb.AuthenticationSignature.deserializeBinaryFromReader);
      msg.setAuthenticationSignature(value);
      break;
    case 2:
      var value = new common_v1_common_pb.Amount;
      reader.readMessage(value,common_v1_common_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = new common_v1_common_pb.DynamicVerifier;
      reader.readMessage(value,common_v1_common_pb.DynamicVerifier.deserializeBinaryFromReader);
      msg.setAuthority(value);
      break;
    case 5:
      var value = new common_v1_common_pb.DynamicVerifier;
      reader.readMessage(value,common_v1_common_pb.DynamicVerifier.deserializeBinaryFromReader);
      msg.setRecipient(value);
      break;
    case 4:
      var value = new common_v1_common_pb.Distribution;
      reader.readMessage(value,common_v1_common_pb.Distribution.deserializeBinaryFromReader);
      msg.setDistribution(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 7:
      var value = /** @type {!proto.common.SignatureSystem} */ (reader.readEnum());
      msg.setSignatureSystem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.IssueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.IssueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.IssueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.IssueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthenticationSignature();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.AuthenticationSignature.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v1_common_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAuthority();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_v1_common_pb.DynamicVerifier.serializeBinaryToWriter
    );
  }
  f = message.getRecipient();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_v1_common_pb.DynamicVerifier.serializeBinaryToWriter
    );
  }
  f = message.getDistribution();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_v1_common_pb.Distribution.serializeBinaryToWriter
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSignatureSystem();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional common.AuthenticationSignature authentication_signature = 1;
 * @return {?proto.common.AuthenticationSignature}
 */
proto.issuer_api.v1.IssueRequest.prototype.getAuthenticationSignature = function() {
  return /** @type{?proto.common.AuthenticationSignature} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.AuthenticationSignature, 1));
};


/**
 * @param {?proto.common.AuthenticationSignature|undefined} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
*/
proto.issuer_api.v1.IssueRequest.prototype.setAuthenticationSignature = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.clearAuthenticationSignature = function() {
  return this.setAuthenticationSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.IssueRequest.prototype.hasAuthenticationSignature = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Amount amount = 2;
 * @return {?proto.common.Amount}
 */
proto.issuer_api.v1.IssueRequest.prototype.getAmount = function() {
  return /** @type{?proto.common.Amount} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Amount, 2));
};


/**
 * @param {?proto.common.Amount|undefined} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
*/
proto.issuer_api.v1.IssueRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.IssueRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.DynamicVerifier authority = 3;
 * @return {?proto.common.DynamicVerifier}
 */
proto.issuer_api.v1.IssueRequest.prototype.getAuthority = function() {
  return /** @type{?proto.common.DynamicVerifier} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.DynamicVerifier, 3));
};


/**
 * @param {?proto.common.DynamicVerifier|undefined} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
*/
proto.issuer_api.v1.IssueRequest.prototype.setAuthority = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.clearAuthority = function() {
  return this.setAuthority(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.IssueRequest.prototype.hasAuthority = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.DynamicVerifier recipient = 5;
 * @return {?proto.common.DynamicVerifier}
 */
proto.issuer_api.v1.IssueRequest.prototype.getRecipient = function() {
  return /** @type{?proto.common.DynamicVerifier} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.DynamicVerifier, 5));
};


/**
 * @param {?proto.common.DynamicVerifier|undefined} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
*/
proto.issuer_api.v1.IssueRequest.prototype.setRecipient = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.clearRecipient = function() {
  return this.setRecipient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.IssueRequest.prototype.hasRecipient = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.Distribution distribution = 4;
 * @return {?proto.common.Distribution}
 */
proto.issuer_api.v1.IssueRequest.prototype.getDistribution = function() {
  return /** @type{?proto.common.Distribution} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Distribution, 4));
};


/**
 * @param {?proto.common.Distribution|undefined} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
*/
proto.issuer_api.v1.IssueRequest.prototype.setDistribution = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.clearDistribution = function() {
  return this.setDistribution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.IssueRequest.prototype.hasDistribution = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string session = 6;
 * @return {string}
 */
proto.issuer_api.v1.IssueRequest.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional common.SignatureSystem signature_system = 7;
 * @return {!proto.common.SignatureSystem}
 */
proto.issuer_api.v1.IssueRequest.prototype.getSignatureSystem = function() {
  return /** @type {!proto.common.SignatureSystem} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.common.SignatureSystem} value
 * @return {!proto.issuer_api.v1.IssueRequest} returns this
 */
proto.issuer_api.v1.IssueRequest.prototype.setSignatureSystem = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.IssueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.IssueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.IssueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.IssueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    numPromissoryFiles: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.IssueResponse}
 */
proto.issuer_api.v1.IssueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.IssueResponse;
  return proto.issuer_api.v1.IssueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.IssueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.IssueResponse}
 */
proto.issuer_api.v1.IssueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPromissoryFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.IssueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.IssueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.IssueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.IssueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumPromissoryFiles();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 num_promissory_files = 1;
 * @return {number}
 */
proto.issuer_api.v1.IssueResponse.prototype.getNumPromissoryFiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.issuer_api.v1.IssueResponse} returns this
 */
proto.issuer_api.v1.IssueResponse.prototype.setNumPromissoryFiles = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.AuthenticateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.AuthenticateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.AuthenticateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.AuthenticateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    verifier: (f = msg.getVerifier()) && common_v1_common_pb.DynamicVerifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.AuthenticateRequest}
 */
proto.issuer_api.v1.AuthenticateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.AuthenticateRequest;
  return proto.issuer_api.v1.AuthenticateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.AuthenticateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.AuthenticateRequest}
 */
proto.issuer_api.v1.AuthenticateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.DynamicVerifier;
      reader.readMessage(value,common_v1_common_pb.DynamicVerifier.deserializeBinaryFromReader);
      msg.setVerifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.AuthenticateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.AuthenticateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.AuthenticateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.AuthenticateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.DynamicVerifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.DynamicVerifier verifier = 1;
 * @return {?proto.common.DynamicVerifier}
 */
proto.issuer_api.v1.AuthenticateRequest.prototype.getVerifier = function() {
  return /** @type{?proto.common.DynamicVerifier} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.DynamicVerifier, 1));
};


/**
 * @param {?proto.common.DynamicVerifier|undefined} value
 * @return {!proto.issuer_api.v1.AuthenticateRequest} returns this
*/
proto.issuer_api.v1.AuthenticateRequest.prototype.setVerifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.AuthenticateRequest} returns this
 */
proto.issuer_api.v1.AuthenticateRequest.prototype.clearVerifier = function() {
  return this.setVerifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.AuthenticateRequest.prototype.hasVerifier = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.AuthenticateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.AuthenticateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.AuthenticateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    challenge: msg.getChallenge_asB64(),
    session: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.AuthenticateResponse}
 */
proto.issuer_api.v1.AuthenticateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.AuthenticateResponse;
  return proto.issuer_api.v1.AuthenticateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.AuthenticateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.AuthenticateResponse}
 */
proto.issuer_api.v1.AuthenticateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChallenge(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.AuthenticateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.AuthenticateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.AuthenticateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallenge_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes challenge = 1;
 * @return {!(string|Uint8Array)}
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.getChallenge = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes challenge = 1;
 * This is a type-conversion wrapper around `getChallenge()`
 * @return {string}
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.getChallenge_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChallenge()));
};


/**
 * optional bytes challenge = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChallenge()`
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.getChallenge_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChallenge()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.issuer_api.v1.AuthenticateResponse} returns this
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string session = 2;
 * @return {string}
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.issuer_api.v1.AuthenticateResponse} returns this
 */
proto.issuer_api.v1.AuthenticateResponse.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.GetRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.GetRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.GetRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.GetRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.GetRolesRequest}
 */
proto.issuer_api.v1.GetRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.GetRolesRequest;
  return proto.issuer_api.v1.GetRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.GetRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.GetRolesRequest}
 */
proto.issuer_api.v1.GetRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.GetRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.GetRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.GetRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.GetRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.GetRolesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.GetRolesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.GetRolesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.GetRolesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesMap: (f = msg.getRolesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.GetRolesResponse}
 */
proto.issuer_api.v1.GetRolesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.GetRolesResponse;
  return proto.issuer_api.v1.GetRolesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.GetRolesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.GetRolesResponse}
 */
proto.issuer_api.v1.GetRolesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRolesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.GetRolesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.GetRolesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.GetRolesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.GetRolesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> roles = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.issuer_api.v1.GetRolesResponse.prototype.getRolesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.issuer_api.v1.GetRolesResponse} returns this
 */
proto.issuer_api.v1.GetRolesResponse.prototype.clearRolesMap = function() {
  this.getRolesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.SetRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.SetRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.SetRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && common_v1_common_pb.Role.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.SetRoleRequest}
 */
proto.issuer_api.v1.SetRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.SetRoleRequest;
  return proto.issuer_api.v1.SetRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.SetRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.SetRoleRequest}
 */
proto.issuer_api.v1.SetRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v1_common_pb.Role;
      reader.readMessage(value,common_v1_common_pb.Role.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.SetRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.SetRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.SetRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v1_common_pb.Role.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Role role = 1;
 * @return {?proto.common.Role}
 */
proto.issuer_api.v1.SetRoleRequest.prototype.getRole = function() {
  return /** @type{?proto.common.Role} */ (
    jspb.Message.getWrapperField(this, common_v1_common_pb.Role, 1));
};


/**
 * @param {?proto.common.Role|undefined} value
 * @return {!proto.issuer_api.v1.SetRoleRequest} returns this
*/
proto.issuer_api.v1.SetRoleRequest.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.issuer_api.v1.SetRoleRequest} returns this
 */
proto.issuer_api.v1.SetRoleRequest.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.issuer_api.v1.SetRoleRequest.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.SetRoleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.SetRoleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.SetRoleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetRoleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.SetRoleResponse}
 */
proto.issuer_api.v1.SetRoleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.SetRoleResponse;
  return proto.issuer_api.v1.SetRoleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.SetRoleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.SetRoleResponse}
 */
proto.issuer_api.v1.SetRoleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.SetRoleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.SetRoleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.SetRoleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetRoleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.SetAssetDenominationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.SetAssetDenominationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    denominationsMap: (f = msg.getDenominationsMap()) ? f.toObject(includeInstance, proto.common.AssetDenomination.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.SetAssetDenominationsRequest}
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.SetAssetDenominationsRequest;
  return proto.issuer_api.v1.SetAssetDenominationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.SetAssetDenominationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.SetAssetDenominationsRequest}
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDenominationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.common.AssetDenomination.deserializeBinaryFromReader, "", new proto.common.AssetDenomination());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.SetAssetDenominationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.SetAssetDenominationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenominationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.common.AssetDenomination.serializeBinaryToWriter);
  }
};


/**
 * map<string, common.AssetDenomination> denominations = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.common.AssetDenomination>}
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.prototype.getDenominationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.common.AssetDenomination>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.common.AssetDenomination));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.issuer_api.v1.SetAssetDenominationsRequest} returns this
 */
proto.issuer_api.v1.SetAssetDenominationsRequest.prototype.clearDenominationsMap = function() {
  this.getDenominationsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.SetAssetDenominationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.SetAssetDenominationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.SetAssetDenominationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetDenominationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.SetAssetDenominationsResponse}
 */
proto.issuer_api.v1.SetAssetDenominationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.SetAssetDenominationsResponse;
  return proto.issuer_api.v1.SetAssetDenominationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.SetAssetDenominationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.SetAssetDenominationsResponse}
 */
proto.issuer_api.v1.SetAssetDenominationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.SetAssetDenominationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.SetAssetDenominationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.SetAssetDenominationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetDenominationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.SetAssetAuthoritiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.SetAssetAuthoritiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authoritiesMap: (f = msg.getAuthoritiesMap()) ? f.toObject(includeInstance, proto.common.AssetAuthority.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.SetAssetAuthoritiesRequest}
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.SetAssetAuthoritiesRequest;
  return proto.issuer_api.v1.SetAssetAuthoritiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.SetAssetAuthoritiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.SetAssetAuthoritiesRequest}
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAuthoritiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.common.AssetAuthority.deserializeBinaryFromReader, "", new proto.common.AssetAuthority());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.SetAssetAuthoritiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.SetAssetAuthoritiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthoritiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.common.AssetAuthority.serializeBinaryToWriter);
  }
};


/**
 * map<string, common.AssetAuthority> authorities = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.common.AssetAuthority>}
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.prototype.getAuthoritiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.common.AssetAuthority>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.common.AssetAuthority));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.issuer_api.v1.SetAssetAuthoritiesRequest} returns this
 */
proto.issuer_api.v1.SetAssetAuthoritiesRequest.prototype.clearAuthoritiesMap = function() {
  this.getAuthoritiesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.issuer_api.v1.SetAssetAuthoritiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.issuer_api.v1.SetAssetAuthoritiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.issuer_api.v1.SetAssetAuthoritiesResponse}
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.issuer_api.v1.SetAssetAuthoritiesResponse;
  return proto.issuer_api.v1.SetAssetAuthoritiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.issuer_api.v1.SetAssetAuthoritiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.issuer_api.v1.SetAssetAuthoritiesResponse}
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.issuer_api.v1.SetAssetAuthoritiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.issuer_api.v1.SetAssetAuthoritiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.issuer_api.v1.SetAssetAuthoritiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.issuer_api.v1);
