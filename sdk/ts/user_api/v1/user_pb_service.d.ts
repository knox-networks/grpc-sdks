/* eslint-disable */
/*Generated by GenDocu.com*/
// package: user_api.v1
// file: user_api/v1/user.proto

import * as user_api_v1_user_pb from "../../user_api/v1/user_pb";
import {grpc} from "@improbable-eng/grpc-web";

type UserApiServiceAuthnWithPassword = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnWithPasswordRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnWithPasswordResponse;
};

type UserApiServiceRefreshAccessToken = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.RefreshAccessTokenRequest;
  readonly responseType: typeof user_api_v1_user_pb.RefreshAccessTokenResponse;
};

type UserApiServiceAuthnWithProvider = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnWithProviderRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnWithProviderResponse;
};

type UserApiServiceHandleOIDCCallback = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.HandleOIDCCallbackRequest;
  readonly responseType: typeof user_api_v1_user_pb.HandleOIDCCallbackResponse;
};

type UserApiServiceHandleSAMLCallback = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.HandleSAMLCallbackRequest;
  readonly responseType: typeof user_api_v1_user_pb.HandleSAMLCallbackResponse;
};

type UserApiServiceSAMLSPMetadata = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.SAMLSPMetadataRequest;
  readonly responseType: typeof user_api_v1_user_pb.SAMLSPMetadataResponse;
};

type UserApiServiceCreateAuthnBrowserWithWalletChallenge = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: true;
  readonly requestType: typeof user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeResponse;
};

type UserApiServiceAuthnBrowserWithWallet = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnBrowserWithWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnBrowserWithWalletResponse;
};

type UserApiServiceCreateAuthnWalletChallenge = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.CreateAuthnWalletChallengeRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateAuthnWalletChallengeResponse;
};

type UserApiServiceAuthnWallet = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnWalletResponse;
};

type UserApiServiceCreateRegisterWalletChallenge = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: true;
  readonly requestType: typeof user_api_v1_user_pb.CreateRegisterWalletChallengeRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateRegisterWalletChallengeResponse;
};

type UserApiServiceRegisterWallet = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.RegisterWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.RegisterWalletResponse;
};

type UserApiServiceAssociateWallet = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AssociateWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.AssociateWalletResponse;
};

type UserApiServiceDissociateWallet = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.DissociateWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.DissociateWalletResponse;
};

type UserApiServiceGetAppSettings = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetAppSettingsRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetAppSettingsResponse;
};

type UserApiServiceRegisterUser = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.RegisterUserRequest;
  readonly responseType: typeof user_api_v1_user_pb.RegisterUserResponse;
};

type UserApiServiceConfirmUser = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.ConfirmUserRequest;
  readonly responseType: typeof user_api_v1_user_pb.ConfirmUserResponse;
};

type UserApiServiceFindByEmail = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.FindByEmailRequest;
  readonly responseType: typeof user_api_v1_user_pb.FindByEmailResponse;
};

type UserApiServiceFindByID = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.FindByIDRequest;
  readonly responseType: typeof user_api_v1_user_pb.FindByIDResponse;
};

type UserApiServiceGetMe = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetMeRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetMeResponse;
};

type UserApiServiceGetUserByDID = {
  readonly methodName: string;
  readonly service: typeof UserApiService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetUserByDIDRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetUserByDIDResponse;
};

export class UserApiService {
  static readonly serviceName: string;
  static readonly AuthnWithPassword: UserApiServiceAuthnWithPassword;
  static readonly RefreshAccessToken: UserApiServiceRefreshAccessToken;
  static readonly AuthnWithProvider: UserApiServiceAuthnWithProvider;
  static readonly HandleOIDCCallback: UserApiServiceHandleOIDCCallback;
  static readonly HandleSAMLCallback: UserApiServiceHandleSAMLCallback;
  static readonly SAMLSPMetadata: UserApiServiceSAMLSPMetadata;
  static readonly CreateAuthnBrowserWithWalletChallenge: UserApiServiceCreateAuthnBrowserWithWalletChallenge;
  static readonly AuthnBrowserWithWallet: UserApiServiceAuthnBrowserWithWallet;
  static readonly CreateAuthnWalletChallenge: UserApiServiceCreateAuthnWalletChallenge;
  static readonly AuthnWallet: UserApiServiceAuthnWallet;
  static readonly CreateRegisterWalletChallenge: UserApiServiceCreateRegisterWalletChallenge;
  static readonly RegisterWallet: UserApiServiceRegisterWallet;
  static readonly AssociateWallet: UserApiServiceAssociateWallet;
  static readonly DissociateWallet: UserApiServiceDissociateWallet;
  static readonly GetAppSettings: UserApiServiceGetAppSettings;
  static readonly RegisterUser: UserApiServiceRegisterUser;
  static readonly ConfirmUser: UserApiServiceConfirmUser;
  static readonly FindByEmail: UserApiServiceFindByEmail;
  static readonly FindByID: UserApiServiceFindByID;
  static readonly GetMe: UserApiServiceGetMe;
  static readonly GetUserByDID: UserApiServiceGetUserByDID;
}

type ApiKeyManagerServiceCreateApiKey = {
  readonly methodName: string;
  readonly service: typeof ApiKeyManagerService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.CreateApiKeyRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateApiKeyResponse;
};

type ApiKeyManagerServiceUpdateApiKeyStatus = {
  readonly methodName: string;
  readonly service: typeof ApiKeyManagerService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.UpdateApiKeyStatusRequest;
  readonly responseType: typeof user_api_v1_user_pb.UpdateApiKeyStatusResponse;
};

type ApiKeyManagerServiceGetApiKeys = {
  readonly methodName: string;
  readonly service: typeof ApiKeyManagerService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetApiKeysRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetApiKeysResponse;
};

type ApiKeyManagerServiceCheckApiKey = {
  readonly methodName: string;
  readonly service: typeof ApiKeyManagerService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.CheckApiKeyRequest;
  readonly responseType: typeof user_api_v1_user_pb.CheckApiKeyResponse;
};

export class ApiKeyManagerService {
  static readonly serviceName: string;
  static readonly CreateApiKey: ApiKeyManagerServiceCreateApiKey;
  static readonly UpdateApiKeyStatus: ApiKeyManagerServiceUpdateApiKeyStatus;
  static readonly GetApiKeys: ApiKeyManagerServiceGetApiKeys;
  static readonly CheckApiKey: ApiKeyManagerServiceCheckApiKey;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class UserApiServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  authnWithPassword(
    requestMessage: user_api_v1_user_pb.AuthnWithPasswordRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithPasswordResponse|null) => void
  ): UnaryResponse;
  authnWithPassword(
    requestMessage: user_api_v1_user_pb.AuthnWithPasswordRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithPasswordResponse|null) => void
  ): UnaryResponse;
  refreshAccessToken(
    requestMessage: user_api_v1_user_pb.RefreshAccessTokenRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RefreshAccessTokenResponse|null) => void
  ): UnaryResponse;
  refreshAccessToken(
    requestMessage: user_api_v1_user_pb.RefreshAccessTokenRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RefreshAccessTokenResponse|null) => void
  ): UnaryResponse;
  authnWithProvider(
    requestMessage: user_api_v1_user_pb.AuthnWithProviderRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithProviderResponse|null) => void
  ): UnaryResponse;
  authnWithProvider(
    requestMessage: user_api_v1_user_pb.AuthnWithProviderRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithProviderResponse|null) => void
  ): UnaryResponse;
  handleOIDCCallback(
    requestMessage: user_api_v1_user_pb.HandleOIDCCallbackRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleOIDCCallbackResponse|null) => void
  ): UnaryResponse;
  handleOIDCCallback(
    requestMessage: user_api_v1_user_pb.HandleOIDCCallbackRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleOIDCCallbackResponse|null) => void
  ): UnaryResponse;
  handleSAMLCallback(
    requestMessage: user_api_v1_user_pb.HandleSAMLCallbackRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleSAMLCallbackResponse|null) => void
  ): UnaryResponse;
  handleSAMLCallback(
    requestMessage: user_api_v1_user_pb.HandleSAMLCallbackRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleSAMLCallbackResponse|null) => void
  ): UnaryResponse;
  sAMLSPMetadata(
    requestMessage: user_api_v1_user_pb.SAMLSPMetadataRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.SAMLSPMetadataResponse|null) => void
  ): UnaryResponse;
  sAMLSPMetadata(
    requestMessage: user_api_v1_user_pb.SAMLSPMetadataRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.SAMLSPMetadataResponse|null) => void
  ): UnaryResponse;
  createAuthnBrowserWithWalletChallenge(requestMessage: user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeRequest, metadata?: grpc.Metadata): ResponseStream<user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeResponse>;
  authnBrowserWithWallet(
    requestMessage: user_api_v1_user_pb.AuthnBrowserWithWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnBrowserWithWalletResponse|null) => void
  ): UnaryResponse;
  authnBrowserWithWallet(
    requestMessage: user_api_v1_user_pb.AuthnBrowserWithWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnBrowserWithWalletResponse|null) => void
  ): UnaryResponse;
  createAuthnWalletChallenge(
    requestMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeResponse|null) => void
  ): UnaryResponse;
  createAuthnWalletChallenge(
    requestMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeResponse|null) => void
  ): UnaryResponse;
  authnWallet(
    requestMessage: user_api_v1_user_pb.AuthnWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWalletResponse|null) => void
  ): UnaryResponse;
  authnWallet(
    requestMessage: user_api_v1_user_pb.AuthnWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWalletResponse|null) => void
  ): UnaryResponse;
  createRegisterWalletChallenge(requestMessage: user_api_v1_user_pb.CreateRegisterWalletChallengeRequest, metadata?: grpc.Metadata): ResponseStream<user_api_v1_user_pb.CreateRegisterWalletChallengeResponse>;
  registerWallet(
    requestMessage: user_api_v1_user_pb.RegisterWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterWalletResponse|null) => void
  ): UnaryResponse;
  registerWallet(
    requestMessage: user_api_v1_user_pb.RegisterWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterWalletResponse|null) => void
  ): UnaryResponse;
  associateWallet(
    requestMessage: user_api_v1_user_pb.AssociateWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AssociateWalletResponse|null) => void
  ): UnaryResponse;
  associateWallet(
    requestMessage: user_api_v1_user_pb.AssociateWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AssociateWalletResponse|null) => void
  ): UnaryResponse;
  dissociateWallet(
    requestMessage: user_api_v1_user_pb.DissociateWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.DissociateWalletResponse|null) => void
  ): UnaryResponse;
  dissociateWallet(
    requestMessage: user_api_v1_user_pb.DissociateWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.DissociateWalletResponse|null) => void
  ): UnaryResponse;
  getAppSettings(
    requestMessage: user_api_v1_user_pb.GetAppSettingsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetAppSettingsResponse|null) => void
  ): UnaryResponse;
  getAppSettings(
    requestMessage: user_api_v1_user_pb.GetAppSettingsRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetAppSettingsResponse|null) => void
  ): UnaryResponse;
  registerUser(
    requestMessage: user_api_v1_user_pb.RegisterUserRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterUserResponse|null) => void
  ): UnaryResponse;
  registerUser(
    requestMessage: user_api_v1_user_pb.RegisterUserRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterUserResponse|null) => void
  ): UnaryResponse;
  confirmUser(
    requestMessage: user_api_v1_user_pb.ConfirmUserRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.ConfirmUserResponse|null) => void
  ): UnaryResponse;
  confirmUser(
    requestMessage: user_api_v1_user_pb.ConfirmUserRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.ConfirmUserResponse|null) => void
  ): UnaryResponse;
  findByEmail(
    requestMessage: user_api_v1_user_pb.FindByEmailRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByEmailResponse|null) => void
  ): UnaryResponse;
  findByEmail(
    requestMessage: user_api_v1_user_pb.FindByEmailRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByEmailResponse|null) => void
  ): UnaryResponse;
  findByID(
    requestMessage: user_api_v1_user_pb.FindByIDRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByIDResponse|null) => void
  ): UnaryResponse;
  findByID(
    requestMessage: user_api_v1_user_pb.FindByIDRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByIDResponse|null) => void
  ): UnaryResponse;
  getMe(
    requestMessage: user_api_v1_user_pb.GetMeRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetMeResponse|null) => void
  ): UnaryResponse;
  getMe(
    requestMessage: user_api_v1_user_pb.GetMeRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetMeResponse|null) => void
  ): UnaryResponse;
  getUserByDID(
    requestMessage: user_api_v1_user_pb.GetUserByDIDRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetUserByDIDResponse|null) => void
  ): UnaryResponse;
  getUserByDID(
    requestMessage: user_api_v1_user_pb.GetUserByDIDRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetUserByDIDResponse|null) => void
  ): UnaryResponse;
}

export class ApiKeyManagerServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  createApiKey(
    requestMessage: user_api_v1_user_pb.CreateApiKeyRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CreateApiKeyResponse|null) => void
  ): UnaryResponse;
  createApiKey(
    requestMessage: user_api_v1_user_pb.CreateApiKeyRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CreateApiKeyResponse|null) => void
  ): UnaryResponse;
  updateApiKeyStatus(
    requestMessage: user_api_v1_user_pb.UpdateApiKeyStatusRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.UpdateApiKeyStatusResponse|null) => void
  ): UnaryResponse;
  updateApiKeyStatus(
    requestMessage: user_api_v1_user_pb.UpdateApiKeyStatusRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.UpdateApiKeyStatusResponse|null) => void
  ): UnaryResponse;
  getApiKeys(
    requestMessage: user_api_v1_user_pb.GetApiKeysRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetApiKeysResponse|null) => void
  ): UnaryResponse;
  getApiKeys(
    requestMessage: user_api_v1_user_pb.GetApiKeysRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetApiKeysResponse|null) => void
  ): UnaryResponse;
  checkApiKey(
    requestMessage: user_api_v1_user_pb.CheckApiKeyRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CheckApiKeyResponse|null) => void
  ): UnaryResponse;
  checkApiKey(
    requestMessage: user_api_v1_user_pb.CheckApiKeyRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CheckApiKeyResponse|null) => void
  ): UnaryResponse;
}

