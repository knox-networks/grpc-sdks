/* eslint-disable */
/*Generated by GenDocu.com*/
// package: user_api.v1
// file: user_api/v1/user.proto

import * as user_api_v1_user_pb from "../../user_api/v1/user_pb";
import {grpc} from "@improbable-eng/grpc-web";

type UserManagementAuthnWithPassword = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnWithPasswordRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnWithPasswordResponse;
};

type UserManagementRefreshAccessToken = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.RefreshAccessTokenRequest;
  readonly responseType: typeof user_api_v1_user_pb.RefreshAccessTokenResponse;
};

type UserManagementAuthnWithProvider = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnWithProviderRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnWithProviderResponse;
};

type UserManagementHandleOIDCCallback = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.HandleOIDCCallbackRequest;
  readonly responseType: typeof user_api_v1_user_pb.HandleOIDCCallbackResponse;
};

type UserManagementHandleSAMLCallback = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.HandleSAMLCallbackRequest;
  readonly responseType: typeof user_api_v1_user_pb.HandleSAMLCallbackResponse;
};

type UserManagementSAMLSPMetadata = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.SAMLSPMetadataRequest;
  readonly responseType: typeof user_api_v1_user_pb.SAMLSPMetadataResponse;
};

type UserManagementCreateAuthnBrowserWithWalletChallenge = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: true;
  readonly requestType: typeof user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeResponse;
};

type UserManagementAuthnBrowserWithWallet = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnBrowserWithWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnBrowserWithWalletResponse;
};

type UserManagementCreateAuthnWalletChallenge = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.CreateAuthnWalletChallengeRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateAuthnWalletChallengeResponse;
};

type UserManagementAuthnWallet = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AuthnWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.AuthnWalletResponse;
};

type UserManagementCreateRegisterWalletChallenge = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: true;
  readonly requestType: typeof user_api_v1_user_pb.CreateRegisterWalletChallengeRequest;
  readonly responseType: typeof user_api_v1_user_pb.CreateRegisterWalletChallengeResponse;
};

type UserManagementRegisterWallet = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.RegisterWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.RegisterWalletResponse;
};

type UserManagementAssociateWallet = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.AssociateWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.AssociateWalletResponse;
};

type UserManagementDissociateWallet = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.DissociateWalletRequest;
  readonly responseType: typeof user_api_v1_user_pb.DissociateWalletResponse;
};

type UserManagementGetAppSettings = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetAppSettingsRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetAppSettingsResponse;
};

type UserManagementRegisterUser = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.RegisterUserRequest;
  readonly responseType: typeof user_api_v1_user_pb.RegisterUserResponse;
};

type UserManagementConfirmUser = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.ConfirmUserRequest;
  readonly responseType: typeof user_api_v1_user_pb.ConfirmUserResponse;
};

type UserManagementFindByEmail = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.FindByEmailRequest;
  readonly responseType: typeof user_api_v1_user_pb.FindByEmailResponse;
};

type UserManagementFindByID = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.FindByIDRequest;
  readonly responseType: typeof user_api_v1_user_pb.FindByIDResponse;
};

type UserManagementGetMe = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetMeRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetMeResponse;
};

type UserManagementGetUserByDID = {
  readonly methodName: string;
  readonly service: typeof UserManagement;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof user_api_v1_user_pb.GetUserByDIDRequest;
  readonly responseType: typeof user_api_v1_user_pb.GetUserByDIDResponse;
};

export class UserManagement {
  static readonly serviceName: string;
  static readonly AuthnWithPassword: UserManagementAuthnWithPassword;
  static readonly RefreshAccessToken: UserManagementRefreshAccessToken;
  static readonly AuthnWithProvider: UserManagementAuthnWithProvider;
  static readonly HandleOIDCCallback: UserManagementHandleOIDCCallback;
  static readonly HandleSAMLCallback: UserManagementHandleSAMLCallback;
  static readonly SAMLSPMetadata: UserManagementSAMLSPMetadata;
  static readonly CreateAuthnBrowserWithWalletChallenge: UserManagementCreateAuthnBrowserWithWalletChallenge;
  static readonly AuthnBrowserWithWallet: UserManagementAuthnBrowserWithWallet;
  static readonly CreateAuthnWalletChallenge: UserManagementCreateAuthnWalletChallenge;
  static readonly AuthnWallet: UserManagementAuthnWallet;
  static readonly CreateRegisterWalletChallenge: UserManagementCreateRegisterWalletChallenge;
  static readonly RegisterWallet: UserManagementRegisterWallet;
  static readonly AssociateWallet: UserManagementAssociateWallet;
  static readonly DissociateWallet: UserManagementDissociateWallet;
  static readonly GetAppSettings: UserManagementGetAppSettings;
  static readonly RegisterUser: UserManagementRegisterUser;
  static readonly ConfirmUser: UserManagementConfirmUser;
  static readonly FindByEmail: UserManagementFindByEmail;
  static readonly FindByID: UserManagementFindByID;
  static readonly GetMe: UserManagementGetMe;
  static readonly GetUserByDID: UserManagementGetUserByDID;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class UserManagementClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  authnWithPassword(
    requestMessage: user_api_v1_user_pb.AuthnWithPasswordRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithPasswordResponse|null) => void
  ): UnaryResponse;
  authnWithPassword(
    requestMessage: user_api_v1_user_pb.AuthnWithPasswordRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithPasswordResponse|null) => void
  ): UnaryResponse;
  refreshAccessToken(
    requestMessage: user_api_v1_user_pb.RefreshAccessTokenRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RefreshAccessTokenResponse|null) => void
  ): UnaryResponse;
  refreshAccessToken(
    requestMessage: user_api_v1_user_pb.RefreshAccessTokenRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RefreshAccessTokenResponse|null) => void
  ): UnaryResponse;
  authnWithProvider(
    requestMessage: user_api_v1_user_pb.AuthnWithProviderRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithProviderResponse|null) => void
  ): UnaryResponse;
  authnWithProvider(
    requestMessage: user_api_v1_user_pb.AuthnWithProviderRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWithProviderResponse|null) => void
  ): UnaryResponse;
  handleOIDCCallback(
    requestMessage: user_api_v1_user_pb.HandleOIDCCallbackRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleOIDCCallbackResponse|null) => void
  ): UnaryResponse;
  handleOIDCCallback(
    requestMessage: user_api_v1_user_pb.HandleOIDCCallbackRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleOIDCCallbackResponse|null) => void
  ): UnaryResponse;
  handleSAMLCallback(
    requestMessage: user_api_v1_user_pb.HandleSAMLCallbackRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleSAMLCallbackResponse|null) => void
  ): UnaryResponse;
  handleSAMLCallback(
    requestMessage: user_api_v1_user_pb.HandleSAMLCallbackRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.HandleSAMLCallbackResponse|null) => void
  ): UnaryResponse;
  sAMLSPMetadata(
    requestMessage: user_api_v1_user_pb.SAMLSPMetadataRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.SAMLSPMetadataResponse|null) => void
  ): UnaryResponse;
  sAMLSPMetadata(
    requestMessage: user_api_v1_user_pb.SAMLSPMetadataRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.SAMLSPMetadataResponse|null) => void
  ): UnaryResponse;
  createAuthnBrowserWithWalletChallenge(requestMessage: user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeRequest, metadata?: grpc.Metadata): ResponseStream<user_api_v1_user_pb.CreateAuthnBrowserWithWalletChallengeResponse>;
  authnBrowserWithWallet(
    requestMessage: user_api_v1_user_pb.AuthnBrowserWithWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnBrowserWithWalletResponse|null) => void
  ): UnaryResponse;
  authnBrowserWithWallet(
    requestMessage: user_api_v1_user_pb.AuthnBrowserWithWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnBrowserWithWalletResponse|null) => void
  ): UnaryResponse;
  createAuthnWalletChallenge(
    requestMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeResponse|null) => void
  ): UnaryResponse;
  createAuthnWalletChallenge(
    requestMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.CreateAuthnWalletChallengeResponse|null) => void
  ): UnaryResponse;
  authnWallet(
    requestMessage: user_api_v1_user_pb.AuthnWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWalletResponse|null) => void
  ): UnaryResponse;
  authnWallet(
    requestMessage: user_api_v1_user_pb.AuthnWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AuthnWalletResponse|null) => void
  ): UnaryResponse;
  createRegisterWalletChallenge(requestMessage: user_api_v1_user_pb.CreateRegisterWalletChallengeRequest, metadata?: grpc.Metadata): ResponseStream<user_api_v1_user_pb.CreateRegisterWalletChallengeResponse>;
  registerWallet(
    requestMessage: user_api_v1_user_pb.RegisterWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterWalletResponse|null) => void
  ): UnaryResponse;
  registerWallet(
    requestMessage: user_api_v1_user_pb.RegisterWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterWalletResponse|null) => void
  ): UnaryResponse;
  associateWallet(
    requestMessage: user_api_v1_user_pb.AssociateWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AssociateWalletResponse|null) => void
  ): UnaryResponse;
  associateWallet(
    requestMessage: user_api_v1_user_pb.AssociateWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.AssociateWalletResponse|null) => void
  ): UnaryResponse;
  dissociateWallet(
    requestMessage: user_api_v1_user_pb.DissociateWalletRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.DissociateWalletResponse|null) => void
  ): UnaryResponse;
  dissociateWallet(
    requestMessage: user_api_v1_user_pb.DissociateWalletRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.DissociateWalletResponse|null) => void
  ): UnaryResponse;
  getAppSettings(
    requestMessage: user_api_v1_user_pb.GetAppSettingsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetAppSettingsResponse|null) => void
  ): UnaryResponse;
  getAppSettings(
    requestMessage: user_api_v1_user_pb.GetAppSettingsRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetAppSettingsResponse|null) => void
  ): UnaryResponse;
  registerUser(
    requestMessage: user_api_v1_user_pb.RegisterUserRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterUserResponse|null) => void
  ): UnaryResponse;
  registerUser(
    requestMessage: user_api_v1_user_pb.RegisterUserRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.RegisterUserResponse|null) => void
  ): UnaryResponse;
  confirmUser(
    requestMessage: user_api_v1_user_pb.ConfirmUserRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.ConfirmUserResponse|null) => void
  ): UnaryResponse;
  confirmUser(
    requestMessage: user_api_v1_user_pb.ConfirmUserRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.ConfirmUserResponse|null) => void
  ): UnaryResponse;
  findByEmail(
    requestMessage: user_api_v1_user_pb.FindByEmailRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByEmailResponse|null) => void
  ): UnaryResponse;
  findByEmail(
    requestMessage: user_api_v1_user_pb.FindByEmailRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByEmailResponse|null) => void
  ): UnaryResponse;
  findByID(
    requestMessage: user_api_v1_user_pb.FindByIDRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByIDResponse|null) => void
  ): UnaryResponse;
  findByID(
    requestMessage: user_api_v1_user_pb.FindByIDRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.FindByIDResponse|null) => void
  ): UnaryResponse;
  getMe(
    requestMessage: user_api_v1_user_pb.GetMeRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetMeResponse|null) => void
  ): UnaryResponse;
  getMe(
    requestMessage: user_api_v1_user_pb.GetMeRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetMeResponse|null) => void
  ): UnaryResponse;
  getUserByDID(
    requestMessage: user_api_v1_user_pb.GetUserByDIDRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetUserByDIDResponse|null) => void
  ): UnaryResponse;
  getUserByDID(
    requestMessage: user_api_v1_user_pb.GetUserByDIDRequest,
    callback: (error: ServiceError|null, responseMessage: user_api_v1_user_pb.GetUserByDIDResponse|null) => void
  ): UnaryResponse;
}

