// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: webhook_api/v1/webhook.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package webhook_api.v1;

@kotlin.jvm.JvmName("-initializeconsideringContractPrevalidation")
public inline fun consideringContractPrevalidation(block: webhook_api.v1.ConsideringContractPrevalidationKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation =
  webhook_api.v1.ConsideringContractPrevalidationKt.Dsl._create(webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "conditions": [
 * {
 * "target": 1,
 * "operator": 2,
 * "value": {
 * "amount_value": {
 * "currency_code":"USD",
 * "amount":100,
 * "decimals":2
 * }
 * }
 * },
 * {
 * "target": 1,
 * "operator": 4,
 * "value": {
 * "amount_value": {
 * "currency_code":"USD",
 * "amount":1000,
 * "decimals":2
 * }
 * }
 * }
 * ],
 * "outcome": 1,
 * "logical_base": 1
 * }
 * ```
 *
 * Protobuf type `webhook_api.v1.ConsideringContractPrevalidation`
 */
public object ConsideringContractPrevalidationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ConditionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     */
     public val conditions: com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getConditionsList()
      )
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     * @param value The conditions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addConditions")
    public fun com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>.add(value: webhook_api.v1.WebhookOuterClass.ValidationCondition) {
      _builder.addConditions(value)
    }
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     * @param value The conditions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignConditions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>.plusAssign(value: webhook_api.v1.WebhookOuterClass.ValidationCondition) {
      add(value)
    }
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     * @param values The conditions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllConditions")
    public fun com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>.addAll(values: kotlin.collections.Iterable<webhook_api.v1.WebhookOuterClass.ValidationCondition>) {
      _builder.addAllConditions(values)
    }
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     * @param values The conditions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllConditions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>.plusAssign(values: kotlin.collections.Iterable<webhook_api.v1.WebhookOuterClass.ValidationCondition>) {
      addAll(values)
    }
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     * @param index The index to set the value at.
     * @param value The conditions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setConditions")
    public operator fun com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>.set(index: kotlin.Int, value: webhook_api.v1.WebhookOuterClass.ValidationCondition) {
      _builder.setConditions(index, value)
    }
    /**
     * ```
     * Conditions to be evaluated
     * ```
     *
     * `repeated .webhook_api.v1.ValidationCondition conditions = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearConditions")
    public fun com.google.protobuf.kotlin.DslList<webhook_api.v1.WebhookOuterClass.ValidationCondition, ConditionsProxy>.clear() {
      _builder.clearConditions()
    }


    /**
     * ```
     * Outcome of the prevalidation if the condition is true
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation.ValidationOutcome outcome = 2;`
     */
    public var outcome: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation.ValidationOutcome
      @JvmName("getOutcome")
      get() = _builder.getOutcome()
      @JvmName("setOutcome")
      set(value) {
        _builder.setOutcome(value)
      }
    public var outcomeValue: kotlin.Int
      @JvmName("getOutcomeValue")
      get() = _builder.getOutcomeValue()
      @JvmName("setOutcomeValue")
      set(value) {
        _builder.setOutcomeValue(value)
      }
    /**
     * ```
     * Outcome of the prevalidation if the condition is true
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation.ValidationOutcome outcome = 2;`
     */
    public fun clearOutcome() {
      _builder.clearOutcome()
    }

    /**
     * ```
     * Logical Operator.
     * ```
     *
     * `.common.LogicalOperator logical_base = 3;`
     */
    public var logicalBase: common.Common.LogicalOperator
      @JvmName("getLogicalBase")
      get() = _builder.getLogicalBase()
      @JvmName("setLogicalBase")
      set(value) {
        _builder.setLogicalBase(value)
      }
    public var logicalBaseValue: kotlin.Int
      @JvmName("getLogicalBaseValue")
      get() = _builder.getLogicalBaseValue()
      @JvmName("setLogicalBaseValue")
      set(value) {
        _builder.setLogicalBaseValue(value)
      }
    /**
     * ```
     * Logical Operator.
     * ```
     *
     * `.common.LogicalOperator logical_base = 3;`
     */
    public fun clearLogicalBase() {
      _builder.clearLogicalBase()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation.copy(block: `webhook_api.v1`.ConsideringContractPrevalidationKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation =
  `webhook_api.v1`.ConsideringContractPrevalidationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

