// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: webhook_api/v1/webhook.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package webhook_api.v1;

@kotlin.jvm.JvmName("-initializeprevalidation")
public inline fun prevalidation(block: webhook_api.v1.PrevalidationKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.Prevalidation =
  webhook_api.v1.PrevalidationKt.Dsl._create(webhook_api.v1.WebhookOuterClass.Prevalidation.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "id": "PREVALIDATION_ID1",
 * "name": "PREVALIDATION_NAME1",
 * "trigger_type": 1,
 * "payload": {
 * "considering_contract_prevalidation": {
 * "condition": [
 * {
 * "target": 1,
 * "operator": 2,
 * "value": {
 * "amount_value": {
 * "currency_code":"USD",
 * "amount":100,
 * "decimals":2
 * }
 * }
 * },
 * {
 * "target": 1,
 * "operator": 4,
 * "value": {
 * "amount_value": {
 * "currency_code":"USD",
 * "amount":1000,
 * "decimals":2
 * }
 * }
 * }
 * ],
 * "outcome": 1,
 * "logical_base": 1
 * }
 * },
 * "created": "2006-01-02T15:04:05Z"
 * }
 * ```
 *
 * Protobuf type `webhook_api.v1.Prevalidation`
 */
public object PrevalidationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: webhook_api.v1.WebhookOuterClass.Prevalidation.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: webhook_api.v1.WebhookOuterClass.Prevalidation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): webhook_api.v1.WebhookOuterClass.Prevalidation = _builder.build()

    /**
     * ```
     * UUID ID
     * ```
     *
     * `string id = 1;`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * UUID ID
     * ```
     *
     * `string id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * Name
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * Name
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * Type of trigger for the prevalidation.
     * ```
     *
     * `.webhook_api.v1.PrevalidationTriggerType trigger_type = 3;`
     */
    public var triggerType: webhook_api.v1.WebhookOuterClass.PrevalidationTriggerType
      @JvmName("getTriggerType")
      get() = _builder.getTriggerType()
      @JvmName("setTriggerType")
      set(value) {
        _builder.setTriggerType(value)
      }
    public var triggerTypeValue: kotlin.Int
      @JvmName("getTriggerTypeValue")
      get() = _builder.getTriggerTypeValue()
      @JvmName("setTriggerTypeValue")
      set(value) {
        _builder.setTriggerTypeValue(value)
      }
    /**
     * ```
     * Type of trigger for the prevalidation.
     * ```
     *
     * `.webhook_api.v1.PrevalidationTriggerType trigger_type = 3;`
     */
    public fun clearTriggerType() {
      _builder.clearTriggerType()
    }

    /**
     * ```
     * Considering Contract Prevalidation
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation considering_contract_prevalidation = 4;`
     */
    public var consideringContractPrevalidation: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation
      @JvmName("getConsideringContractPrevalidation")
      get() = _builder.getConsideringContractPrevalidation()
      @JvmName("setConsideringContractPrevalidation")
      set(value) {
        _builder.setConsideringContractPrevalidation(value)
      }
    /**
     * ```
     * Considering Contract Prevalidation
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation considering_contract_prevalidation = 4;`
     */
    public fun clearConsideringContractPrevalidation() {
      _builder.clearConsideringContractPrevalidation()
    }
    /**
     * ```
     * Considering Contract Prevalidation
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation considering_contract_prevalidation = 4;`
     * @return Whether the consideringContractPrevalidation field is set.
     */
    public fun hasConsideringContractPrevalidation(): kotlin.Boolean {
      return _builder.hasConsideringContractPrevalidation()
    }

    /**
     * ```
     * Created Timestamp.
     * ```
     *
     * `string created = 5;`
     */
    public var created: kotlin.String
      @JvmName("getCreated")
      get() = _builder.getCreated()
      @JvmName("setCreated")
      set(value) {
        _builder.setCreated(value)
      }
    /**
     * ```
     * Created Timestamp.
     * ```
     *
     * `string created = 5;`
     */
    public fun clearCreated() {
      _builder.clearCreated()
    }
    public val payloadCase: webhook_api.v1.WebhookOuterClass.Prevalidation.PayloadCase
      @JvmName("getPayloadCase")
      get() = _builder.getPayloadCase()

    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun webhook_api.v1.WebhookOuterClass.Prevalidation.copy(block: `webhook_api.v1`.PrevalidationKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.Prevalidation =
  `webhook_api.v1`.PrevalidationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val webhook_api.v1.WebhookOuterClass.PrevalidationOrBuilder.consideringContractPrevalidationOrNull: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation?
  get() = if (hasConsideringContractPrevalidation()) getConsideringContractPrevalidation() else null

