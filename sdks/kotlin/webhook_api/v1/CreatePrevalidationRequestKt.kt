// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: webhook_api/v1/webhook.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package webhook_api.v1;

@kotlin.jvm.JvmName("-initializecreatePrevalidationRequest")
public inline fun createPrevalidationRequest(block: webhook_api.v1.CreatePrevalidationRequestKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest =
  webhook_api.v1.CreatePrevalidationRequestKt.Dsl._create(webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "api_key": "API_KEY",
 * "name": "NAME",
 * "trigger_type": 1,
 * "trigger": {
 * "considering_contract_prevalidation": {
 * "conditions": [
 * {
 * "target": 1,
 * "operator": 2,
 * "value": {
 * "amount_value": {
 * "currency_code":"USD",
 * "amount":100,
 * "decimals":2
 * }
 * }
 * },
 * {
 * "target": 1,
 * "operator": 4,
 * "value": {
 * "amount_value": {
 * "currency_code":"USD",
 * "amount":1000,
 * "decimals":2
 * }
 * }
 * }
 * ],
 * "outcome": 1,
 * "logical_base": 1
 * }
 * }
 * }
 * ```
 *
 * Protobuf type `webhook_api.v1.CreatePrevalidationRequest`
 */
public object CreatePrevalidationRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest = _builder.build()

    /**
     * ```
     * API Key as a JWT
     * ```
     *
     * `string api_key = 1;`
     */
    public var apiKey: kotlin.String
      @JvmName("getApiKey")
      get() = _builder.getApiKey()
      @JvmName("setApiKey")
      set(value) {
        _builder.setApiKey(value)
      }
    /**
     * ```
     * API Key as a JWT
     * ```
     *
     * `string api_key = 1;`
     */
    public fun clearApiKey() {
      _builder.clearApiKey()
    }

    /**
     * ```
     * Name of the prevalidation.
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * Name of the prevalidation.
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * Type of trigger for the prevalidation.
     * ```
     *
     * `.webhook_api.v1.PrevalidationTriggerType trigger_type = 3;`
     */
    public var triggerType: webhook_api.v1.WebhookOuterClass.PrevalidationTriggerType
      @JvmName("getTriggerType")
      get() = _builder.getTriggerType()
      @JvmName("setTriggerType")
      set(value) {
        _builder.setTriggerType(value)
      }
    public var triggerTypeValue: kotlin.Int
      @JvmName("getTriggerTypeValue")
      get() = _builder.getTriggerTypeValue()
      @JvmName("setTriggerTypeValue")
      set(value) {
        _builder.setTriggerTypeValue(value)
      }
    /**
     * ```
     * Type of trigger for the prevalidation.
     * ```
     *
     * `.webhook_api.v1.PrevalidationTriggerType trigger_type = 3;`
     */
    public fun clearTriggerType() {
      _builder.clearTriggerType()
    }

    /**
     * ```
     * Considering Contract Prevalidation.
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation considering_contract_prevalidation = 4;`
     */
    public var consideringContractPrevalidation: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation
      @JvmName("getConsideringContractPrevalidation")
      get() = _builder.getConsideringContractPrevalidation()
      @JvmName("setConsideringContractPrevalidation")
      set(value) {
        _builder.setConsideringContractPrevalidation(value)
      }
    /**
     * ```
     * Considering Contract Prevalidation.
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation considering_contract_prevalidation = 4;`
     */
    public fun clearConsideringContractPrevalidation() {
      _builder.clearConsideringContractPrevalidation()
    }
    /**
     * ```
     * Considering Contract Prevalidation.
     * ```
     *
     * `.webhook_api.v1.ConsideringContractPrevalidation considering_contract_prevalidation = 4;`
     * @return Whether the consideringContractPrevalidation field is set.
     */
    public fun hasConsideringContractPrevalidation(): kotlin.Boolean {
      return _builder.hasConsideringContractPrevalidation()
    }
    public val triggerCase: webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest.TriggerCase
      @JvmName("getTriggerCase")
      get() = _builder.getTriggerCase()

    public fun clearTrigger() {
      _builder.clearTrigger()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest.copy(block: `webhook_api.v1`.CreatePrevalidationRequestKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequest =
  `webhook_api.v1`.CreatePrevalidationRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val webhook_api.v1.WebhookOuterClass.CreatePrevalidationRequestOrBuilder.consideringContractPrevalidationOrNull: webhook_api.v1.WebhookOuterClass.ConsideringContractPrevalidation?
  get() = if (hasConsideringContractPrevalidation()) getConsideringContractPrevalidation() else null

