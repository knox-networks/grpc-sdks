// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: webhook_api/v1/webhook.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package webhook_api.v1;

@kotlin.jvm.JvmName("-initializeevent")
public inline fun event(block: webhook_api.v1.EventKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.Event =
  webhook_api.v1.EventKt.Dsl._create(webhook_api.v1.WebhookOuterClass.Event.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "event_type": 0,
 * "signature": "SignatureLenVariesByAlgorithm",
 * "event_id": "EVENT_ID",
 * "delivery_date": "2007-01-02T15:04:05Z",
 * "owner_id": "eyJwtHeader.eyJwtPayload.Secret",
 * "payload": {
 * "wallet_created_payload": {
 * "name": "NAME",
 * "did": "did:method-name:zDIDMultibase58Encoded",
 * "created": "2006-01-02T15:04:05Z"
 * }
 * },
 * "created_date": "2006-01-02T15:04:05Z"
 * }
 * ```
 *
 * Protobuf type `webhook_api.v1.Event`
 */
public object EventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: webhook_api.v1.WebhookOuterClass.Event.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: webhook_api.v1.WebhookOuterClass.Event.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): webhook_api.v1.WebhookOuterClass.Event = _builder.build()

    /**
     * ```
     * Type of event.
     * ```
     *
     * `.webhook_api.v1.EventType event_type = 1;`
     */
    public var eventType: webhook_api.v1.WebhookOuterClass.EventType
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    public var eventTypeValue: kotlin.Int
      @JvmName("getEventTypeValue")
      get() = _builder.getEventTypeValue()
      @JvmName("setEventTypeValue")
      set(value) {
        _builder.setEventTypeValue(value)
      }
    /**
     * ```
     * Type of event.
     * ```
     *
     * `.webhook_api.v1.EventType event_type = 1;`
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * ```
     * Event signature.
     * ```
     *
     * `string signature = 2;`
     */
    public var signature: kotlin.String
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * ```
     * Event signature.
     * ```
     *
     * `string signature = 2;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }

    /**
     * ```
     * Event ID.
     * ```
     *
     * `string event_id = 3;`
     */
    public var eventId: kotlin.String
      @JvmName("getEventId")
      get() = _builder.getEventId()
      @JvmName("setEventId")
      set(value) {
        _builder.setEventId(value)
      }
    /**
     * ```
     * Event ID.
     * ```
     *
     * `string event_id = 3;`
     */
    public fun clearEventId() {
      _builder.clearEventId()
    }

    /**
     * ```
     * Delivery date of the event.
     * ```
     *
     * `string delivery_date = 4;`
     */
    public var deliveryDate: kotlin.String
      @JvmName("getDeliveryDate")
      get() = _builder.getDeliveryDate()
      @JvmName("setDeliveryDate")
      set(value) {
        _builder.setDeliveryDate(value)
      }
    /**
     * ```
     * Delivery date of the event.
     * ```
     *
     * `string delivery_date = 4;`
     */
    public fun clearDeliveryDate() {
      _builder.clearDeliveryDate()
    }

    /**
     * ```
     * Owner ID
     * ```
     *
     * `string owner_id = 5;`
     */
    public var ownerId: kotlin.String
      @JvmName("getOwnerId")
      get() = _builder.getOwnerId()
      @JvmName("setOwnerId")
      set(value) {
        _builder.setOwnerId(value)
      }
    /**
     * ```
     * Owner ID
     * ```
     *
     * `string owner_id = 5;`
     */
    public fun clearOwnerId() {
      _builder.clearOwnerId()
    }

    /**
     * ```
     * Event Payload for creation of wallet.
     * ```
     *
     * `.webhook_api.v1.CreateWalletPayload wallet_created_payload = 6;`
     */
    public var walletCreatedPayload: webhook_api.v1.WebhookOuterClass.CreateWalletPayload
      @JvmName("getWalletCreatedPayload")
      get() = _builder.getWalletCreatedPayload()
      @JvmName("setWalletCreatedPayload")
      set(value) {
        _builder.setWalletCreatedPayload(value)
      }
    /**
     * ```
     * Event Payload for creation of wallet.
     * ```
     *
     * `.webhook_api.v1.CreateWalletPayload wallet_created_payload = 6;`
     */
    public fun clearWalletCreatedPayload() {
      _builder.clearWalletCreatedPayload()
    }
    /**
     * ```
     * Event Payload for creation of wallet.
     * ```
     *
     * `.webhook_api.v1.CreateWalletPayload wallet_created_payload = 6;`
     * @return Whether the walletCreatedPayload field is set.
     */
    public fun hasWalletCreatedPayload(): kotlin.Boolean {
      return _builder.hasWalletCreatedPayload()
    }

    /**
     * ```
     * Event Payload for receiving promissory.
     * ```
     *
     * `.webhook_api.v1.PromissoryReceivedPayload promissory_received_payload = 7;`
     */
    public var promissoryReceivedPayload: webhook_api.v1.WebhookOuterClass.PromissoryReceivedPayload
      @JvmName("getPromissoryReceivedPayload")
      get() = _builder.getPromissoryReceivedPayload()
      @JvmName("setPromissoryReceivedPayload")
      set(value) {
        _builder.setPromissoryReceivedPayload(value)
      }
    /**
     * ```
     * Event Payload for receiving promissory.
     * ```
     *
     * `.webhook_api.v1.PromissoryReceivedPayload promissory_received_payload = 7;`
     */
    public fun clearPromissoryReceivedPayload() {
      _builder.clearPromissoryReceivedPayload()
    }
    /**
     * ```
     * Event Payload for receiving promissory.
     * ```
     *
     * `.webhook_api.v1.PromissoryReceivedPayload promissory_received_payload = 7;`
     * @return Whether the promissoryReceivedPayload field is set.
     */
    public fun hasPromissoryReceivedPayload(): kotlin.Boolean {
      return _builder.hasPromissoryReceivedPayload()
    }

    /**
     * ```
     * Event Payload for pinging.
     * ```
     *
     * `.webhook_api.v1.PingPayload ping_payload = 8;`
     */
    public var pingPayload: webhook_api.v1.WebhookOuterClass.PingPayload
      @JvmName("getPingPayload")
      get() = _builder.getPingPayload()
      @JvmName("setPingPayload")
      set(value) {
        _builder.setPingPayload(value)
      }
    /**
     * ```
     * Event Payload for pinging.
     * ```
     *
     * `.webhook_api.v1.PingPayload ping_payload = 8;`
     */
    public fun clearPingPayload() {
      _builder.clearPingPayload()
    }
    /**
     * ```
     * Event Payload for pinging.
     * ```
     *
     * `.webhook_api.v1.PingPayload ping_payload = 8;`
     * @return Whether the pingPayload field is set.
     */
    public fun hasPingPayload(): kotlin.Boolean {
      return _builder.hasPingPayload()
    }

    /**
     * ```
     * Event Payload for contract proposal completed.
     * ```
     *
     * `.webhook_api.v1.ContractProposalCompletedPayload contract_proposal_completed_payload = 10;`
     */
    public var contractProposalCompletedPayload: webhook_api.v1.WebhookOuterClass.ContractProposalCompletedPayload
      @JvmName("getContractProposalCompletedPayload")
      get() = _builder.getContractProposalCompletedPayload()
      @JvmName("setContractProposalCompletedPayload")
      set(value) {
        _builder.setContractProposalCompletedPayload(value)
      }
    /**
     * ```
     * Event Payload for contract proposal completed.
     * ```
     *
     * `.webhook_api.v1.ContractProposalCompletedPayload contract_proposal_completed_payload = 10;`
     */
    public fun clearContractProposalCompletedPayload() {
      _builder.clearContractProposalCompletedPayload()
    }
    /**
     * ```
     * Event Payload for contract proposal completed.
     * ```
     *
     * `.webhook_api.v1.ContractProposalCompletedPayload contract_proposal_completed_payload = 10;`
     * @return Whether the contractProposalCompletedPayload field is set.
     */
    public fun hasContractProposalCompletedPayload(): kotlin.Boolean {
      return _builder.hasContractProposalCompletedPayload()
    }

    /**
     * ```
     * Event Payload for contract payment completed.
     * ```
     *
     * `.webhook_api.v1.ContractPaymentCompletedPayload contract_payment_completed_payload = 11;`
     */
    public var contractPaymentCompletedPayload: webhook_api.v1.WebhookOuterClass.ContractPaymentCompletedPayload
      @JvmName("getContractPaymentCompletedPayload")
      get() = _builder.getContractPaymentCompletedPayload()
      @JvmName("setContractPaymentCompletedPayload")
      set(value) {
        _builder.setContractPaymentCompletedPayload(value)
      }
    /**
     * ```
     * Event Payload for contract payment completed.
     * ```
     *
     * `.webhook_api.v1.ContractPaymentCompletedPayload contract_payment_completed_payload = 11;`
     */
    public fun clearContractPaymentCompletedPayload() {
      _builder.clearContractPaymentCompletedPayload()
    }
    /**
     * ```
     * Event Payload for contract payment completed.
     * ```
     *
     * `.webhook_api.v1.ContractPaymentCompletedPayload contract_payment_completed_payload = 11;`
     * @return Whether the contractPaymentCompletedPayload field is set.
     */
    public fun hasContractPaymentCompletedPayload(): kotlin.Boolean {
      return _builder.hasContractPaymentCompletedPayload()
    }

    /**
     * ```
     * Timestamp when wallet was created.
     * ```
     *
     * `string created_date = 9;`
     */
    public var createdDate: kotlin.String
      @JvmName("getCreatedDate")
      get() = _builder.getCreatedDate()
      @JvmName("setCreatedDate")
      set(value) {
        _builder.setCreatedDate(value)
      }
    /**
     * ```
     * Timestamp when wallet was created.
     * ```
     *
     * `string created_date = 9;`
     */
    public fun clearCreatedDate() {
      _builder.clearCreatedDate()
    }
    public val payloadCase: webhook_api.v1.WebhookOuterClass.Event.PayloadCase
      @JvmName("getPayloadCase")
      get() = _builder.getPayloadCase()

    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun webhook_api.v1.WebhookOuterClass.Event.copy(block: `webhook_api.v1`.EventKt.Dsl.() -> kotlin.Unit): webhook_api.v1.WebhookOuterClass.Event =
  `webhook_api.v1`.EventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val webhook_api.v1.WebhookOuterClass.EventOrBuilder.walletCreatedPayloadOrNull: webhook_api.v1.WebhookOuterClass.CreateWalletPayload?
  get() = if (hasWalletCreatedPayload()) getWalletCreatedPayload() else null

public val webhook_api.v1.WebhookOuterClass.EventOrBuilder.promissoryReceivedPayloadOrNull: webhook_api.v1.WebhookOuterClass.PromissoryReceivedPayload?
  get() = if (hasPromissoryReceivedPayload()) getPromissoryReceivedPayload() else null

public val webhook_api.v1.WebhookOuterClass.EventOrBuilder.pingPayloadOrNull: webhook_api.v1.WebhookOuterClass.PingPayload?
  get() = if (hasPingPayload()) getPingPayload() else null

public val webhook_api.v1.WebhookOuterClass.EventOrBuilder.contractProposalCompletedPayloadOrNull: webhook_api.v1.WebhookOuterClass.ContractProposalCompletedPayload?
  get() = if (hasContractProposalCompletedPayload()) getContractProposalCompletedPayload() else null

public val webhook_api.v1.WebhookOuterClass.EventOrBuilder.contractPaymentCompletedPayloadOrNull: webhook_api.v1.WebhookOuterClass.ContractPaymentCompletedPayload?
  get() = if (hasContractPaymentCompletedPayload()) getContractPaymentCompletedPayload() else null

