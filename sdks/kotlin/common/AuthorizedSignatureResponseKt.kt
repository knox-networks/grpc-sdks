// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/v1/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package common;

@kotlin.jvm.JvmName("-initializeauthorizedSignatureResponse")
public inline fun authorizedSignatureResponse(block: common.AuthorizedSignatureResponseKt.Dsl.() -> kotlin.Unit): common.Common.AuthorizedSignatureResponse =
  common.AuthorizedSignatureResponseKt.Dsl._create(common.Common.AuthorizedSignatureResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "promissory_file": "FileByteLengthVaries="
 * }
 * ```
 *
 * Protobuf type `common.AuthorizedSignatureResponse`
 */
public object AuthorizedSignatureResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: common.Common.AuthorizedSignatureResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: common.Common.AuthorizedSignatureResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): common.Common.AuthorizedSignatureResponse = _builder.build()

    /**
     * ```
     * Return digital banknote with authorized signature.
     * ```
     *
     * `bytes promissory_file = 1;`
     */
    public var promissoryFile: com.google.protobuf.ByteString
      @JvmName("getPromissoryFile")
      get() = _builder.getPromissoryFile()
      @JvmName("setPromissoryFile")
      set(value) {
        _builder.setPromissoryFile(value)
      }
    /**
     * ```
     * Return digital banknote with authorized signature.
     * ```
     *
     * `bytes promissory_file = 1;`
     */
    public fun clearPromissoryFile() {
      _builder.clearPromissoryFile()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun common.Common.AuthorizedSignatureResponse.copy(block: `common`.AuthorizedSignatureResponseKt.Dsl.() -> kotlin.Unit): common.Common.AuthorizedSignatureResponse =
  `common`.AuthorizedSignatureResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

