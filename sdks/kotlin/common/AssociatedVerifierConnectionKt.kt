// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/v1/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package common;

@kotlin.jvm.JvmName("-initializeassociatedVerifierConnection")
public inline fun associatedVerifierConnection(block: common.AssociatedVerifierConnectionKt.Dsl.() -> kotlin.Unit): common.Common.AssociatedVerifierConnection =
  common.AssociatedVerifierConnectionKt.Dsl._create(common.Common.AssociatedVerifierConnection.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "primary_verifier": {
 * "signature_system": 1,
 * "verifier": "VerifierLengthChangesByAlgo="
 * },
 * "associated_verifier": {
 * "signature_system": 1,
 * "verifier": "VerifierLengthChangesByAlgo="
 * }
 * }
 * ```
 *
 * Protobuf type `common.AssociatedVerifierConnection`
 */
public object AssociatedVerifierConnectionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: common.Common.AssociatedVerifierConnection.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: common.Common.AssociatedVerifierConnection.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): common.Common.AssociatedVerifierConnection = _builder.build()

    /**
     * ```
     * verifier holding a gateway connection
     * ```
     *
     * `.common.DynamicVerifier primary_verifier = 1;`
     */
    public var primaryVerifier: common.Common.DynamicVerifier
      @JvmName("getPrimaryVerifier")
      get() = _builder.getPrimaryVerifier()
      @JvmName("setPrimaryVerifier")
      set(value) {
        _builder.setPrimaryVerifier(value)
      }
    /**
     * ```
     * verifier holding a gateway connection
     * ```
     *
     * `.common.DynamicVerifier primary_verifier = 1;`
     */
    public fun clearPrimaryVerifier() {
      _builder.clearPrimaryVerifier()
    }
    /**
     * ```
     * verifier holding a gateway connection
     * ```
     *
     * `.common.DynamicVerifier primary_verifier = 1;`
     * @return Whether the primaryVerifier field is set.
     */
    public fun hasPrimaryVerifier(): kotlin.Boolean {
      return _builder.hasPrimaryVerifier()
    }
    public val AssociatedVerifierConnectionKt.Dsl.primaryVerifierOrNull: common.Common.DynamicVerifier?
      get() = _builder.primaryVerifierOrNull

    /**
     * ```
     * associated verifier
     * ```
     *
     * `.common.DynamicVerifier associated_verifier = 2;`
     */
    public var associatedVerifier: common.Common.DynamicVerifier
      @JvmName("getAssociatedVerifier")
      get() = _builder.getAssociatedVerifier()
      @JvmName("setAssociatedVerifier")
      set(value) {
        _builder.setAssociatedVerifier(value)
      }
    /**
     * ```
     * associated verifier
     * ```
     *
     * `.common.DynamicVerifier associated_verifier = 2;`
     */
    public fun clearAssociatedVerifier() {
      _builder.clearAssociatedVerifier()
    }
    /**
     * ```
     * associated verifier
     * ```
     *
     * `.common.DynamicVerifier associated_verifier = 2;`
     * @return Whether the associatedVerifier field is set.
     */
    public fun hasAssociatedVerifier(): kotlin.Boolean {
      return _builder.hasAssociatedVerifier()
    }
    public val AssociatedVerifierConnectionKt.Dsl.associatedVerifierOrNull: common.Common.DynamicVerifier?
      get() = _builder.associatedVerifierOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun common.Common.AssociatedVerifierConnection.copy(block: `common`.AssociatedVerifierConnectionKt.Dsl.() -> kotlin.Unit): common.Common.AssociatedVerifierConnection =
  `common`.AssociatedVerifierConnectionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val common.Common.AssociatedVerifierConnectionOrBuilder.primaryVerifierOrNull: common.Common.DynamicVerifier?
  get() = if (hasPrimaryVerifier()) getPrimaryVerifier() else null

public val common.Common.AssociatedVerifierConnectionOrBuilder.associatedVerifierOrNull: common.Common.DynamicVerifier?
  get() = if (hasAssociatedVerifier()) getAssociatedVerifier() else null

