// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/v1/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package common;

@kotlin.jvm.JvmName("-initializedistribution")
public inline fun distribution(block: common.DistributionKt.Dsl.() -> kotlin.Unit): common.Common.Distribution =
  common.DistributionKt.Dsl._create(common.Common.Distribution.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "value": [
 * {
 * "key": 20,
 * "value": 2
 * },
 * {
 * "key": 50,
 * "value": 1
 * },
 * {
 * "key": 10,
 * "value": 1
 * }
 * ]
 * }
 * ```
 *
 * Protobuf type `common.Distribution`
 */
public object DistributionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: common.Common.Distribution.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: common.Common.Distribution.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): common.Common.Distribution = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ValueProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Distribution Values and Amounts.
     * ```
     *
     * `map<int64, int32> value = 1;`
     */
     public val value: com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.Int, ValueProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getValueMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getValueMap()
      )
    /**
     * ```
     * Distribution Values and Amounts.
     * ```
     *
     * `map<int64, int32> value = 1;`
     */
    @JvmName("putValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.Int, ValueProxy>
      .put(key: kotlin.Long, value: kotlin.Int) {
         _builder.putValue(key, value)
       }
    /**
     * ```
     * Distribution Values and Amounts.
     * ```
     *
     * `map<int64, int32> value = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setValue")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.Int, ValueProxy>
      .set(key: kotlin.Long, value: kotlin.Int) {
         put(key, value)
       }
    /**
     * ```
     * Distribution Values and Amounts.
     * ```
     *
     * `map<int64, int32> value = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.Int, ValueProxy>
      .remove(key: kotlin.Long) {
         _builder.removeValue(key)
       }
    /**
     * ```
     * Distribution Values and Amounts.
     * ```
     *
     * `map<int64, int32> value = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.Int, ValueProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Long, kotlin.Int>) {
         _builder.putAllValue(map)
       }
    /**
     * ```
     * Distribution Values and Amounts.
     * ```
     *
     * `map<int64, int32> value = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.Int, ValueProxy>
      .clear() {
         _builder.clearValue()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun common.Common.Distribution.copy(block: `common`.DistributionKt.Dsl.() -> kotlin.Unit): common.Common.Distribution =
  `common`.DistributionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

