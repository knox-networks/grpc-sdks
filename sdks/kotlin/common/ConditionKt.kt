// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/v1/packet.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package common;

@kotlin.jvm.JvmName("-initializecondition")
public inline fun condition(block: common.ConditionKt.Dsl.() -> kotlin.Unit): common.PacketOuterClass.Condition =
  common.ConditionKt.Dsl._create(common.PacketOuterClass.Condition.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "condition": {
 * "hash": {
 * "presenter": "PresenterPublicKey",
 * "hash": "13550350a8681c84"
 * }
 * }
 * }
 * ```
 *
 * Protobuf type `common.Condition`
 */
public object ConditionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: common.PacketOuterClass.Condition.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: common.PacketOuterClass.Condition.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): common.PacketOuterClass.Condition = _builder.build()

    /**
     * ```
     * Timeout Condition Option.
     * ```
     *
     * `.common.TimeoutCondition timeout = 1;`
     */
    public var timeout: common.PacketOuterClass.TimeoutCondition
      @JvmName("getTimeout")
      get() = _builder.getTimeout()
      @JvmName("setTimeout")
      set(value) {
        _builder.setTimeout(value)
      }
    /**
     * ```
     * Timeout Condition Option.
     * ```
     *
     * `.common.TimeoutCondition timeout = 1;`
     */
    public fun clearTimeout() {
      _builder.clearTimeout()
    }
    /**
     * ```
     * Timeout Condition Option.
     * ```
     *
     * `.common.TimeoutCondition timeout = 1;`
     * @return Whether the timeout field is set.
     */
    public fun hasTimeout(): kotlin.Boolean {
      return _builder.hasTimeout()
    }

    /**
     * ```
     * Hash Condition Option.
     * ```
     *
     * `.common.HashCondition hash = 2;`
     */
    public var hash: common.PacketOuterClass.HashCondition
      @JvmName("getHash")
      get() = _builder.getHash()
      @JvmName("setHash")
      set(value) {
        _builder.setHash(value)
      }
    /**
     * ```
     * Hash Condition Option.
     * ```
     *
     * `.common.HashCondition hash = 2;`
     */
    public fun clearHash() {
      _builder.clearHash()
    }
    /**
     * ```
     * Hash Condition Option.
     * ```
     *
     * `.common.HashCondition hash = 2;`
     * @return Whether the hash field is set.
     */
    public fun hasHash(): kotlin.Boolean {
      return _builder.hasHash()
    }

    /**
     * ```
     * Mint Condition Option.
     * ```
     *
     * `.common.MintCondition mint = 3;`
     */
    public var mint: common.PacketOuterClass.MintCondition
      @JvmName("getMint")
      get() = _builder.getMint()
      @JvmName("setMint")
      set(value) {
        _builder.setMint(value)
      }
    /**
     * ```
     * Mint Condition Option.
     * ```
     *
     * `.common.MintCondition mint = 3;`
     */
    public fun clearMint() {
      _builder.clearMint()
    }
    /**
     * ```
     * Mint Condition Option.
     * ```
     *
     * `.common.MintCondition mint = 3;`
     * @return Whether the mint field is set.
     */
    public fun hasMint(): kotlin.Boolean {
      return _builder.hasMint()
    }

    /**
     * ```
     * Redeem Condition Option.
     * ```
     *
     * `.common.RedeemCondition redeem = 4;`
     */
    public var redeem: common.PacketOuterClass.RedeemCondition
      @JvmName("getRedeem")
      get() = _builder.getRedeem()
      @JvmName("setRedeem")
      set(value) {
        _builder.setRedeem(value)
      }
    /**
     * ```
     * Redeem Condition Option.
     * ```
     *
     * `.common.RedeemCondition redeem = 4;`
     */
    public fun clearRedeem() {
      _builder.clearRedeem()
    }
    /**
     * ```
     * Redeem Condition Option.
     * ```
     *
     * `.common.RedeemCondition redeem = 4;`
     * @return Whether the redeem field is set.
     */
    public fun hasRedeem(): kotlin.Boolean {
      return _builder.hasRedeem()
    }
    public val conditionCase: common.PacketOuterClass.Condition.ConditionCase
      @JvmName("getConditionCase")
      get() = _builder.getConditionCase()

    public fun clearCondition() {
      _builder.clearCondition()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun common.PacketOuterClass.Condition.copy(block: `common`.ConditionKt.Dsl.() -> kotlin.Unit): common.PacketOuterClass.Condition =
  `common`.ConditionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val common.PacketOuterClass.ConditionOrBuilder.timeoutOrNull: common.PacketOuterClass.TimeoutCondition?
  get() = if (hasTimeout()) getTimeout() else null

public val common.PacketOuterClass.ConditionOrBuilder.hashOrNull: common.PacketOuterClass.HashCondition?
  get() = if (hasHash()) getHash() else null

public val common.PacketOuterClass.ConditionOrBuilder.mintOrNull: common.PacketOuterClass.MintCondition?
  get() = if (hasMint()) getMint() else null

public val common.PacketOuterClass.ConditionOrBuilder.redeemOrNull: common.PacketOuterClass.RedeemCondition?
  get() = if (hasRedeem()) getRedeem() else null

