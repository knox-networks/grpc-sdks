// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: vc_api/v1/vc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package vc_api.v1;

@kotlin.jvm.JvmName("-initializecredentialProof")
public inline fun credentialProof(block: vc_api.v1.CredentialProofKt.Dsl.() -> kotlin.Unit): vc_api.v1.Vc.CredentialProof =
  vc_api.v1.CredentialProofKt.Dsl._create(vc_api.v1.Vc.CredentialProof.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "type": "TYPE", 
 * "created": "2006-01-02T15:04:05Z", 
 * "verification_method": "VERIFICATION_METHOD", 
 * "proof_purpose": "PROOF_PURPOSE", 
 * "proof_value": "PROOF_VALUE"
 * }
 * ```
 *
 * Protobuf type `vc_api.v1.CredentialProof`
 */
public object CredentialProofKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vc_api.v1.Vc.CredentialProof.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vc_api.v1.Vc.CredentialProof.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vc_api.v1.Vc.CredentialProof = _builder.build()

    /**
     * ```
     * The cryptographic suite used for the proof.
     * ```
     *
     * `string type = 1;`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * The cryptographic suite used for the proof.
     * ```
     *
     * `string type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * Timestamp of when the cryptographic proof was created.
     * ```
     *
     * `string created = 2;`
     */
    public var created: kotlin.String
      @JvmName("getCreated")
      get() = _builder.getCreated()
      @JvmName("setCreated")
      set(value) {
        _builder.setCreated(value)
      }
    /**
     * ```
     * Timestamp of when the cryptographic proof was created.
     * ```
     *
     * `string created = 2;`
     */
    public fun clearCreated() {
      _builder.clearCreated()
    }

    /**
     * ```
     * Link to the public key required for verification process.
     * ```
     *
     * `string verification_method = 3;`
     */
    public var verificationMethod: kotlin.String
      @JvmName("getVerificationMethod")
      get() = _builder.getVerificationMethod()
      @JvmName("setVerificationMethod")
      set(value) {
        _builder.setVerificationMethod(value)
      }
    /**
     * ```
     * Link to the public key required for verification process.
     * ```
     *
     * `string verification_method = 3;`
     */
    public fun clearVerificationMethod() {
      _builder.clearVerificationMethod()
    }

    /**
     * ```
     * The reason the proof was created.
     * ```
     *
     * `string proof_purpose = 4;`
     */
    public var proofPurpose: kotlin.String
      @JvmName("getProofPurpose")
      get() = _builder.getProofPurpose()
      @JvmName("setProofPurpose")
      set(value) {
        _builder.setProofPurpose(value)
      }
    /**
     * ```
     * The reason the proof was created.
     * ```
     *
     * `string proof_purpose = 4;`
     */
    public fun clearProofPurpose() {
      _builder.clearProofPurpose()
    }

    /**
     * ```
     * Multibase-encoded binary value that represents the hash of the payload upon decryption through verification_method.
     * ```
     *
     * `string proof_value = 5;`
     */
    public var proofValue: kotlin.String
      @JvmName("getProofValue")
      get() = _builder.getProofValue()
      @JvmName("setProofValue")
      set(value) {
        _builder.setProofValue(value)
      }
    /**
     * ```
     * Multibase-encoded binary value that represents the hash of the payload upon decryption through verification_method.
     * ```
     *
     * `string proof_value = 5;`
     */
    public fun clearProofValue() {
      _builder.clearProofValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun vc_api.v1.Vc.CredentialProof.copy(block: `vc_api.v1`.CredentialProofKt.Dsl.() -> kotlin.Unit): vc_api.v1.Vc.CredentialProof =
  `vc_api.v1`.CredentialProofKt.Dsl._create(this.toBuilder()).apply { block() }._build()

