// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gateway/v1/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package gateway;

@kotlin.jvm.JvmName("-initializelogEntry")
public inline fun logEntry(block: gateway.LogEntryKt.Dsl.() -> kotlin.Unit): gateway.GatewayOuterClass.LogEntry =
  gateway.LogEntryKt.Dsl._create(gateway.GatewayOuterClass.LogEntry.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "verifier": "VerifierLengthVariesByAlgo",
 * "note": "NOTE",
 * "timestamp": "2006-01-02T15:04:05Z",
 * "origin": "ORIGIN",
 * "connection_id": "CONNECTION_ID_UUID"
 * }
 * ```
 *
 * Protobuf type `gateway.LogEntry`
 */
public object LogEntryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gateway.GatewayOuterClass.LogEntry.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gateway.GatewayOuterClass.LogEntry.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gateway.GatewayOuterClass.LogEntry = _builder.build()

    /**
     * ```
     * Public Key
     * ```
     *
     * `string verifier = 1;`
     */
    public var verifier: kotlin.String
      @JvmName("getVerifier")
      get() = _builder.getVerifier()
      @JvmName("setVerifier")
      set(value) {
        _builder.setVerifier(value)
      }
    /**
     * ```
     * Public Key
     * ```
     *
     * `string verifier = 1;`
     */
    public fun clearVerifier() {
      _builder.clearVerifier()
    }

    /**
     * ```
     * Specific action being recorded.
     * ```
     *
     * `string note = 2;`
     */
    public var note: kotlin.String
      @JvmName("getNote")
      get() = _builder.getNote()
      @JvmName("setNote")
      set(value) {
        _builder.setNote(value)
      }
    /**
     * ```
     * Specific action being recorded.
     * ```
     *
     * `string note = 2;`
     */
    public fun clearNote() {
      _builder.clearNote()
    }

    /**
     * ```
     * RFC3339 timestamp of the log entry.
     * ```
     *
     * `string timestamp = 3;`
     */
    public var timestamp: kotlin.String
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * ```
     * RFC3339 timestamp of the log entry.
     * ```
     *
     * `string timestamp = 3;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * ```
     * Origin
     * ```
     *
     * `string origin = 4;`
     */
    public var origin: kotlin.String
      @JvmName("getOrigin")
      get() = _builder.getOrigin()
      @JvmName("setOrigin")
      set(value) {
        _builder.setOrigin(value)
      }
    /**
     * ```
     * Origin
     * ```
     *
     * `string origin = 4;`
     */
    public fun clearOrigin() {
      _builder.clearOrigin()
    }

    /**
     * ```
     * UUID representing a unique client connection
     * ```
     *
     * `string connection_id = 5;`
     */
    public var connectionId: kotlin.String
      @JvmName("getConnectionId")
      get() = _builder.getConnectionId()
      @JvmName("setConnectionId")
      set(value) {
        _builder.setConnectionId(value)
      }
    /**
     * ```
     * UUID representing a unique client connection
     * ```
     *
     * `string connection_id = 5;`
     */
    public fun clearConnectionId() {
      _builder.clearConnectionId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gateway.GatewayOuterClass.LogEntry.copy(block: `gateway`.LogEntryKt.Dsl.() -> kotlin.Unit): gateway.GatewayOuterClass.LogEntry =
  `gateway`.LogEntryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

