// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: authority_api/v1/authority.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package authority_api.v1;

@kotlin.jvm.JvmName("-initializesetIssuerLimitResponse")
public inline fun setIssuerLimitResponse(block: authority_api.v1.SetIssuerLimitResponseKt.Dsl.() -> kotlin.Unit): authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse =
  authority_api.v1.SetIssuerLimitResponseKt.Dsl._create(authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "limit": {
 * "currency_code":"USD",
 * "amount":100,
 * "decimals":2
 * },
 * "signature": "ByteLengthSignatureVariesByAlgo="
 * }
 * ```
 *
 * Protobuf type `authority_api.v1.SetIssuerLimitResponse`
 */
public object SetIssuerLimitResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse = _builder.build()

    /**
     * ```
     * Approved issuance amount limit including the limit and the currency code.
     * ```
     *
     * `.common.Amount limit = 1;`
     */
    public var limit: common.Common.Amount
      @JvmName("getLimit")
      get() = _builder.getLimit()
      @JvmName("setLimit")
      set(value) {
        _builder.setLimit(value)
      }
    /**
     * ```
     * Approved issuance amount limit including the limit and the currency code.
     * ```
     *
     * `.common.Amount limit = 1;`
     */
    public fun clearLimit() {
      _builder.clearLimit()
    }
    /**
     * ```
     * Approved issuance amount limit including the limit and the currency code.
     * ```
     *
     * `.common.Amount limit = 1;`
     * @return Whether the limit field is set.
     */
    public fun hasLimit(): kotlin.Boolean {
      return _builder.hasLimit()
    }
    public val SetIssuerLimitResponseKt.Dsl.limitOrNull: common.Common.Amount?
      get() = _builder.limitOrNull

    /**
     * ```
     * Hex encoded cryptographic signature of the issuer and limit by the Authority.
     * ```
     *
     * `bytes signature = 2;`
     */
    public var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * ```
     * Hex encoded cryptographic signature of the issuer and limit by the Authority.
     * ```
     *
     * `bytes signature = 2;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse.copy(block: `authority_api.v1`.SetIssuerLimitResponseKt.Dsl.() -> kotlin.Unit): authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponse =
  `authority_api.v1`.SetIssuerLimitResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val authority_api.v1.AuthorityOuterClass.SetIssuerLimitResponseOrBuilder.limitOrNull: common.Common.Amount?
  get() = if (hasLimit()) getLimit() else null

