// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: registry_api/v1/registry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package registry_api.v1;

@kotlin.jvm.JvmName("-initializecreateCredentialIssuerRequest")
public inline fun createCredentialIssuerRequest(block: registry_api.v1.CreateCredentialIssuerRequestKt.Dsl.() -> kotlin.Unit): registry_api.v1.Registry.CreateCredentialIssuerRequest =
  registry_api.v1.CreateCredentialIssuerRequestKt.Dsl._create(registry_api.v1.Registry.CreateCredentialIssuerRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * { 
 * "credential_issuer": {
 * "issuer_did": "did:method-name:zDIDIssuerMultibase58Encoded",
 * "issuer_name": "ISSUER_NAME",
 * "email": "example@gmail.com",
 * "website": "google.com",
 * "postal_address": {
 * "country": "United States",
 * "city": "Anytown",
 * "state": "AL",
 * "postal_code": "10101",
 * "street": "123 Sesame Street"
 * },
 * "status": 0
 * }
 * }
 * ```
 *
 * Protobuf type `registry_api.v1.CreateCredentialIssuerRequest`
 */
public object CreateCredentialIssuerRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: registry_api.v1.Registry.CreateCredentialIssuerRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: registry_api.v1.Registry.CreateCredentialIssuerRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): registry_api.v1.Registry.CreateCredentialIssuerRequest = _builder.build()

    /**
     * ```
     * Credential Issuer.
     * ```
     *
     * `.registry_api.v1.CredentialIssuer credential_issuer = 1;`
     */
    public var credentialIssuer: registry_api.v1.Registry.CredentialIssuer
      @JvmName("getCredentialIssuer")
      get() = _builder.getCredentialIssuer()
      @JvmName("setCredentialIssuer")
      set(value) {
        _builder.setCredentialIssuer(value)
      }
    /**
     * ```
     * Credential Issuer.
     * ```
     *
     * `.registry_api.v1.CredentialIssuer credential_issuer = 1;`
     */
    public fun clearCredentialIssuer() {
      _builder.clearCredentialIssuer()
    }
    /**
     * ```
     * Credential Issuer.
     * ```
     *
     * `.registry_api.v1.CredentialIssuer credential_issuer = 1;`
     * @return Whether the credentialIssuer field is set.
     */
    public fun hasCredentialIssuer(): kotlin.Boolean {
      return _builder.hasCredentialIssuer()
    }
    public val CreateCredentialIssuerRequestKt.Dsl.credentialIssuerOrNull: registry_api.v1.Registry.CredentialIssuer?
      get() = _builder.credentialIssuerOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun registry_api.v1.Registry.CreateCredentialIssuerRequest.copy(block: `registry_api.v1`.CreateCredentialIssuerRequestKt.Dsl.() -> kotlin.Unit): registry_api.v1.Registry.CreateCredentialIssuerRequest =
  `registry_api.v1`.CreateCredentialIssuerRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val registry_api.v1.Registry.CreateCredentialIssuerRequestOrBuilder.credentialIssuerOrNull: registry_api.v1.Registry.CredentialIssuer?
  get() = if (hasCredentialIssuer()) getCredentialIssuer() else null

