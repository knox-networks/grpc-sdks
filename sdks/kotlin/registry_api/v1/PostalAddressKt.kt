// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: registry_api/v1/registry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package registry_api.v1;

@kotlin.jvm.JvmName("-initializepostalAddress")
public inline fun postalAddress(block: registry_api.v1.PostalAddressKt.Dsl.() -> kotlin.Unit): registry_api.v1.Registry.PostalAddress =
  registry_api.v1.PostalAddressKt.Dsl._create(registry_api.v1.Registry.PostalAddress.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "country": "United States",
 * "city": "Anytown",
 * "state": "AL",
 * "postal_code": "10101",
 * "street": "123 Sesame Street"
 * }
 * ```
 *
 * Protobuf type `registry_api.v1.PostalAddress`
 */
public object PostalAddressKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: registry_api.v1.Registry.PostalAddress.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: registry_api.v1.Registry.PostalAddress.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): registry_api.v1.Registry.PostalAddress = _builder.build()

    /**
     * ```
     * Country, e.g. United States
     * ```
     *
     * `string country = 1;`
     */
    public var country: kotlin.String
      @JvmName("getCountry")
      get() = _builder.getCountry()
      @JvmName("setCountry")
      set(value) {
        _builder.setCountry(value)
      }
    /**
     * ```
     * Country, e.g. United States
     * ```
     *
     * `string country = 1;`
     */
    public fun clearCountry() {
      _builder.clearCountry()
    }

    /**
     * ```
     * City, e.g. Anytown
     * ```
     *
     * `string city = 2;`
     */
    public var city: kotlin.String
      @JvmName("getCity")
      get() = _builder.getCity()
      @JvmName("setCity")
      set(value) {
        _builder.setCity(value)
      }
    /**
     * ```
     * City, e.g. Anytown
     * ```
     *
     * `string city = 2;`
     */
    public fun clearCity() {
      _builder.clearCity()
    }

    /**
     * ```
     * State, e.g. AL
     * ```
     *
     * `string state = 3;`
     */
    public var state: kotlin.String
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * ```
     * State, e.g. AL
     * ```
     *
     * `string state = 3;`
     */
    public fun clearState() {
      _builder.clearState()
    }

    /**
     * ```
     * Postal Code, e.g. 10101
     * ```
     *
     * `string postal_code = 4;`
     */
    public var postalCode: kotlin.String
      @JvmName("getPostalCode")
      get() = _builder.getPostalCode()
      @JvmName("setPostalCode")
      set(value) {
        _builder.setPostalCode(value)
      }
    /**
     * ```
     * Postal Code, e.g. 10101
     * ```
     *
     * `string postal_code = 4;`
     */
    public fun clearPostalCode() {
      _builder.clearPostalCode()
    }

    /**
     * ```
     * Street Address, e.g. 123 Sesame Street
     * ```
     *
     * `string street = 5;`
     */
    public var street: kotlin.String
      @JvmName("getStreet")
      get() = _builder.getStreet()
      @JvmName("setStreet")
      set(value) {
        _builder.setStreet(value)
      }
    /**
     * ```
     * Street Address, e.g. 123 Sesame Street
     * ```
     *
     * `string street = 5;`
     */
    public fun clearStreet() {
      _builder.clearStreet()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun registry_api.v1.Registry.PostalAddress.copy(block: `registry_api.v1`.PostalAddressKt.Dsl.() -> kotlin.Unit): registry_api.v1.Registry.PostalAddress =
  `registry_api.v1`.PostalAddressKt.Dsl._create(this.toBuilder()).apply { block() }._build()

