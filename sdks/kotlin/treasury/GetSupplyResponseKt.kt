// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: treasury/v1/treasury.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package treasury;

@kotlin.jvm.JvmName("-initializegetSupplyResponse")
public inline fun getSupplyResponse(block: treasury.GetSupplyResponseKt.Dsl.() -> kotlin.Unit): treasury.TreasuryOuterClass.GetSupplyResponse =
  treasury.GetSupplyResponseKt.Dsl._create(treasury.TreasuryOuterClass.GetSupplyResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "supply": [
 * {
 * "denomination": {
 * "currency_code": "USD",
 * "amount": 2000,
 * "decimals": 2
 * },
 * "count": 5,
 * "total": {
 * "currency_code": "USD",
 * "amount": 10000,
 * "decimals": 2
 * }
 * },
 * {
 * "denomination": {
 * "currency_code": "USD",
 * "amount": 1000,
 * "decimals": 2
 * },
 * "count": 5,
 * "total": {
 * "currency_code": "USD",
 * "amount": 5000,
 * "decimals": 2
 * }
 * }
 * ],
 * "total": {
 * "currency_code": "USD",
 * "amount": 15000,
 * "decimals": 2
 * }
 * }
 * ```
 *
 * Protobuf type `treasury.GetSupplyResponse`
 */
public object GetSupplyResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: treasury.TreasuryOuterClass.GetSupplyResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: treasury.TreasuryOuterClass.GetSupplyResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): treasury.TreasuryOuterClass.GetSupplyResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SupplyProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     */
     public val supply: com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSupplyList()
      )
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     * @param value The supply to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSupply")
    public fun com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>.add(value: treasury.TreasuryOuterClass.DenominationCount) {
      _builder.addSupply(value)
    }
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     * @param value The supply to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSupply")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>.plusAssign(value: treasury.TreasuryOuterClass.DenominationCount) {
      add(value)
    }
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     * @param values The supply to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSupply")
    public fun com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>.addAll(values: kotlin.collections.Iterable<treasury.TreasuryOuterClass.DenominationCount>) {
      _builder.addAllSupply(values)
    }
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     * @param values The supply to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSupply")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>.plusAssign(values: kotlin.collections.Iterable<treasury.TreasuryOuterClass.DenominationCount>) {
      addAll(values)
    }
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     * @param index The index to set the value at.
     * @param value The supply to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSupply")
    public operator fun com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>.set(index: kotlin.Int, value: treasury.TreasuryOuterClass.DenominationCount) {
      _builder.setSupply(index, value)
    }
    /**
     * ```
     * A list of denomination counts of the digital banknotes held in supply.
     * ```
     *
     * `repeated .treasury.DenominationCount supply = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSupply")
    public fun com.google.protobuf.kotlin.DslList<treasury.TreasuryOuterClass.DenominationCount, SupplyProxy>.clear() {
      _builder.clearSupply()
    }


    /**
     * ```
     * grand total sum of all promissories
     * ```
     *
     * `.common.Amount total = 2;`
     */
    public var total: common.Common.Amount
      @JvmName("getTotal")
      get() = _builder.getTotal()
      @JvmName("setTotal")
      set(value) {
        _builder.setTotal(value)
      }
    /**
     * ```
     * grand total sum of all promissories
     * ```
     *
     * `.common.Amount total = 2;`
     */
    public fun clearTotal() {
      _builder.clearTotal()
    }
    /**
     * ```
     * grand total sum of all promissories
     * ```
     *
     * `.common.Amount total = 2;`
     * @return Whether the total field is set.
     */
    public fun hasTotal(): kotlin.Boolean {
      return _builder.hasTotal()
    }
    public val GetSupplyResponseKt.Dsl.totalOrNull: common.Common.Amount?
      get() = _builder.totalOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun treasury.TreasuryOuterClass.GetSupplyResponse.copy(block: `treasury`.GetSupplyResponseKt.Dsl.() -> kotlin.Unit): treasury.TreasuryOuterClass.GetSupplyResponse =
  `treasury`.GetSupplyResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val treasury.TreasuryOuterClass.GetSupplyResponseOrBuilder.totalOrNull: common.Common.Amount?
  get() = if (hasTotal()) getTotal() else null

