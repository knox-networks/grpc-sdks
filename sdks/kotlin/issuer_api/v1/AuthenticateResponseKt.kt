// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: issuer_api/v1/issuer.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package issuer_api.v1;

@kotlin.jvm.JvmName("-initializeauthenticateResponse")
public inline fun authenticateResponse(block: issuer_api.v1.AuthenticateResponseKt.Dsl.() -> kotlin.Unit): issuer_api.v1.Issuer.AuthenticateResponse =
  issuer_api.v1.AuthenticateResponseKt.Dsl._create(issuer_api.v1.Issuer.AuthenticateResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "challenge": "ByteLengthChallengeVariesByAlgo="
 * }
 * ```
 *
 * Protobuf type `issuer_api.v1.AuthenticateResponse`
 */
public object AuthenticateResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: issuer_api.v1.Issuer.AuthenticateResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: issuer_api.v1.Issuer.AuthenticateResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): issuer_api.v1.Issuer.AuthenticateResponse = _builder.build()

    /**
     * ```
     * Random unique string to be signed by the authorized key.
     * ```
     *
     * `bytes challenge = 1;`
     */
    public var challenge: com.google.protobuf.ByteString
      @JvmName("getChallenge")
      get() = _builder.getChallenge()
      @JvmName("setChallenge")
      set(value) {
        _builder.setChallenge(value)
      }
    /**
     * ```
     * Random unique string to be signed by the authorized key.
     * ```
     *
     * `bytes challenge = 1;`
     */
    public fun clearChallenge() {
      _builder.clearChallenge()
    }

    /**
     * ```
     * UUID representing this authentication session
     * ```
     *
     * `string session = 2;`
     */
    public var session: kotlin.String
      @JvmName("getSession")
      get() = _builder.getSession()
      @JvmName("setSession")
      set(value) {
        _builder.setSession(value)
      }
    /**
     * ```
     * UUID representing this authentication session
     * ```
     *
     * `string session = 2;`
     */
    public fun clearSession() {
      _builder.clearSession()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun issuer_api.v1.Issuer.AuthenticateResponse.copy(block: `issuer_api.v1`.AuthenticateResponseKt.Dsl.() -> kotlin.Unit): issuer_api.v1.Issuer.AuthenticateResponse =
  `issuer_api.v1`.AuthenticateResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

