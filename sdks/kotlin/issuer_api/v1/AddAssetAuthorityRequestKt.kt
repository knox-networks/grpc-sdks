// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: issuer_api/v1/issuer.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package issuer_api.v1;

@kotlin.jvm.JvmName("-initializeaddAssetAuthorityRequest")
public inline fun addAssetAuthorityRequest(block: issuer_api.v1.AddAssetAuthorityRequestKt.Dsl.() -> kotlin.Unit): issuer_api.v1.Issuer.AddAssetAuthorityRequest =
  issuer_api.v1.AddAssetAuthorityRequestKt.Dsl._create(issuer_api.v1.Issuer.AddAssetAuthorityRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "currency_code": "USD",
 * "authority": {
 * "verifier": "VerifierLengthVariesByAlgo",
 * "url": "AUTHORITY_URL"
 * }
 * }
 * ```
 *
 * Protobuf type `issuer_api.v1.AddAssetAuthorityRequest`
 */
public object AddAssetAuthorityRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: issuer_api.v1.Issuer.AddAssetAuthorityRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: issuer_api.v1.Issuer.AddAssetAuthorityRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): issuer_api.v1.Issuer.AddAssetAuthorityRequest = _builder.build()

    /**
     * ```
     * Currency Code
     * ```
     *
     * `string currency_code = 1;`
     */
    public var currencyCode: kotlin.String
      @JvmName("getCurrencyCode")
      get() = _builder.getCurrencyCode()
      @JvmName("setCurrencyCode")
      set(value) {
        _builder.setCurrencyCode(value)
      }
    /**
     * ```
     * Currency Code
     * ```
     *
     * `string currency_code = 1;`
     */
    public fun clearCurrencyCode() {
      _builder.clearCurrencyCode()
    }

    /**
     * ```
     * Asset Authority
     * ```
     *
     * `.common.AssetAuthority authority = 2;`
     */
    public var authority: common.Common.AssetAuthority
      @JvmName("getAuthority")
      get() = _builder.getAuthority()
      @JvmName("setAuthority")
      set(value) {
        _builder.setAuthority(value)
      }
    /**
     * ```
     * Asset Authority
     * ```
     *
     * `.common.AssetAuthority authority = 2;`
     */
    public fun clearAuthority() {
      _builder.clearAuthority()
    }
    /**
     * ```
     * Asset Authority
     * ```
     *
     * `.common.AssetAuthority authority = 2;`
     * @return Whether the authority field is set.
     */
    public fun hasAuthority(): kotlin.Boolean {
      return _builder.hasAuthority()
    }
    public val AddAssetAuthorityRequestKt.Dsl.authorityOrNull: common.Common.AssetAuthority?
      get() = _builder.authorityOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun issuer_api.v1.Issuer.AddAssetAuthorityRequest.copy(block: `issuer_api.v1`.AddAssetAuthorityRequestKt.Dsl.() -> kotlin.Unit): issuer_api.v1.Issuer.AddAssetAuthorityRequest =
  `issuer_api.v1`.AddAssetAuthorityRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val issuer_api.v1.Issuer.AddAssetAuthorityRequestOrBuilder.authorityOrNull: common.Common.AssetAuthority?
  get() = if (hasAuthority()) getAuthority() else null

