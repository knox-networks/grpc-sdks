// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: issuer_api/v1/issuer.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package issuer_api.v1;

@kotlin.jvm.JvmName("-initializeissueRequest")
public inline fun issueRequest(block: issuer_api.v1.IssueRequestKt.Dsl.() -> kotlin.Unit): issuer_api.v1.Issuer.IssueRequest =
  issuer_api.v1.IssueRequestKt.Dsl._create(issuer_api.v1.Issuer.IssueRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "authentication_signature": {
 * "signature": "ByteLengthSignatureVariesByAlgo=",
 * "verifier": {
 * "signature_system": 1,
 * "verifier": "VerifierLengthChangesByAlgo="
 * }
 * },
 * "amount": {
 * "currency_code":"USD",
 * "amount":100,
 * "decimals":2
 * },
 * "authority": {
 * "signature_system": 1,
 * "verifier": "VerifierLengthChangesByAlgo="
 * },
 * "distribution": {
 * "value": [
 * {
 * "key": 20,
 * "value": 2
 * },
 * {
 * "key": 50,
 * "value": 1
 * },
 * {
 * "key": 10,
 * "value": 1
 * }
 * ]
 * }
 * }
 * ```
 *
 * Protobuf type `issuer_api.v1.IssueRequest`
 */
public object IssueRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: issuer_api.v1.Issuer.IssueRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: issuer_api.v1.Issuer.IssueRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): issuer_api.v1.Issuer.IssueRequest = _builder.build()

    /**
     * ```
     * Authentication challenge signature.
     * ```
     *
     * `.common.AuthenticationSignature authentication_signature = 1;`
     */
    public var authenticationSignature: common.Common.AuthenticationSignature
      @JvmName("getAuthenticationSignature")
      get() = _builder.getAuthenticationSignature()
      @JvmName("setAuthenticationSignature")
      set(value) {
        _builder.setAuthenticationSignature(value)
      }
    /**
     * ```
     * Authentication challenge signature.
     * ```
     *
     * `.common.AuthenticationSignature authentication_signature = 1;`
     */
    public fun clearAuthenticationSignature() {
      _builder.clearAuthenticationSignature()
    }
    /**
     * ```
     * Authentication challenge signature.
     * ```
     *
     * `.common.AuthenticationSignature authentication_signature = 1;`
     * @return Whether the authenticationSignature field is set.
     */
    public fun hasAuthenticationSignature(): kotlin.Boolean {
      return _builder.hasAuthenticationSignature()
    }
    public val IssueRequestKt.Dsl.authenticationSignatureOrNull: common.Common.AuthenticationSignature?
      get() = _builder.authenticationSignatureOrNull

    /**
     * ```
     * Total amount to be issued.
     * ```
     *
     * `.common.Amount amount = 2;`
     */
    public var amount: common.Common.Amount
      @JvmName("getAmount")
      get() = _builder.getAmount()
      @JvmName("setAmount")
      set(value) {
        _builder.setAmount(value)
      }
    /**
     * ```
     * Total amount to be issued.
     * ```
     *
     * `.common.Amount amount = 2;`
     */
    public fun clearAmount() {
      _builder.clearAmount()
    }
    /**
     * ```
     * Total amount to be issued.
     * ```
     *
     * `.common.Amount amount = 2;`
     * @return Whether the amount field is set.
     */
    public fun hasAmount(): kotlin.Boolean {
      return _builder.hasAmount()
    }
    public val IssueRequestKt.Dsl.amountOrNull: common.Common.Amount?
      get() = _builder.amountOrNull

    /**
     * ```
     * Verifier of the Authority.
     * ```
     *
     * `.common.DynamicVerifier authority = 3;`
     */
    public var authority: common.Common.DynamicVerifier
      @JvmName("getAuthority")
      get() = _builder.getAuthority()
      @JvmName("setAuthority")
      set(value) {
        _builder.setAuthority(value)
      }
    /**
     * ```
     * Verifier of the Authority.
     * ```
     *
     * `.common.DynamicVerifier authority = 3;`
     */
    public fun clearAuthority() {
      _builder.clearAuthority()
    }
    /**
     * ```
     * Verifier of the Authority.
     * ```
     *
     * `.common.DynamicVerifier authority = 3;`
     * @return Whether the authority field is set.
     */
    public fun hasAuthority(): kotlin.Boolean {
      return _builder.hasAuthority()
    }
    public val IssueRequestKt.Dsl.authorityOrNull: common.Common.DynamicVerifier?
      get() = _builder.authorityOrNull

    /**
     * ```
     * Verifier of the Recipient.
     * ```
     *
     * `.common.DynamicVerifier recipient = 5;`
     */
    public var recipient: common.Common.DynamicVerifier
      @JvmName("getRecipient")
      get() = _builder.getRecipient()
      @JvmName("setRecipient")
      set(value) {
        _builder.setRecipient(value)
      }
    /**
     * ```
     * Verifier of the Recipient.
     * ```
     *
     * `.common.DynamicVerifier recipient = 5;`
     */
    public fun clearRecipient() {
      _builder.clearRecipient()
    }
    /**
     * ```
     * Verifier of the Recipient.
     * ```
     *
     * `.common.DynamicVerifier recipient = 5;`
     * @return Whether the recipient field is set.
     */
    public fun hasRecipient(): kotlin.Boolean {
      return _builder.hasRecipient()
    }
    public val IssueRequestKt.Dsl.recipientOrNull: common.Common.DynamicVerifier?
      get() = _builder.recipientOrNull

    /**
     * ```
     * sum must match corresponding amount.amount
     * ```
     *
     * `optional .common.Distribution distribution = 4;`
     */
    public var distribution: common.Common.Distribution
      @JvmName("getDistribution")
      get() = _builder.getDistribution()
      @JvmName("setDistribution")
      set(value) {
        _builder.setDistribution(value)
      }
    /**
     * ```
     * sum must match corresponding amount.amount
     * ```
     *
     * `optional .common.Distribution distribution = 4;`
     */
    public fun clearDistribution() {
      _builder.clearDistribution()
    }
    /**
     * ```
     * sum must match corresponding amount.amount
     * ```
     *
     * `optional .common.Distribution distribution = 4;`
     * @return Whether the distribution field is set.
     */
    public fun hasDistribution(): kotlin.Boolean {
      return _builder.hasDistribution()
    }
    public val IssueRequestKt.Dsl.distributionOrNull: common.Common.Distribution?
      get() = _builder.distributionOrNull

    /**
     * ```
     * Authentication session ID that should match the one given by the AuthenticationResponse
     * ```
     *
     * `string session = 6;`
     */
    public var session: kotlin.String
      @JvmName("getSession")
      get() = _builder.getSession()
      @JvmName("setSession")
      set(value) {
        _builder.setSession(value)
      }
    /**
     * ```
     * Authentication session ID that should match the one given by the AuthenticationResponse
     * ```
     *
     * `string session = 6;`
     */
    public fun clearSession() {
      _builder.clearSession()
    }

    /**
     * ```
     * Signature system used.
     * ```
     *
     * `.common.SignatureSystem signature_system = 7;`
     */
    public var signatureSystem: common.Common.SignatureSystem
      @JvmName("getSignatureSystem")
      get() = _builder.getSignatureSystem()
      @JvmName("setSignatureSystem")
      set(value) {
        _builder.setSignatureSystem(value)
      }
    public var signatureSystemValue: kotlin.Int
      @JvmName("getSignatureSystemValue")
      get() = _builder.getSignatureSystemValue()
      @JvmName("setSignatureSystemValue")
      set(value) {
        _builder.setSignatureSystemValue(value)
      }
    /**
     * ```
     * Signature system used.
     * ```
     *
     * `.common.SignatureSystem signature_system = 7;`
     */
    public fun clearSignatureSystem() {
      _builder.clearSignatureSystem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun issuer_api.v1.Issuer.IssueRequest.copy(block: `issuer_api.v1`.IssueRequestKt.Dsl.() -> kotlin.Unit): issuer_api.v1.Issuer.IssueRequest =
  `issuer_api.v1`.IssueRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val issuer_api.v1.Issuer.IssueRequestOrBuilder.authenticationSignatureOrNull: common.Common.AuthenticationSignature?
  get() = if (hasAuthenticationSignature()) getAuthenticationSignature() else null

public val issuer_api.v1.Issuer.IssueRequestOrBuilder.amountOrNull: common.Common.Amount?
  get() = if (hasAmount()) getAmount() else null

public val issuer_api.v1.Issuer.IssueRequestOrBuilder.authorityOrNull: common.Common.DynamicVerifier?
  get() = if (hasAuthority()) getAuthority() else null

public val issuer_api.v1.Issuer.IssueRequestOrBuilder.recipientOrNull: common.Common.DynamicVerifier?
  get() = if (hasRecipient()) getRecipient() else null

public val issuer_api.v1.Issuer.IssueRequestOrBuilder.distributionOrNull: common.Common.Distribution?
  get() = if (hasDistribution()) getDistribution() else null

