// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user_api/v1/user.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package user_api.v1;

@kotlin.jvm.JvmName("-initializeauthnWithPasswordResponse")
public inline fun authnWithPasswordResponse(block: user_api.v1.AuthnWithPasswordResponseKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.AuthnWithPasswordResponse =
  user_api.v1.AuthnWithPasswordResponseKt.Dsl._create(user_api.v1.UserOuterClass.AuthnWithPasswordResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "user": {
 * "uuid": "UUID", 
 * "first_name": "John", 
 * "last_name": "Doe", 
 * "email": "example@gmail.com", 
 * "role": 0, 
 * "avatar": "AVATAR_URL", 
 * "phone": "+1 555 555 5555", 
 * "dids": [
 * "did:method-name:zDIDMultibase58Encoded", 
 * "did:method-name:zDIDMultibase58Encoded"
 * ], 
 * "external_ids": [
 * {
 * "key": "KEY1", 
 * "value": "VALUE1"
 * }, 
 * {
 * "key": "KEY2", 
 * "value": "VALUE2"
 * }
 * ], 
 * "metadata": { 
 * "fields": []
 * },
 * "account": "15436675"
 * }, 
 * "auth_token": {
 * "token": "TOKEN", 
 * "token_type": "TOKEN_TYPE", 
 * "expires_in": 100, 
 * "refresh_token": "REFRESH_TOKEN"
 * }
 * }
 * ```
 *
 * Protobuf type `user_api.v1.AuthnWithPasswordResponse`
 */
public object AuthnWithPasswordResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: user_api.v1.UserOuterClass.AuthnWithPasswordResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: user_api.v1.UserOuterClass.AuthnWithPasswordResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): user_api.v1.UserOuterClass.AuthnWithPasswordResponse = _builder.build()

    /**
     * ```
     * User object of the subject.
     * ```
     *
     * `.user_api.v1.User user = 1;`
     */
    public var user: user_api.v1.UserOuterClass.User
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * ```
     * User object of the subject.
     * ```
     *
     * `.user_api.v1.User user = 1;`
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * ```
     * User object of the subject.
     * ```
     *
     * `.user_api.v1.User user = 1;`
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }
    public val AuthnWithPasswordResponseKt.Dsl.userOrNull: user_api.v1.UserOuterClass.User?
      get() = _builder.userOrNull

    /**
     * ```
     * OAuth2 RFC6749 Access Token.
     * ```
     *
     * `.user_api.v1.AuthToken auth_token = 2;`
     */
    public var authToken: user_api.v1.UserOuterClass.AuthToken
      @JvmName("getAuthToken")
      get() = _builder.getAuthToken()
      @JvmName("setAuthToken")
      set(value) {
        _builder.setAuthToken(value)
      }
    /**
     * ```
     * OAuth2 RFC6749 Access Token.
     * ```
     *
     * `.user_api.v1.AuthToken auth_token = 2;`
     */
    public fun clearAuthToken() {
      _builder.clearAuthToken()
    }
    /**
     * ```
     * OAuth2 RFC6749 Access Token.
     * ```
     *
     * `.user_api.v1.AuthToken auth_token = 2;`
     * @return Whether the authToken field is set.
     */
    public fun hasAuthToken(): kotlin.Boolean {
      return _builder.hasAuthToken()
    }
    public val AuthnWithPasswordResponseKt.Dsl.authTokenOrNull: user_api.v1.UserOuterClass.AuthToken?
      get() = _builder.authTokenOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun user_api.v1.UserOuterClass.AuthnWithPasswordResponse.copy(block: `user_api.v1`.AuthnWithPasswordResponseKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.AuthnWithPasswordResponse =
  `user_api.v1`.AuthnWithPasswordResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val user_api.v1.UserOuterClass.AuthnWithPasswordResponseOrBuilder.userOrNull: user_api.v1.UserOuterClass.User?
  get() = if (hasUser()) getUser() else null

public val user_api.v1.UserOuterClass.AuthnWithPasswordResponseOrBuilder.authTokenOrNull: user_api.v1.UserOuterClass.AuthToken?
  get() = if (hasAuthToken()) getAuthToken() else null

