// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user_api/v1/user.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package user_api.v1;

@kotlin.jvm.JvmName("-initializeregisterWalletRequest")
public inline fun registerWalletRequest(block: user_api.v1.RegisterWalletRequestKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.RegisterWalletRequest =
  user_api.v1.RegisterWalletRequestKt.Dsl._create(user_api.v1.UserOuterClass.RegisterWalletRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "signature": "ByteLengthSignatureVariesByAlgo=", 
 * "nonce": "NONCE", 
 * "did": "did:method-name:zDIDMultibase58Encoded",
 * "did_type": "DID_TYPE",
 * "purpose": "PURPOSE",
 * "metadata": { 
 * "fields": [
 * {
 * "key": "VALUE"
 * }
 * ]
 * }
 * }
 * ```
 *
 * Protobuf type `user_api.v1.RegisterWalletRequest`
 */
public object RegisterWalletRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: user_api.v1.UserOuterClass.RegisterWalletRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: user_api.v1.UserOuterClass.RegisterWalletRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): user_api.v1.UserOuterClass.RegisterWalletRequest = _builder.build()

    /**
     * ```
     * Signed value of the challenge by the wallet.
     * ```
     *
     * `bytes signature = 1;`
     */
    public var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * ```
     * Signed value of the challenge by the wallet.
     * ```
     *
     * `bytes signature = 1;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }

    /**
     * ```
     * Value used for the challenge.
     * ```
     *
     * `string nonce = 2;`
     */
    public var nonce: kotlin.String
      @JvmName("getNonce")
      get() = _builder.getNonce()
      @JvmName("setNonce")
      set(value) {
        _builder.setNonce(value)
      }
    /**
     * ```
     * Value used for the challenge.
     * ```
     *
     * `string nonce = 2;`
     */
    public fun clearNonce() {
      _builder.clearNonce()
    }

    /**
     * ```
     * W3C Decentralized Identifier (DID) of the wallet.
     * ```
     *
     * `string did = 3;`
     */
    public var did: kotlin.String
      @JvmName("getDid")
      get() = _builder.getDid()
      @JvmName("setDid")
      set(value) {
        _builder.setDid(value)
      }
    /**
     * ```
     * W3C Decentralized Identifier (DID) of the wallet.
     * ```
     *
     * `string did = 3;`
     */
    public fun clearDid() {
      _builder.clearDid()
    }

    /**
     * ```
     * Type of DID.
     * ```
     *
     * `string did_type = 4;`
     */
    public var didType: kotlin.String
      @JvmName("getDidType")
      get() = _builder.getDidType()
      @JvmName("setDidType")
      set(value) {
        _builder.setDidType(value)
      }
    /**
     * ```
     * Type of DID.
     * ```
     *
     * `string did_type = 4;`
     */
    public fun clearDidType() {
      _builder.clearDidType()
    }

    /**
     * ```
     * Purpose of the wallet association.
     * ```
     *
     * `string purpose = 5;`
     */
    public var purpose: kotlin.String
      @JvmName("getPurpose")
      get() = _builder.getPurpose()
      @JvmName("setPurpose")
      set(value) {
        _builder.setPurpose(value)
      }
    /**
     * ```
     * Purpose of the wallet association.
     * ```
     *
     * `string purpose = 5;`
     */
    public fun clearPurpose() {
      _builder.clearPurpose()
    }

    /**
     * ```
     * Additional data about the wallet.
     * ```
     *
     * `.google.protobuf.Struct metadata = 12;`
     */
    public var metadata: com.google.protobuf.Struct
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * ```
     * Additional data about the wallet.
     * ```
     *
     * `.google.protobuf.Struct metadata = 12;`
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * ```
     * Additional data about the wallet.
     * ```
     *
     * `.google.protobuf.Struct metadata = 12;`
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }
    public val RegisterWalletRequestKt.Dsl.metadataOrNull: com.google.protobuf.Struct?
      get() = _builder.metadataOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun user_api.v1.UserOuterClass.RegisterWalletRequest.copy(block: `user_api.v1`.RegisterWalletRequestKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.RegisterWalletRequest =
  `user_api.v1`.RegisterWalletRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val user_api.v1.UserOuterClass.RegisterWalletRequestOrBuilder.metadataOrNull: com.google.protobuf.Struct?
  get() = if (hasMetadata()) getMetadata() else null

