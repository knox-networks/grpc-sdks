// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user_api/v1/user.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package user_api.v1;

@kotlin.jvm.JvmName("-initializeauthnWalletRequest")
public inline fun authnWalletRequest(block: user_api.v1.AuthnWalletRequestKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.AuthnWalletRequest =
  user_api.v1.AuthnWalletRequestKt.Dsl._create(user_api.v1.UserOuterClass.AuthnWalletRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "signature": "ByteLengthSignatureVariesByAlgo=", 
 * "nonce": "NONCE", 
 * "did": "did:method-name:zDIDMultibase58Encoded"
 * }
 * ```
 *
 * Protobuf type `user_api.v1.AuthnWalletRequest`
 */
public object AuthnWalletRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: user_api.v1.UserOuterClass.AuthnWalletRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: user_api.v1.UserOuterClass.AuthnWalletRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): user_api.v1.UserOuterClass.AuthnWalletRequest = _builder.build()

    /**
     * ```
     * Signed value of the challenge by the wallet.
     * ```
     *
     * `bytes signature = 1;`
     */
    public var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * ```
     * Signed value of the challenge by the wallet.
     * ```
     *
     * `bytes signature = 1;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }

    /**
     * ```
     * Value used for the challenge.
     * ```
     *
     * `string nonce = 2;`
     */
    public var nonce: kotlin.String
      @JvmName("getNonce")
      get() = _builder.getNonce()
      @JvmName("setNonce")
      set(value) {
        _builder.setNonce(value)
      }
    /**
     * ```
     * Value used for the challenge.
     * ```
     *
     * `string nonce = 2;`
     */
    public fun clearNonce() {
      _builder.clearNonce()
    }

    /**
     * ```
     * W3C Decentralized Identifier (DID) of the wallet.
     * ```
     *
     * `string did = 3;`
     */
    public var did: kotlin.String
      @JvmName("getDid")
      get() = _builder.getDid()
      @JvmName("setDid")
      set(value) {
        _builder.setDid(value)
      }
    /**
     * ```
     * W3C Decentralized Identifier (DID) of the wallet.
     * ```
     *
     * `string did = 3;`
     */
    public fun clearDid() {
      _builder.clearDid()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun user_api.v1.UserOuterClass.AuthnWalletRequest.copy(block: `user_api.v1`.AuthnWalletRequestKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.AuthnWalletRequest =
  `user_api.v1`.AuthnWalletRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

