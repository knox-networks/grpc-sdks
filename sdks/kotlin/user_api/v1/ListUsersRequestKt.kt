// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user_api/v1/user.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package user_api.v1;

@kotlin.jvm.JvmName("-initializelistUsersRequest")
public inline fun listUsersRequest(block: user_api.v1.ListUsersRequestKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.ListUsersRequest =
  user_api.v1.ListUsersRequestKt.Dsl._create(user_api.v1.UserOuterClass.ListUsersRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * [Example]
 * {
 * "page": 0,
 * "page_size": 100,
 * "sort_by": {
 * "items": [
 * {
 * "field": "FIELD1",
 * "direction": 0
 * },
 * {
 * "field": "FIELD2",
 * "direction": 0
 * }
 * ]
 * },
 * "filter": {
 * "filters": [
 * {
 * "field": "FIELD1",
 * "operator": 0,
 * "value": {
 * "str_value": "STRINGVAL"
 * }
 * },
 * {
 * "field": "FIELD2",
 * "operator": 0,
 * "value": {
 * "int_value": 10
 * }
 * },
 * {
 * "field": "FIELD3",
 * "operator": 0,
 * "value": {
 * "bool_value": false
 * }
 * }
 * ],
 * "operator": 0
 * }
 * }
 * }
 * ```
 *
 * Protobuf type `user_api.v1.ListUsersRequest`
 */
public object ListUsersRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: user_api.v1.UserOuterClass.ListUsersRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: user_api.v1.UserOuterClass.ListUsersRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): user_api.v1.UserOuterClass.ListUsersRequest = _builder.build()

    /**
     * ```
     * Page number for pagination. First page is '0'
     * ```
     *
     * `int32 page = 1;`
     */
    public var page: kotlin.Int
      @JvmName("getPage")
      get() = _builder.getPage()
      @JvmName("setPage")
      set(value) {
        _builder.setPage(value)
      }
    /**
     * ```
     * Page number for pagination. First page is '0'
     * ```
     *
     * `int32 page = 1;`
     */
    public fun clearPage() {
      _builder.clearPage()
    }

    /**
     * ```
     * Size of the page for pagination.
     * ```
     *
     * `int32 page_size = 2;`
     */
    public var pageSize: kotlin.Int
      @JvmName("getPageSize")
      get() = _builder.getPageSize()
      @JvmName("setPageSize")
      set(value) {
        _builder.setPageSize(value)
      }
    /**
     * ```
     * Size of the page for pagination.
     * ```
     *
     * `int32 page_size = 2;`
     */
    public fun clearPageSize() {
      _builder.clearPageSize()
    }

    /**
     * ```
     * Sorting Method on User.
     * ```
     *
     * `.common.SortBy sort_by = 3;`
     */
    public var sortBy: common.Common.SortBy
      @JvmName("getSortBy")
      get() = _builder.getSortBy()
      @JvmName("setSortBy")
      set(value) {
        _builder.setSortBy(value)
      }
    /**
     * ```
     * Sorting Method on User.
     * ```
     *
     * `.common.SortBy sort_by = 3;`
     */
    public fun clearSortBy() {
      _builder.clearSortBy()
    }
    /**
     * ```
     * Sorting Method on User.
     * ```
     *
     * `.common.SortBy sort_by = 3;`
     * @return Whether the sortBy field is set.
     */
    public fun hasSortBy(): kotlin.Boolean {
      return _builder.hasSortBy()
    }
    public val ListUsersRequestKt.Dsl.sortByOrNull: common.Common.SortBy?
      get() = _builder.sortByOrNull

    /**
     * ```
     * Potential filters to apply to the list of users.
     * ```
     *
     * `.common.Filter filter = 4;`
     */
    public var filter: common.Common.Filter
      @JvmName("getFilter")
      get() = _builder.getFilter()
      @JvmName("setFilter")
      set(value) {
        _builder.setFilter(value)
      }
    /**
     * ```
     * Potential filters to apply to the list of users.
     * ```
     *
     * `.common.Filter filter = 4;`
     */
    public fun clearFilter() {
      _builder.clearFilter()
    }
    /**
     * ```
     * Potential filters to apply to the list of users.
     * ```
     *
     * `.common.Filter filter = 4;`
     * @return Whether the filter field is set.
     */
    public fun hasFilter(): kotlin.Boolean {
      return _builder.hasFilter()
    }
    public val ListUsersRequestKt.Dsl.filterOrNull: common.Common.Filter?
      get() = _builder.filterOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun user_api.v1.UserOuterClass.ListUsersRequest.copy(block: `user_api.v1`.ListUsersRequestKt.Dsl.() -> kotlin.Unit): user_api.v1.UserOuterClass.ListUsersRequest =
  `user_api.v1`.ListUsersRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val user_api.v1.UserOuterClass.ListUsersRequestOrBuilder.sortByOrNull: common.Common.SortBy?
  get() = if (hasSortBy()) getSortBy() else null

public val user_api.v1.UserOuterClass.ListUsersRequestOrBuilder.filterOrNull: common.Common.Filter?
  get() = if (hasFilter()) getFilter() else null

