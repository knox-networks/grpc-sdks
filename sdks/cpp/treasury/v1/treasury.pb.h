// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: treasury/v1/treasury.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_treasury_2fv1_2ftreasury_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_treasury_2fv1_2ftreasury_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_treasury_2fv1_2ftreasury_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_treasury_2fv1_2ftreasury_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_treasury_2fv1_2ftreasury_2eproto;
namespace treasury {
class ContractSummary;
struct ContractSummaryDefaultTypeInternal;
extern ContractSummaryDefaultTypeInternal _ContractSummary_default_instance_;
class DenominationCount;
struct DenominationCountDefaultTypeInternal;
extern DenominationCountDefaultTypeInternal _DenominationCount_default_instance_;
class GetSupplyRequest;
struct GetSupplyRequestDefaultTypeInternal;
extern GetSupplyRequestDefaultTypeInternal _GetSupplyRequest_default_instance_;
class GetSupplyResponse;
struct GetSupplyResponseDefaultTypeInternal;
extern GetSupplyResponseDefaultTypeInternal _GetSupplyResponse_default_instance_;
class ListTransactionsRequest;
struct ListTransactionsRequestDefaultTypeInternal;
extern ListTransactionsRequestDefaultTypeInternal _ListTransactionsRequest_default_instance_;
class ListTransactionsResponse;
struct ListTransactionsResponseDefaultTypeInternal;
extern ListTransactionsResponseDefaultTypeInternal _ListTransactionsResponse_default_instance_;
}  // namespace treasury
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace treasury {

// ===================================================================


// -------------------------------------------------------------------

class GetSupplyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:treasury.GetSupplyRequest) */ {
 public:
  inline GetSupplyRequest() : GetSupplyRequest(nullptr) {}
  ~GetSupplyRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSupplyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSupplyRequest(const GetSupplyRequest& from) : GetSupplyRequest(nullptr, from) {}
  inline GetSupplyRequest(GetSupplyRequest&& from) noexcept
      : GetSupplyRequest(nullptr, std::move(from)) {}
  inline GetSupplyRequest& operator=(const GetSupplyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSupplyRequest& operator=(GetSupplyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSupplyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSupplyRequest* internal_default_instance() {
    return reinterpret_cast<const GetSupplyRequest*>(
        &_GetSupplyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetSupplyRequest& a, GetSupplyRequest& b) { a.Swap(&b); }
  inline void Swap(GetSupplyRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSupplyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSupplyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetSupplyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSupplyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSupplyRequest& from) { GetSupplyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSupplyRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "treasury.GetSupplyRequest"; }

 protected:
  explicit GetSupplyRequest(::google::protobuf::Arena* arena);
  GetSupplyRequest(::google::protobuf::Arena* arena, const GetSupplyRequest& from);
  GetSupplyRequest(::google::protobuf::Arena* arena, GetSupplyRequest&& from) noexcept
      : GetSupplyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyCodeFieldNumber = 1,
  };
  // string currency_code = 1;
  void clear_currency_code() ;
  const std::string& currency_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency_code(Arg_&& arg, Args_... args);
  std::string* mutable_currency_code();
  PROTOBUF_NODISCARD std::string* release_currency_code();
  void set_allocated_currency_code(std::string* value);

  private:
  const std::string& _internal_currency_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency_code(
      const std::string& value);
  std::string* _internal_mutable_currency_code();

  public:
  // @@protoc_insertion_point(class_scope:treasury.GetSupplyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetSupplyRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSupplyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr currency_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_2fv1_2ftreasury_2eproto;
};
// -------------------------------------------------------------------

class ContractSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:treasury.ContractSummary) */ {
 public:
  inline ContractSummary() : ContractSummary(nullptr) {}
  ~ContractSummary() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ContractSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline ContractSummary(const ContractSummary& from) : ContractSummary(nullptr, from) {}
  inline ContractSummary(ContractSummary&& from) noexcept
      : ContractSummary(nullptr, std::move(from)) {}
  inline ContractSummary& operator=(const ContractSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContractSummary& operator=(ContractSummary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContractSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContractSummary* internal_default_instance() {
    return reinterpret_cast<const ContractSummary*>(
        &_ContractSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ContractSummary& a, ContractSummary& b) { a.Swap(&b); }
  inline void Swap(ContractSummary* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContractSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContractSummary* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ContractSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContractSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ContractSummary& from) { ContractSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ContractSummary* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "treasury.ContractSummary"; }

 protected:
  explicit ContractSummary(::google::protobuf::Arena* arena);
  ContractSummary(::google::protobuf::Arena* arena, const ContractSummary& from);
  ContractSummary(::google::protobuf::Arena* arena, ContractSummary&& from) noexcept
      : ContractSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartiesFieldNumber = 4,
    kContractIdFieldNumber = 1,
    kContractTypeFieldNumber = 2,
    kCreatedFieldNumber = 3,
    kMemoFieldNumber = 6,
  };
  // repeated string counterparties = 4;
  int counterparties_size() const;
  private:
  int _internal_counterparties_size() const;

  public:
  void clear_counterparties() ;
  const std::string& counterparties(int index) const;
  std::string* mutable_counterparties(int index);
  void set_counterparties(int index, const std::string& value);
  void set_counterparties(int index, std::string&& value);
  void set_counterparties(int index, const char* value);
  void set_counterparties(int index, const char* value, std::size_t size);
  void set_counterparties(int index, absl::string_view value);
  std::string* add_counterparties();
  void add_counterparties(const std::string& value);
  void add_counterparties(std::string&& value);
  void add_counterparties(const char* value);
  void add_counterparties(const char* value, std::size_t size);
  void add_counterparties(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& counterparties() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_counterparties();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_counterparties() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_counterparties();

  public:
  // string contract_id = 1;
  void clear_contract_id() ;
  const std::string& contract_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  std::string* mutable_contract_id();
  PROTOBUF_NODISCARD std::string* release_contract_id();
  void set_allocated_contract_id(std::string* value);

  private:
  const std::string& _internal_contract_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(
      const std::string& value);
  std::string* _internal_mutable_contract_id();

  public:
  // string contract_type = 2;
  void clear_contract_type() ;
  const std::string& contract_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_type(Arg_&& arg, Args_... args);
  std::string* mutable_contract_type();
  PROTOBUF_NODISCARD std::string* release_contract_type();
  void set_allocated_contract_type(std::string* value);

  private:
  const std::string& _internal_contract_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_type(
      const std::string& value);
  std::string* _internal_mutable_contract_type();

  public:
  // string created = 3;
  void clear_created() ;
  const std::string& created() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created(Arg_&& arg, Args_... args);
  std::string* mutable_created();
  PROTOBUF_NODISCARD std::string* release_created();
  void set_allocated_created(std::string* value);

  private:
  const std::string& _internal_created() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created(
      const std::string& value);
  std::string* _internal_mutable_created();

  public:
  // string memo = 6;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // @@protoc_insertion_point(class_scope:treasury.ContractSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ContractSummary_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ContractSummary& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> counterparties_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr contract_type_;
    ::google::protobuf::internal::ArenaStringPtr created_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_2fv1_2ftreasury_2eproto;
};
// -------------------------------------------------------------------

class ListTransactionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:treasury.ListTransactionsResponse) */ {
 public:
  inline ListTransactionsResponse() : ListTransactionsResponse(nullptr) {}
  ~ListTransactionsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTransactionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTransactionsResponse(const ListTransactionsResponse& from) : ListTransactionsResponse(nullptr, from) {}
  inline ListTransactionsResponse(ListTransactionsResponse&& from) noexcept
      : ListTransactionsResponse(nullptr, std::move(from)) {}
  inline ListTransactionsResponse& operator=(const ListTransactionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTransactionsResponse& operator=(ListTransactionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTransactionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTransactionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListTransactionsResponse*>(
        &_ListTransactionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ListTransactionsResponse& a, ListTransactionsResponse& b) { a.Swap(&b); }
  inline void Swap(ListTransactionsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTransactionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTransactionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTransactionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTransactionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTransactionsResponse& from) { ListTransactionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTransactionsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "treasury.ListTransactionsResponse"; }

 protected:
  explicit ListTransactionsResponse(::google::protobuf::Arena* arena);
  ListTransactionsResponse(::google::protobuf::Arena* arena, const ListTransactionsResponse& from);
  ListTransactionsResponse(::google::protobuf::Arena* arena, ListTransactionsResponse&& from) noexcept
      : ListTransactionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContractsFieldNumber = 1,
    kTotalContractsFieldNumber = 2,
  };
  // repeated .treasury.ContractSummary contracts = 1;
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;

  public:
  void clear_contracts() ;
  ::treasury::ContractSummary* mutable_contracts(int index);
  ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>* mutable_contracts();

  private:
  const ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>& _internal_contracts() const;
  ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>* _internal_mutable_contracts();
  public:
  const ::treasury::ContractSummary& contracts(int index) const;
  ::treasury::ContractSummary* add_contracts();
  const ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>& contracts() const;
  // uint32 totalContracts = 2;
  void clear_totalcontracts() ;
  ::uint32_t totalcontracts() const;
  void set_totalcontracts(::uint32_t value);

  private:
  ::uint32_t _internal_totalcontracts() const;
  void _internal_set_totalcontracts(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:treasury.ListTransactionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTransactionsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTransactionsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::treasury::ContractSummary > contracts_;
    ::uint32_t totalcontracts_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_2fv1_2ftreasury_2eproto;
};
// -------------------------------------------------------------------

class DenominationCount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:treasury.DenominationCount) */ {
 public:
  inline DenominationCount() : DenominationCount(nullptr) {}
  ~DenominationCount() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DenominationCount(
      ::google::protobuf::internal::ConstantInitialized);

  inline DenominationCount(const DenominationCount& from) : DenominationCount(nullptr, from) {}
  inline DenominationCount(DenominationCount&& from) noexcept
      : DenominationCount(nullptr, std::move(from)) {}
  inline DenominationCount& operator=(const DenominationCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline DenominationCount& operator=(DenominationCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DenominationCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const DenominationCount* internal_default_instance() {
    return reinterpret_cast<const DenominationCount*>(
        &_DenominationCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DenominationCount& a, DenominationCount& b) { a.Swap(&b); }
  inline void Swap(DenominationCount* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DenominationCount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DenominationCount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DenominationCount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DenominationCount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DenominationCount& from) { DenominationCount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DenominationCount* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "treasury.DenominationCount"; }

 protected:
  explicit DenominationCount(::google::protobuf::Arena* arena);
  DenominationCount(::google::protobuf::Arena* arena, const DenominationCount& from);
  DenominationCount(::google::protobuf::Arena* arena, DenominationCount&& from) noexcept
      : DenominationCount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDenominationFieldNumber = 1,
    kTotalFieldNumber = 3,
    kCountFieldNumber = 2,
  };
  // .common.Amount denomination = 1;
  bool has_denomination() const;
  void clear_denomination() ;
  const ::common::Amount& denomination() const;
  PROTOBUF_NODISCARD ::common::Amount* release_denomination();
  ::common::Amount* mutable_denomination();
  void set_allocated_denomination(::common::Amount* value);
  void unsafe_arena_set_allocated_denomination(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_denomination();

  private:
  const ::common::Amount& _internal_denomination() const;
  ::common::Amount* _internal_mutable_denomination();

  public:
  // .common.Amount total = 3;
  bool has_total() const;
  void clear_total() ;
  const ::common::Amount& total() const;
  PROTOBUF_NODISCARD ::common::Amount* release_total();
  ::common::Amount* mutable_total();
  void set_allocated_total(::common::Amount* value);
  void unsafe_arena_set_allocated_total(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_total();

  private:
  const ::common::Amount& _internal_total() const;
  ::common::Amount* _internal_mutable_total();

  public:
  // uint32 count = 2;
  void clear_count() ;
  ::uint32_t count() const;
  void set_count(::uint32_t value);

  private:
  ::uint32_t _internal_count() const;
  void _internal_set_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:treasury.DenominationCount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DenominationCount_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DenominationCount& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::common::Amount* denomination_;
    ::common::Amount* total_;
    ::uint32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_2fv1_2ftreasury_2eproto;
};
// -------------------------------------------------------------------

class ListTransactionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:treasury.ListTransactionsRequest) */ {
 public:
  inline ListTransactionsRequest() : ListTransactionsRequest(nullptr) {}
  ~ListTransactionsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTransactionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTransactionsRequest(const ListTransactionsRequest& from) : ListTransactionsRequest(nullptr, from) {}
  inline ListTransactionsRequest(ListTransactionsRequest&& from) noexcept
      : ListTransactionsRequest(nullptr, std::move(from)) {}
  inline ListTransactionsRequest& operator=(const ListTransactionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTransactionsRequest& operator=(ListTransactionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTransactionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTransactionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListTransactionsRequest*>(
        &_ListTransactionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListTransactionsRequest& a, ListTransactionsRequest& b) { a.Swap(&b); }
  inline void Swap(ListTransactionsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTransactionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTransactionsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTransactionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTransactionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTransactionsRequest& from) { ListTransactionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTransactionsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "treasury.ListTransactionsRequest"; }

 protected:
  explicit ListTransactionsRequest(::google::protobuf::Arena* arena);
  ListTransactionsRequest(::google::protobuf::Arena* arena, const ListTransactionsRequest& from);
  ListTransactionsRequest(::google::protobuf::Arena* arena, ListTransactionsRequest&& from) noexcept
      : ListTransactionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSortByFieldNumber = 3,
    kFiltersFieldNumber = 4,
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
  };
  // .common.SortBy sort_by = 3;
  bool has_sort_by() const;
  void clear_sort_by() ;
  const ::common::SortBy& sort_by() const;
  PROTOBUF_NODISCARD ::common::SortBy* release_sort_by();
  ::common::SortBy* mutable_sort_by();
  void set_allocated_sort_by(::common::SortBy* value);
  void unsafe_arena_set_allocated_sort_by(::common::SortBy* value);
  ::common::SortBy* unsafe_arena_release_sort_by();

  private:
  const ::common::SortBy& _internal_sort_by() const;
  ::common::SortBy* _internal_mutable_sort_by();

  public:
  // .common.Filter filters = 4;
  bool has_filters() const;
  void clear_filters() ;
  const ::common::Filter& filters() const;
  PROTOBUF_NODISCARD ::common::Filter* release_filters();
  ::common::Filter* mutable_filters();
  void set_allocated_filters(::common::Filter* value);
  void unsafe_arena_set_allocated_filters(::common::Filter* value);
  ::common::Filter* unsafe_arena_release_filters();

  private:
  const ::common::Filter& _internal_filters() const;
  ::common::Filter* _internal_mutable_filters();

  public:
  // int32 page = 1;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 2;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:treasury.ListTransactionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTransactionsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTransactionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::common::SortBy* sort_by_;
    ::common::Filter* filters_;
    ::int32_t page_;
    ::int32_t page_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_2fv1_2ftreasury_2eproto;
};
// -------------------------------------------------------------------

class GetSupplyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:treasury.GetSupplyResponse) */ {
 public:
  inline GetSupplyResponse() : GetSupplyResponse(nullptr) {}
  ~GetSupplyResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSupplyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSupplyResponse(const GetSupplyResponse& from) : GetSupplyResponse(nullptr, from) {}
  inline GetSupplyResponse(GetSupplyResponse&& from) noexcept
      : GetSupplyResponse(nullptr, std::move(from)) {}
  inline GetSupplyResponse& operator=(const GetSupplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSupplyResponse& operator=(GetSupplyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSupplyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSupplyResponse* internal_default_instance() {
    return reinterpret_cast<const GetSupplyResponse*>(
        &_GetSupplyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetSupplyResponse& a, GetSupplyResponse& b) { a.Swap(&b); }
  inline void Swap(GetSupplyResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSupplyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSupplyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetSupplyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSupplyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSupplyResponse& from) { GetSupplyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSupplyResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "treasury.GetSupplyResponse"; }

 protected:
  explicit GetSupplyResponse(::google::protobuf::Arena* arena);
  GetSupplyResponse(::google::protobuf::Arena* arena, const GetSupplyResponse& from);
  GetSupplyResponse(::google::protobuf::Arena* arena, GetSupplyResponse&& from) noexcept
      : GetSupplyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSupplyFieldNumber = 1,
    kTotalFieldNumber = 2,
  };
  // repeated .treasury.DenominationCount supply = 1;
  int supply_size() const;
  private:
  int _internal_supply_size() const;

  public:
  void clear_supply() ;
  ::treasury::DenominationCount* mutable_supply(int index);
  ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>* mutable_supply();

  private:
  const ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>& _internal_supply() const;
  ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>* _internal_mutable_supply();
  public:
  const ::treasury::DenominationCount& supply(int index) const;
  ::treasury::DenominationCount* add_supply();
  const ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>& supply() const;
  // .common.Amount total = 2;
  bool has_total() const;
  void clear_total() ;
  const ::common::Amount& total() const;
  PROTOBUF_NODISCARD ::common::Amount* release_total();
  ::common::Amount* mutable_total();
  void set_allocated_total(::common::Amount* value);
  void unsafe_arena_set_allocated_total(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_total();

  private:
  const ::common::Amount& _internal_total() const;
  ::common::Amount* _internal_mutable_total();

  public:
  // @@protoc_insertion_point(class_scope:treasury.GetSupplyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetSupplyResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSupplyResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::treasury::DenominationCount > supply_;
    ::common::Amount* total_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_2fv1_2ftreasury_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetSupplyRequest

// string currency_code = 1;
inline void GetSupplyRequest::clear_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.ClearToEmpty();
}
inline const std::string& GetSupplyRequest::currency_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.GetSupplyRequest.currency_code)
  return _internal_currency_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSupplyRequest::set_currency_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:treasury.GetSupplyRequest.currency_code)
}
inline std::string* GetSupplyRequest::mutable_currency_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency_code();
  // @@protoc_insertion_point(field_mutable:treasury.GetSupplyRequest.currency_code)
  return _s;
}
inline const std::string& GetSupplyRequest::_internal_currency_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_code_.Get();
}
inline void GetSupplyRequest::_internal_set_currency_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(value, GetArena());
}
inline std::string* GetSupplyRequest::_internal_mutable_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_code_.Mutable( GetArena());
}
inline std::string* GetSupplyRequest::release_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.GetSupplyRequest.currency_code)
  return _impl_.currency_code_.Release();
}
inline void GetSupplyRequest::set_allocated_currency_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_code_.IsDefault()) {
          _impl_.currency_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:treasury.GetSupplyRequest.currency_code)
}

// -------------------------------------------------------------------

// DenominationCount

// .common.Amount denomination = 1;
inline bool DenominationCount::has_denomination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.denomination_ != nullptr);
  return value;
}
inline const ::common::Amount& DenominationCount::_internal_denomination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.denomination_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& DenominationCount::denomination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.DenominationCount.denomination)
  return _internal_denomination();
}
inline void DenominationCount::unsafe_arena_set_allocated_denomination(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.denomination_);
  }
  _impl_.denomination_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:treasury.DenominationCount.denomination)
}
inline ::common::Amount* DenominationCount::release_denomination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.denomination_;
  _impl_.denomination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* DenominationCount::unsafe_arena_release_denomination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.DenominationCount.denomination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.denomination_;
  _impl_.denomination_ = nullptr;
  return temp;
}
inline ::common::Amount* DenominationCount::_internal_mutable_denomination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.denomination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.denomination_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.denomination_;
}
inline ::common::Amount* DenominationCount::mutable_denomination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_denomination();
  // @@protoc_insertion_point(field_mutable:treasury.DenominationCount.denomination)
  return _msg;
}
inline void DenominationCount::set_allocated_denomination(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.denomination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.denomination_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:treasury.DenominationCount.denomination)
}

// uint32 count = 2;
inline void DenominationCount::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0u;
}
inline ::uint32_t DenominationCount::count() const {
  // @@protoc_insertion_point(field_get:treasury.DenominationCount.count)
  return _internal_count();
}
inline void DenominationCount::set_count(::uint32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:treasury.DenominationCount.count)
}
inline ::uint32_t DenominationCount::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void DenominationCount::_internal_set_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// .common.Amount total = 3;
inline bool DenominationCount::has_total() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_ != nullptr);
  return value;
}
inline const ::common::Amount& DenominationCount::_internal_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.total_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& DenominationCount::total() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.DenominationCount.total)
  return _internal_total();
}
inline void DenominationCount::unsafe_arena_set_allocated_total(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_);
  }
  _impl_.total_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:treasury.DenominationCount.total)
}
inline ::common::Amount* DenominationCount::release_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Amount* released = _impl_.total_;
  _impl_.total_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* DenominationCount::unsafe_arena_release_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.DenominationCount.total)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Amount* temp = _impl_.total_;
  _impl_.total_ = nullptr;
  return temp;
}
inline ::common::Amount* DenominationCount::_internal_mutable_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.total_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.total_;
}
inline ::common::Amount* DenominationCount::mutable_total() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::Amount* _msg = _internal_mutable_total();
  // @@protoc_insertion_point(field_mutable:treasury.DenominationCount.total)
  return _msg;
}
inline void DenominationCount::set_allocated_total(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.total_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:treasury.DenominationCount.total)
}

// -------------------------------------------------------------------

// GetSupplyResponse

// repeated .treasury.DenominationCount supply = 1;
inline int GetSupplyResponse::_internal_supply_size() const {
  return _internal_supply().size();
}
inline int GetSupplyResponse::supply_size() const {
  return _internal_supply_size();
}
inline void GetSupplyResponse::clear_supply() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.supply_.Clear();
}
inline ::treasury::DenominationCount* GetSupplyResponse::mutable_supply(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:treasury.GetSupplyResponse.supply)
  return _internal_mutable_supply()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>* GetSupplyResponse::mutable_supply()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:treasury.GetSupplyResponse.supply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_supply();
}
inline const ::treasury::DenominationCount& GetSupplyResponse::supply(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.GetSupplyResponse.supply)
  return _internal_supply().Get(index);
}
inline ::treasury::DenominationCount* GetSupplyResponse::add_supply() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::treasury::DenominationCount* _add = _internal_mutable_supply()->Add();
  // @@protoc_insertion_point(field_add:treasury.GetSupplyResponse.supply)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>& GetSupplyResponse::supply() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:treasury.GetSupplyResponse.supply)
  return _internal_supply();
}
inline const ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>&
GetSupplyResponse::_internal_supply() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.supply_;
}
inline ::google::protobuf::RepeatedPtrField<::treasury::DenominationCount>*
GetSupplyResponse::_internal_mutable_supply() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.supply_;
}

// .common.Amount total = 2;
inline bool GetSupplyResponse::has_total() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_ != nullptr);
  return value;
}
inline const ::common::Amount& GetSupplyResponse::_internal_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.total_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& GetSupplyResponse::total() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.GetSupplyResponse.total)
  return _internal_total();
}
inline void GetSupplyResponse::unsafe_arena_set_allocated_total(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_);
  }
  _impl_.total_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:treasury.GetSupplyResponse.total)
}
inline ::common::Amount* GetSupplyResponse::release_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.total_;
  _impl_.total_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* GetSupplyResponse::unsafe_arena_release_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.GetSupplyResponse.total)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.total_;
  _impl_.total_ = nullptr;
  return temp;
}
inline ::common::Amount* GetSupplyResponse::_internal_mutable_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.total_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.total_;
}
inline ::common::Amount* GetSupplyResponse::mutable_total() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_total();
  // @@protoc_insertion_point(field_mutable:treasury.GetSupplyResponse.total)
  return _msg;
}
inline void GetSupplyResponse::set_allocated_total(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.total_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:treasury.GetSupplyResponse.total)
}

// -------------------------------------------------------------------

// ListTransactionsRequest

// int32 page = 1;
inline void ListTransactionsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListTransactionsRequest::page() const {
  // @@protoc_insertion_point(field_get:treasury.ListTransactionsRequest.page)
  return _internal_page();
}
inline void ListTransactionsRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:treasury.ListTransactionsRequest.page)
}
inline ::int32_t ListTransactionsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListTransactionsRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 2;
inline void ListTransactionsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListTransactionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:treasury.ListTransactionsRequest.page_size)
  return _internal_page_size();
}
inline void ListTransactionsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:treasury.ListTransactionsRequest.page_size)
}
inline ::int32_t ListTransactionsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListTransactionsRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// .common.SortBy sort_by = 3;
inline bool ListTransactionsRequest::has_sort_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sort_by_ != nullptr);
  return value;
}
inline const ::common::SortBy& ListTransactionsRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::SortBy* p = _impl_.sort_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::SortBy&>(::common::_SortBy_default_instance_);
}
inline const ::common::SortBy& ListTransactionsRequest::sort_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ListTransactionsRequest.sort_by)
  return _internal_sort_by();
}
inline void ListTransactionsRequest::unsafe_arena_set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }
  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:treasury.ListTransactionsRequest.sort_by)
}
inline ::common::SortBy* ListTransactionsRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::SortBy* released = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::SortBy* ListTransactionsRequest::unsafe_arena_release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.ListTransactionsRequest.sort_by)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::SortBy* temp = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
  return temp;
}
inline ::common::SortBy* ListTransactionsRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sort_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::SortBy>(GetArena());
    _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(p);
  }
  return _impl_.sort_by_;
}
inline ::common::SortBy* ListTransactionsRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::SortBy* _msg = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:treasury.ListTransactionsRequest.sort_by)
  return _msg;
}
inline void ListTransactionsRequest::set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  // @@protoc_insertion_point(field_set_allocated:treasury.ListTransactionsRequest.sort_by)
}

// .common.Filter filters = 4;
inline bool ListTransactionsRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::common::Filter& ListTransactionsRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Filter* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Filter&>(::common::_Filter_default_instance_);
}
inline const ::common::Filter& ListTransactionsRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ListTransactionsRequest.filters)
  return _internal_filters();
}
inline void ListTransactionsRequest::unsafe_arena_set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:treasury.ListTransactionsRequest.filters)
}
inline ::common::Filter* ListTransactionsRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Filter* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Filter* ListTransactionsRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.ListTransactionsRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Filter* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::common::Filter* ListTransactionsRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Filter>(GetArena());
    _impl_.filters_ = reinterpret_cast<::common::Filter*>(p);
  }
  return _impl_.filters_;
}
inline ::common::Filter* ListTransactionsRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::Filter* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:treasury.ListTransactionsRequest.filters)
  return _msg;
}
inline void ListTransactionsRequest::set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  // @@protoc_insertion_point(field_set_allocated:treasury.ListTransactionsRequest.filters)
}

// -------------------------------------------------------------------

// ContractSummary

// string contract_id = 1;
inline void ContractSummary::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
}
inline const std::string& ContractSummary::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ContractSummary.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_contract_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:treasury.ContractSummary.contract_id)
}
inline std::string* ContractSummary::mutable_contract_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:treasury.ContractSummary.contract_id)
  return _s;
}
inline const std::string& ContractSummary::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void ContractSummary::_internal_set_contract_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_id_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.ContractSummary.contract_id)
  return _impl_.contract_id_.Release();
}
inline void ContractSummary::set_allocated_contract_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_id_.IsDefault()) {
          _impl_.contract_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:treasury.ContractSummary.contract_id)
}

// string contract_type = 2;
inline void ContractSummary::clear_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.ClearToEmpty();
}
inline const std::string& ContractSummary::contract_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ContractSummary.contract_type)
  return _internal_contract_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_contract_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:treasury.ContractSummary.contract_type)
}
inline std::string* ContractSummary::mutable_contract_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_type();
  // @@protoc_insertion_point(field_mutable:treasury.ContractSummary.contract_type)
  return _s;
}
inline const std::string& ContractSummary::_internal_contract_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_type_.Get();
}
inline void ContractSummary::_internal_set_contract_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_type_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.ContractSummary.contract_type)
  return _impl_.contract_type_.Release();
}
inline void ContractSummary::set_allocated_contract_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_type_.IsDefault()) {
          _impl_.contract_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:treasury.ContractSummary.contract_type)
}

// string created = 3;
inline void ContractSummary::clear_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.ClearToEmpty();
}
inline const std::string& ContractSummary::created() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ContractSummary.created)
  return _internal_created();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_created(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:treasury.ContractSummary.created)
}
inline std::string* ContractSummary::mutable_created() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:treasury.ContractSummary.created)
  return _s;
}
inline const std::string& ContractSummary::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_.Get();
}
inline void ContractSummary::_internal_set_created(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.ContractSummary.created)
  return _impl_.created_.Release();
}
inline void ContractSummary::set_allocated_created(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_.IsDefault()) {
          _impl_.created_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:treasury.ContractSummary.created)
}

// repeated string counterparties = 4;
inline int ContractSummary::_internal_counterparties_size() const {
  return _internal_counterparties().size();
}
inline int ContractSummary::counterparties_size() const {
  return _internal_counterparties_size();
}
inline void ContractSummary::clear_counterparties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparties_.Clear();
}
inline std::string* ContractSummary::add_counterparties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_counterparties()->Add();
  // @@protoc_insertion_point(field_add_mutable:treasury.ContractSummary.counterparties)
  return _s;
}
inline const std::string& ContractSummary::counterparties(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ContractSummary.counterparties)
  return _internal_counterparties().Get(index);
}
inline std::string* ContractSummary::mutable_counterparties(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:treasury.ContractSummary.counterparties)
  return _internal_mutable_counterparties()->Mutable(index);
}
inline void ContractSummary::set_counterparties(int index, const std::string& value) {
  _internal_mutable_counterparties()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, std::string&& value) {
  _internal_mutable_counterparties()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_counterparties()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_counterparties()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, absl::string_view value) {
  _internal_mutable_counterparties()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:treasury.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:treasury.ContractSummary.counterparties)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ContractSummary::counterparties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:treasury.ContractSummary.counterparties)
  return _internal_counterparties();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ContractSummary::mutable_counterparties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:treasury.ContractSummary.counterparties)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_counterparties();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ContractSummary::_internal_counterparties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparties_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ContractSummary::_internal_mutable_counterparties() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.counterparties_;
}

// string memo = 6;
inline void ContractSummary::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& ContractSummary::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ContractSummary.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:treasury.ContractSummary.memo)
}
inline std::string* ContractSummary::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:treasury.ContractSummary.memo)
  return _s;
}
inline const std::string& ContractSummary::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void ContractSummary::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:treasury.ContractSummary.memo)
  return _impl_.memo_.Release();
}
inline void ContractSummary::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:treasury.ContractSummary.memo)
}

// -------------------------------------------------------------------

// ListTransactionsResponse

// repeated .treasury.ContractSummary contracts = 1;
inline int ListTransactionsResponse::_internal_contracts_size() const {
  return _internal_contracts().size();
}
inline int ListTransactionsResponse::contracts_size() const {
  return _internal_contracts_size();
}
inline void ListTransactionsResponse::clear_contracts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contracts_.Clear();
}
inline ::treasury::ContractSummary* ListTransactionsResponse::mutable_contracts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:treasury.ListTransactionsResponse.contracts)
  return _internal_mutable_contracts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>* ListTransactionsResponse::mutable_contracts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:treasury.ListTransactionsResponse.contracts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contracts();
}
inline const ::treasury::ContractSummary& ListTransactionsResponse::contracts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:treasury.ListTransactionsResponse.contracts)
  return _internal_contracts().Get(index);
}
inline ::treasury::ContractSummary* ListTransactionsResponse::add_contracts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::treasury::ContractSummary* _add = _internal_mutable_contracts()->Add();
  // @@protoc_insertion_point(field_add:treasury.ListTransactionsResponse.contracts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>& ListTransactionsResponse::contracts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:treasury.ListTransactionsResponse.contracts)
  return _internal_contracts();
}
inline const ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>&
ListTransactionsResponse::_internal_contracts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contracts_;
}
inline ::google::protobuf::RepeatedPtrField<::treasury::ContractSummary>*
ListTransactionsResponse::_internal_mutable_contracts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contracts_;
}

// uint32 totalContracts = 2;
inline void ListTransactionsResponse::clear_totalcontracts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalcontracts_ = 0u;
}
inline ::uint32_t ListTransactionsResponse::totalcontracts() const {
  // @@protoc_insertion_point(field_get:treasury.ListTransactionsResponse.totalContracts)
  return _internal_totalcontracts();
}
inline void ListTransactionsResponse::set_totalcontracts(::uint32_t value) {
  _internal_set_totalcontracts(value);
  // @@protoc_insertion_point(field_set:treasury.ListTransactionsResponse.totalContracts)
}
inline ::uint32_t ListTransactionsResponse::_internal_totalcontracts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.totalcontracts_;
}
inline void ListTransactionsResponse::_internal_set_totalcontracts(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalcontracts_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace treasury


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_treasury_2fv1_2ftreasury_2eproto_2epb_2eh
