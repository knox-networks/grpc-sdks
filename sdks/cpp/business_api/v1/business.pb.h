// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: business_api/v1/business.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_business_5fapi_2fv1_2fbusiness_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_business_5fapi_2fv1_2fbusiness_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "common/v1/packet.pb.h"
#include "common/v1/amqp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_business_5fapi_2fv1_2fbusiness_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_business_5fapi_2fv1_2fbusiness_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_business_5fapi_2fv1_2fbusiness_2eproto;
namespace business_api {
namespace v1 {
class ClearRequest;
struct ClearRequestDefaultTypeInternal;
extern ClearRequestDefaultTypeInternal _ClearRequest_default_instance_;
class ClearResponse;
struct ClearResponseDefaultTypeInternal;
extern ClearResponseDefaultTypeInternal _ClearResponse_default_instance_;
class ListRequest;
struct ListRequestDefaultTypeInternal;
extern ListRequestDefaultTypeInternal _ListRequest_default_instance_;
class ListResponse;
struct ListResponseDefaultTypeInternal;
extern ListResponseDefaultTypeInternal _ListResponse_default_instance_;
class SendNewTransactionRequest;
struct SendNewTransactionRequestDefaultTypeInternal;
extern SendNewTransactionRequestDefaultTypeInternal _SendNewTransactionRequest_default_instance_;
class SendNewTransactionResponse;
struct SendNewTransactionResponseDefaultTypeInternal;
extern SendNewTransactionResponseDefaultTypeInternal _SendNewTransactionResponse_default_instance_;
class SendPayloadRequest;
struct SendPayloadRequestDefaultTypeInternal;
extern SendPayloadRequestDefaultTypeInternal _SendPayloadRequest_default_instance_;
class SendPayloadResponse;
struct SendPayloadResponseDefaultTypeInternal;
extern SendPayloadResponseDefaultTypeInternal _SendPayloadResponse_default_instance_;
class SendProposalAckedRequest;
struct SendProposalAckedRequestDefaultTypeInternal;
extern SendProposalAckedRequestDefaultTypeInternal _SendProposalAckedRequest_default_instance_;
class SendProposalAckedResponse;
struct SendProposalAckedResponseDefaultTypeInternal;
extern SendProposalAckedResponseDefaultTypeInternal _SendProposalAckedResponse_default_instance_;
class SendProposalNackedRequest;
struct SendProposalNackedRequestDefaultTypeInternal;
extern SendProposalNackedRequestDefaultTypeInternal _SendProposalNackedRequest_default_instance_;
class SendProposalNackedResponse;
struct SendProposalNackedResponseDefaultTypeInternal;
extern SendProposalNackedResponseDefaultTypeInternal _SendProposalNackedResponse_default_instance_;
class SendSecretRevealedRequest;
struct SendSecretRevealedRequestDefaultTypeInternal;
extern SendSecretRevealedRequestDefaultTypeInternal _SendSecretRevealedRequest_default_instance_;
class SendSecretRevealedResponse;
struct SendSecretRevealedResponseDefaultTypeInternal;
extern SendSecretRevealedResponseDefaultTypeInternal _SendSecretRevealedResponse_default_instance_;
}  // namespace v1
}  // namespace business_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace business_api {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SendSecretRevealedResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.SendSecretRevealedResponse) */ {
 public:
  inline SendSecretRevealedResponse() : SendSecretRevealedResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendSecretRevealedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendSecretRevealedResponse(const SendSecretRevealedResponse& from) : SendSecretRevealedResponse(nullptr, from) {}
  inline SendSecretRevealedResponse(SendSecretRevealedResponse&& from) noexcept
      : SendSecretRevealedResponse(nullptr, std::move(from)) {}
  inline SendSecretRevealedResponse& operator=(const SendSecretRevealedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendSecretRevealedResponse& operator=(SendSecretRevealedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendSecretRevealedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendSecretRevealedResponse* internal_default_instance() {
    return reinterpret_cast<const SendSecretRevealedResponse*>(
        &_SendSecretRevealedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SendSecretRevealedResponse& a, SendSecretRevealedResponse& b) { a.Swap(&b); }
  inline void Swap(SendSecretRevealedResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendSecretRevealedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendSecretRevealedResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SendSecretRevealedResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendSecretRevealedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendSecretRevealedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendSecretRevealedResponse"; }

 protected:
  explicit SendSecretRevealedResponse(::google::protobuf::Arena* arena);
  SendSecretRevealedResponse(::google::protobuf::Arena* arena, const SendSecretRevealedResponse& from);
  SendSecretRevealedResponse(::google::protobuf::Arena* arena, SendSecretRevealedResponse&& from) noexcept
      : SendSecretRevealedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.SendSecretRevealedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendSecretRevealedResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendSecretRevealedResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendSecretRevealedRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.SendSecretRevealedRequest) */ {
 public:
  inline SendSecretRevealedRequest() : SendSecretRevealedRequest(nullptr) {}
  ~SendSecretRevealedRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendSecretRevealedRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendSecretRevealedRequest(const SendSecretRevealedRequest& from) : SendSecretRevealedRequest(nullptr, from) {}
  inline SendSecretRevealedRequest(SendSecretRevealedRequest&& from) noexcept
      : SendSecretRevealedRequest(nullptr, std::move(from)) {}
  inline SendSecretRevealedRequest& operator=(const SendSecretRevealedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendSecretRevealedRequest& operator=(SendSecretRevealedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendSecretRevealedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendSecretRevealedRequest* internal_default_instance() {
    return reinterpret_cast<const SendSecretRevealedRequest*>(
        &_SendSecretRevealedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SendSecretRevealedRequest& a, SendSecretRevealedRequest& b) { a.Swap(&b); }
  inline void Swap(SendSecretRevealedRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendSecretRevealedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendSecretRevealedRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendSecretRevealedRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendSecretRevealedRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendSecretRevealedRequest& from) { SendSecretRevealedRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendSecretRevealedRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendSecretRevealedRequest"; }

 protected:
  explicit SendSecretRevealedRequest(::google::protobuf::Arena* arena);
  SendSecretRevealedRequest(::google::protobuf::Arena* arena, const SendSecretRevealedRequest& from);
  SendSecretRevealedRequest(::google::protobuf::Arena* arena, SendSecretRevealedRequest&& from) noexcept
      : SendSecretRevealedRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParticipantFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kSecretFieldNumber = 3,
  };
  // string participant = 1;
  void clear_participant() ;
  const std::string& participant() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_participant(Arg_&& arg, Args_... args);
  std::string* mutable_participant();
  PROTOBUF_NODISCARD std::string* release_participant();
  void set_allocated_participant(std::string* value);

  private:
  const std::string& _internal_participant() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_participant(
      const std::string& value);
  std::string* _internal_mutable_participant();

  public:
  // string contract_id = 2;
  void clear_contract_id() ;
  const std::string& contract_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  std::string* mutable_contract_id();
  PROTOBUF_NODISCARD std::string* release_contract_id();
  void set_allocated_contract_id(std::string* value);

  private:
  const std::string& _internal_contract_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(
      const std::string& value);
  std::string* _internal_mutable_contract_id();

  public:
  // string secret = 3;
  void clear_secret() ;
  const std::string& secret() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secret(Arg_&& arg, Args_... args);
  std::string* mutable_secret();
  PROTOBUF_NODISCARD std::string* release_secret();
  void set_allocated_secret(std::string* value);

  private:
  const std::string& _internal_secret() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secret(
      const std::string& value);
  std::string* _internal_mutable_secret();

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.SendSecretRevealedRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      78, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendSecretRevealedRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendSecretRevealedRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr participant_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr secret_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendProposalNackedResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.SendProposalNackedResponse) */ {
 public:
  inline SendProposalNackedResponse() : SendProposalNackedResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendProposalNackedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendProposalNackedResponse(const SendProposalNackedResponse& from) : SendProposalNackedResponse(nullptr, from) {}
  inline SendProposalNackedResponse(SendProposalNackedResponse&& from) noexcept
      : SendProposalNackedResponse(nullptr, std::move(from)) {}
  inline SendProposalNackedResponse& operator=(const SendProposalNackedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendProposalNackedResponse& operator=(SendProposalNackedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendProposalNackedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendProposalNackedResponse* internal_default_instance() {
    return reinterpret_cast<const SendProposalNackedResponse*>(
        &_SendProposalNackedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SendProposalNackedResponse& a, SendProposalNackedResponse& b) { a.Swap(&b); }
  inline void Swap(SendProposalNackedResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendProposalNackedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendProposalNackedResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SendProposalNackedResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendProposalNackedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendProposalNackedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendProposalNackedResponse"; }

 protected:
  explicit SendProposalNackedResponse(::google::protobuf::Arena* arena);
  SendProposalNackedResponse(::google::protobuf::Arena* arena, const SendProposalNackedResponse& from);
  SendProposalNackedResponse(::google::protobuf::Arena* arena, SendProposalNackedResponse&& from) noexcept
      : SendProposalNackedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.SendProposalNackedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendProposalNackedResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendProposalNackedResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendProposalNackedRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.SendProposalNackedRequest) */ {
 public:
  inline SendProposalNackedRequest() : SendProposalNackedRequest(nullptr) {}
  ~SendProposalNackedRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendProposalNackedRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendProposalNackedRequest(const SendProposalNackedRequest& from) : SendProposalNackedRequest(nullptr, from) {}
  inline SendProposalNackedRequest(SendProposalNackedRequest&& from) noexcept
      : SendProposalNackedRequest(nullptr, std::move(from)) {}
  inline SendProposalNackedRequest& operator=(const SendProposalNackedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendProposalNackedRequest& operator=(SendProposalNackedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendProposalNackedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendProposalNackedRequest* internal_default_instance() {
    return reinterpret_cast<const SendProposalNackedRequest*>(
        &_SendProposalNackedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SendProposalNackedRequest& a, SendProposalNackedRequest& b) { a.Swap(&b); }
  inline void Swap(SendProposalNackedRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendProposalNackedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendProposalNackedRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendProposalNackedRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendProposalNackedRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendProposalNackedRequest& from) { SendProposalNackedRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendProposalNackedRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendProposalNackedRequest"; }

 protected:
  explicit SendProposalNackedRequest(::google::protobuf::Arena* arena);
  SendProposalNackedRequest(::google::protobuf::Arena* arena, const SendProposalNackedRequest& from);
  SendProposalNackedRequest(::google::protobuf::Arena* arena, SendProposalNackedRequest&& from) noexcept
      : SendProposalNackedRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParticipantFieldNumber = 1,
    kContractIdFieldNumber = 2,
  };
  // string participant = 1;
  void clear_participant() ;
  const std::string& participant() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_participant(Arg_&& arg, Args_... args);
  std::string* mutable_participant();
  PROTOBUF_NODISCARD std::string* release_participant();
  void set_allocated_participant(std::string* value);

  private:
  const std::string& _internal_participant() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_participant(
      const std::string& value);
  std::string* _internal_mutable_participant();

  public:
  // string contract_id = 2;
  void clear_contract_id() ;
  const std::string& contract_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  std::string* mutable_contract_id();
  PROTOBUF_NODISCARD std::string* release_contract_id();
  void set_allocated_contract_id(std::string* value);

  private:
  const std::string& _internal_contract_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(
      const std::string& value);
  std::string* _internal_mutable_contract_id();

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.SendProposalNackedRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendProposalNackedRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendProposalNackedRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr participant_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendProposalAckedResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.SendProposalAckedResponse) */ {
 public:
  inline SendProposalAckedResponse() : SendProposalAckedResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendProposalAckedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendProposalAckedResponse(const SendProposalAckedResponse& from) : SendProposalAckedResponse(nullptr, from) {}
  inline SendProposalAckedResponse(SendProposalAckedResponse&& from) noexcept
      : SendProposalAckedResponse(nullptr, std::move(from)) {}
  inline SendProposalAckedResponse& operator=(const SendProposalAckedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendProposalAckedResponse& operator=(SendProposalAckedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendProposalAckedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendProposalAckedResponse* internal_default_instance() {
    return reinterpret_cast<const SendProposalAckedResponse*>(
        &_SendProposalAckedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SendProposalAckedResponse& a, SendProposalAckedResponse& b) { a.Swap(&b); }
  inline void Swap(SendProposalAckedResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendProposalAckedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendProposalAckedResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SendProposalAckedResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendProposalAckedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendProposalAckedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendProposalAckedResponse"; }

 protected:
  explicit SendProposalAckedResponse(::google::protobuf::Arena* arena);
  SendProposalAckedResponse(::google::protobuf::Arena* arena, const SendProposalAckedResponse& from);
  SendProposalAckedResponse(::google::protobuf::Arena* arena, SendProposalAckedResponse&& from) noexcept
      : SendProposalAckedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.SendProposalAckedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendProposalAckedResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendProposalAckedResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendProposalAckedRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.SendProposalAckedRequest) */ {
 public:
  inline SendProposalAckedRequest() : SendProposalAckedRequest(nullptr) {}
  ~SendProposalAckedRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendProposalAckedRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendProposalAckedRequest(const SendProposalAckedRequest& from) : SendProposalAckedRequest(nullptr, from) {}
  inline SendProposalAckedRequest(SendProposalAckedRequest&& from) noexcept
      : SendProposalAckedRequest(nullptr, std::move(from)) {}
  inline SendProposalAckedRequest& operator=(const SendProposalAckedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendProposalAckedRequest& operator=(SendProposalAckedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendProposalAckedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendProposalAckedRequest* internal_default_instance() {
    return reinterpret_cast<const SendProposalAckedRequest*>(
        &_SendProposalAckedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SendProposalAckedRequest& a, SendProposalAckedRequest& b) { a.Swap(&b); }
  inline void Swap(SendProposalAckedRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendProposalAckedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendProposalAckedRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendProposalAckedRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendProposalAckedRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendProposalAckedRequest& from) { SendProposalAckedRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendProposalAckedRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendProposalAckedRequest"; }

 protected:
  explicit SendProposalAckedRequest(::google::protobuf::Arena* arena);
  SendProposalAckedRequest(::google::protobuf::Arena* arena, const SendProposalAckedRequest& from);
  SendProposalAckedRequest(::google::protobuf::Arena* arena, SendProposalAckedRequest&& from) noexcept
      : SendProposalAckedRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParticipantFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kHashFieldNumber = 3,
    kAlgorithmFieldNumber = 4,
  };
  // string participant = 1;
  void clear_participant() ;
  const std::string& participant() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_participant(Arg_&& arg, Args_... args);
  std::string* mutable_participant();
  PROTOBUF_NODISCARD std::string* release_participant();
  void set_allocated_participant(std::string* value);

  private:
  const std::string& _internal_participant() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_participant(
      const std::string& value);
  std::string* _internal_mutable_participant();

  public:
  // string contract_id = 2;
  void clear_contract_id() ;
  const std::string& contract_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  std::string* mutable_contract_id();
  PROTOBUF_NODISCARD std::string* release_contract_id();
  void set_allocated_contract_id(std::string* value);

  private:
  const std::string& _internal_contract_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(
      const std::string& value);
  std::string* _internal_mutable_contract_id();

  public:
  // string hash = 3;
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // .common.HashAlgorithm algorithm = 4;
  void clear_algorithm() ;
  ::common::HashAlgorithm algorithm() const;
  void set_algorithm(::common::HashAlgorithm value);

  private:
  ::common::HashAlgorithm _internal_algorithm() const;
  void _internal_set_algorithm(::common::HashAlgorithm value);

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.SendProposalAckedRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      75, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendProposalAckedRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendProposalAckedRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr participant_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr hash_;
    int algorithm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendPayloadResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.SendPayloadResponse) */ {
 public:
  inline SendPayloadResponse() : SendPayloadResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendPayloadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendPayloadResponse(const SendPayloadResponse& from) : SendPayloadResponse(nullptr, from) {}
  inline SendPayloadResponse(SendPayloadResponse&& from) noexcept
      : SendPayloadResponse(nullptr, std::move(from)) {}
  inline SendPayloadResponse& operator=(const SendPayloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPayloadResponse& operator=(SendPayloadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPayloadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendPayloadResponse* internal_default_instance() {
    return reinterpret_cast<const SendPayloadResponse*>(
        &_SendPayloadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SendPayloadResponse& a, SendPayloadResponse& b) { a.Swap(&b); }
  inline void Swap(SendPayloadResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPayloadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPayloadResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SendPayloadResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendPayloadResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendPayloadResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendPayloadResponse"; }

 protected:
  explicit SendPayloadResponse(::google::protobuf::Arena* arena);
  SendPayloadResponse(::google::protobuf::Arena* arena, const SendPayloadResponse& from);
  SendPayloadResponse(::google::protobuf::Arena* arena, SendPayloadResponse&& from) noexcept
      : SendPayloadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.SendPayloadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendPayloadResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendPayloadResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendNewTransactionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.SendNewTransactionResponse) */ {
 public:
  inline SendNewTransactionResponse() : SendNewTransactionResponse(nullptr) {}
  ~SendNewTransactionResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendNewTransactionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendNewTransactionResponse(const SendNewTransactionResponse& from) : SendNewTransactionResponse(nullptr, from) {}
  inline SendNewTransactionResponse(SendNewTransactionResponse&& from) noexcept
      : SendNewTransactionResponse(nullptr, std::move(from)) {}
  inline SendNewTransactionResponse& operator=(const SendNewTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendNewTransactionResponse& operator=(SendNewTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendNewTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendNewTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const SendNewTransactionResponse*>(
        &_SendNewTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SendNewTransactionResponse& a, SendNewTransactionResponse& b) { a.Swap(&b); }
  inline void Swap(SendNewTransactionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendNewTransactionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendNewTransactionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendNewTransactionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendNewTransactionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendNewTransactionResponse& from) { SendNewTransactionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendNewTransactionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendNewTransactionResponse"; }

 protected:
  explicit SendNewTransactionResponse(::google::protobuf::Arena* arena);
  SendNewTransactionResponse(::google::protobuf::Arena* arena, const SendNewTransactionResponse& from);
  SendNewTransactionResponse(::google::protobuf::Arena* arena, SendNewTransactionResponse&& from) noexcept
      : SendNewTransactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContractIdFieldNumber = 1,
  };
  // string contract_id = 1;
  void clear_contract_id() ;
  const std::string& contract_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  std::string* mutable_contract_id();
  PROTOBUF_NODISCARD std::string* release_contract_id();
  void set_allocated_contract_id(std::string* value);

  private:
  const std::string& _internal_contract_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(
      const std::string& value);
  std::string* _internal_mutable_contract_id();

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.SendNewTransactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendNewTransactionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendNewTransactionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class ListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.ListResponse) */ {
 public:
  inline ListResponse() : ListResponse(nullptr) {}
  ~ListResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListResponse(const ListResponse& from) : ListResponse(nullptr, from) {}
  inline ListResponse(ListResponse&& from) noexcept
      : ListResponse(nullptr, std::move(from)) {}
  inline ListResponse& operator=(const ListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListResponse& operator=(ListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListResponse* internal_default_instance() {
    return reinterpret_cast<const ListResponse*>(
        &_ListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ListResponse& a, ListResponse& b) { a.Swap(&b); }
  inline void Swap(ListResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListResponse& from) { ListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.ListResponse"; }

 protected:
  explicit ListResponse(::google::protobuf::Arena* arena);
  ListResponse(::google::protobuf::Arena* arena, const ListResponse& from);
  ListResponse(::google::protobuf::Arena* arena, ListResponse&& from) noexcept
      : ListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kListFieldNumber = 1,
  };
  // repeated string list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;

  public:
  void clear_list() ;
  const std::string& list(int index) const;
  std::string* mutable_list(int index);
  void set_list(int index, const std::string& value);
  void set_list(int index, std::string&& value);
  void set_list(int index, const char* value);
  void set_list(int index, const char* value, std::size_t size);
  void set_list(int index, absl::string_view value);
  std::string* add_list();
  void add_list(const std::string& value);
  void add_list(std::string&& value);
  void add_list(const char* value);
  void add_list(const char* value, std::size_t size);
  void add_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_list();

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.ListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class ListRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.ListRequest) */ {
 public:
  inline ListRequest() : ListRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListRequest(const ListRequest& from) : ListRequest(nullptr, from) {}
  inline ListRequest(ListRequest&& from) noexcept
      : ListRequest(nullptr, std::move(from)) {}
  inline ListRequest& operator=(const ListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRequest& operator=(ListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListRequest* internal_default_instance() {
    return reinterpret_cast<const ListRequest*>(
        &_ListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListRequest& a, ListRequest& b) { a.Swap(&b); }
  inline void Swap(ListRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.ListRequest"; }

 protected:
  explicit ListRequest(::google::protobuf::Arena* arena);
  ListRequest(::google::protobuf::Arena* arena, const ListRequest& from);
  ListRequest(::google::protobuf::Arena* arena, ListRequest&& from) noexcept
      : ListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.ListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class ClearResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.ClearResponse) */ {
 public:
  inline ClearResponse() : ClearResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClearResponse(const ClearResponse& from) : ClearResponse(nullptr, from) {}
  inline ClearResponse(ClearResponse&& from) noexcept
      : ClearResponse(nullptr, std::move(from)) {}
  inline ClearResponse& operator=(const ClearResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearResponse& operator=(ClearResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClearResponse* internal_default_instance() {
    return reinterpret_cast<const ClearResponse*>(
        &_ClearResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ClearResponse& a, ClearResponse& b) { a.Swap(&b); }
  inline void Swap(ClearResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ClearResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ClearResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ClearResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.ClearResponse"; }

 protected:
  explicit ClearResponse(::google::protobuf::Arena* arena);
  ClearResponse(::google::protobuf::Arena* arena, const ClearResponse& from);
  ClearResponse(::google::protobuf::Arena* arena, ClearResponse&& from) noexcept
      : ClearResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.ClearResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClearResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClearResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class ClearRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:business_api.v1.ClearRequest) */ {
 public:
  inline ClearRequest() : ClearRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClearRequest(const ClearRequest& from) : ClearRequest(nullptr, from) {}
  inline ClearRequest(ClearRequest&& from) noexcept
      : ClearRequest(nullptr, std::move(from)) {}
  inline ClearRequest& operator=(const ClearRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearRequest& operator=(ClearRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClearRequest* internal_default_instance() {
    return reinterpret_cast<const ClearRequest*>(
        &_ClearRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ClearRequest& a, ClearRequest& b) { a.Swap(&b); }
  inline void Swap(ClearRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ClearRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ClearRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ClearRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.ClearRequest"; }

 protected:
  explicit ClearRequest(::google::protobuf::Arena* arena);
  ClearRequest(::google::protobuf::Arena* arena, const ClearRequest& from);
  ClearRequest(::google::protobuf::Arena* arena, ClearRequest&& from) noexcept
      : ClearRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:business_api.v1.ClearRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClearRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClearRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendPayloadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.SendPayloadRequest) */ {
 public:
  inline SendPayloadRequest() : SendPayloadRequest(nullptr) {}
  ~SendPayloadRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendPayloadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendPayloadRequest(const SendPayloadRequest& from) : SendPayloadRequest(nullptr, from) {}
  inline SendPayloadRequest(SendPayloadRequest&& from) noexcept
      : SendPayloadRequest(nullptr, std::move(from)) {}
  inline SendPayloadRequest& operator=(const SendPayloadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPayloadRequest& operator=(SendPayloadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPayloadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendPayloadRequest* internal_default_instance() {
    return reinterpret_cast<const SendPayloadRequest*>(
        &_SendPayloadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SendPayloadRequest& a, SendPayloadRequest& b) { a.Swap(&b); }
  inline void Swap(SendPayloadRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPayloadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPayloadRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendPayloadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendPayloadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendPayloadRequest& from) { SendPayloadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendPayloadRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendPayloadRequest"; }

 protected:
  explicit SendPayloadRequest(::google::protobuf::Arena* arena);
  SendPayloadRequest(::google::protobuf::Arena* arena, const SendPayloadRequest& from);
  SendPayloadRequest(::google::protobuf::Arena* arena, SendPayloadRequest&& from) noexcept
      : SendPayloadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 1,
  };
  // .common.Payload payload = 1;
  bool has_payload() const;
  void clear_payload() ;
  const ::common::Payload& payload() const;
  PROTOBUF_NODISCARD ::common::Payload* release_payload();
  ::common::Payload* mutable_payload();
  void set_allocated_payload(::common::Payload* value);
  void unsafe_arena_set_allocated_payload(::common::Payload* value);
  ::common::Payload* unsafe_arena_release_payload();

  private:
  const ::common::Payload& _internal_payload() const;
  ::common::Payload* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.SendPayloadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendPayloadRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendPayloadRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::common::Payload* payload_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};
// -------------------------------------------------------------------

class SendNewTransactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:business_api.v1.SendNewTransactionRequest) */ {
 public:
  inline SendNewTransactionRequest() : SendNewTransactionRequest(nullptr) {}
  ~SendNewTransactionRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendNewTransactionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendNewTransactionRequest(const SendNewTransactionRequest& from) : SendNewTransactionRequest(nullptr, from) {}
  inline SendNewTransactionRequest(SendNewTransactionRequest&& from) noexcept
      : SendNewTransactionRequest(nullptr, std::move(from)) {}
  inline SendNewTransactionRequest& operator=(const SendNewTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendNewTransactionRequest& operator=(SendNewTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendNewTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendNewTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const SendNewTransactionRequest*>(
        &_SendNewTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SendNewTransactionRequest& a, SendNewTransactionRequest& b) { a.Swap(&b); }
  inline void Swap(SendNewTransactionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendNewTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendNewTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendNewTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendNewTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendNewTransactionRequest& from) { SendNewTransactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendNewTransactionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "business_api.v1.SendNewTransactionRequest"; }

 protected:
  explicit SendNewTransactionRequest(::google::protobuf::Arena* arena);
  SendNewTransactionRequest(::google::protobuf::Arena* arena, const SendNewTransactionRequest& from);
  SendNewTransactionRequest(::google::protobuf::Arena* arena, SendNewTransactionRequest&& from) noexcept
      : SendNewTransactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommitmentsFieldNumber = 3,
    kConditionsFieldNumber = 4,
    kParticipantFieldNumber = 1,
    kMemoFieldNumber = 2,
  };
  // repeated .common.Commitment commitments = 3;
  int commitments_size() const;
  private:
  int _internal_commitments_size() const;

  public:
  void clear_commitments() ;
  ::common::Commitment* mutable_commitments(int index);
  ::google::protobuf::RepeatedPtrField<::common::Commitment>* mutable_commitments();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Commitment>& _internal_commitments() const;
  ::google::protobuf::RepeatedPtrField<::common::Commitment>* _internal_mutable_commitments();
  public:
  const ::common::Commitment& commitments(int index) const;
  ::common::Commitment* add_commitments();
  const ::google::protobuf::RepeatedPtrField<::common::Commitment>& commitments() const;
  // repeated .common.Condition conditions = 4;
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::common::Condition* mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::common::Condition>* mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Condition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::common::Condition>* _internal_mutable_conditions();
  public:
  const ::common::Condition& conditions(int index) const;
  ::common::Condition* add_conditions();
  const ::google::protobuf::RepeatedPtrField<::common::Condition>& conditions() const;
  // string participant = 1;
  void clear_participant() ;
  const std::string& participant() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_participant(Arg_&& arg, Args_... args);
  std::string* mutable_participant();
  PROTOBUF_NODISCARD std::string* release_participant();
  void set_allocated_participant(std::string* value);

  private:
  const std::string& _internal_participant() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_participant(
      const std::string& value);
  std::string* _internal_mutable_participant();

  public:
  // string memo = 2;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // @@protoc_insertion_point(class_scope:business_api.v1.SendNewTransactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendNewTransactionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendNewTransactionRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::Commitment > commitments_;
    ::google::protobuf::RepeatedPtrField< ::common::Condition > conditions_;
    ::google::protobuf::internal::ArenaStringPtr participant_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_business_5fapi_2fv1_2fbusiness_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListRequest

// -------------------------------------------------------------------

// ListResponse

// repeated string list = 1;
inline int ListResponse::_internal_list_size() const {
  return _internal_list().size();
}
inline int ListResponse::list_size() const {
  return _internal_list_size();
}
inline void ListResponse::clear_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.list_.Clear();
}
inline std::string* ListResponse::add_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:business_api.v1.ListResponse.list)
  return _s;
}
inline const std::string& ListResponse::list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.ListResponse.list)
  return _internal_list().Get(index);
}
inline std::string* ListResponse::mutable_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:business_api.v1.ListResponse.list)
  return _internal_mutable_list()->Mutable(index);
}
inline void ListResponse::set_list(int index, const std::string& value) {
  _internal_mutable_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:business_api.v1.ListResponse.list)
}
inline void ListResponse::set_list(int index, std::string&& value) {
  _internal_mutable_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:business_api.v1.ListResponse.list)
}
inline void ListResponse::set_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:business_api.v1.ListResponse.list)
}
inline void ListResponse::set_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:business_api.v1.ListResponse.list)
}
inline void ListResponse::set_list(int index, absl::string_view value) {
  _internal_mutable_list()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:business_api.v1.ListResponse.list)
}
inline void ListResponse::add_list(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:business_api.v1.ListResponse.list)
}
inline void ListResponse::add_list(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:business_api.v1.ListResponse.list)
}
inline void ListResponse::add_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:business_api.v1.ListResponse.list)
}
inline void ListResponse::add_list(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:business_api.v1.ListResponse.list)
}
inline void ListResponse::add_list(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_list()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:business_api.v1.ListResponse.list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListResponse::list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:business_api.v1.ListResponse.list)
  return _internal_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListResponse::mutable_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:business_api.v1.ListResponse.list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListResponse::_internal_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListResponse::_internal_mutable_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.list_;
}

// -------------------------------------------------------------------

// ClearRequest

// -------------------------------------------------------------------

// ClearResponse

// -------------------------------------------------------------------

// SendPayloadRequest

// .common.Payload payload = 1;
inline bool SendPayloadRequest::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::common::Payload& SendPayloadRequest::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Payload* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Payload&>(::common::_Payload_default_instance_);
}
inline const ::common::Payload& SendPayloadRequest::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendPayloadRequest.payload)
  return _internal_payload();
}
inline void SendPayloadRequest::unsafe_arena_set_allocated_payload(::common::Payload* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::common::Payload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:business_api.v1.SendPayloadRequest.payload)
}
inline ::common::Payload* SendPayloadRequest::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Payload* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Payload* SendPayloadRequest::unsafe_arena_release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendPayloadRequest.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Payload* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::common::Payload* SendPayloadRequest::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Payload>(GetArena());
    _impl_.payload_ = reinterpret_cast<::common::Payload*>(p);
  }
  return _impl_.payload_;
}
inline ::common::Payload* SendPayloadRequest::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Payload* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendPayloadRequest.payload)
  return _msg;
}
inline void SendPayloadRequest::set_allocated_payload(::common::Payload* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::common::Payload*>(value);
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendPayloadRequest.payload)
}

// -------------------------------------------------------------------

// SendPayloadResponse

// -------------------------------------------------------------------

// SendNewTransactionRequest

// string participant = 1;
inline void SendNewTransactionRequest::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.ClearToEmpty();
}
inline const std::string& SendNewTransactionRequest::participant() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendNewTransactionRequest.participant)
  return _internal_participant();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendNewTransactionRequest::set_participant(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendNewTransactionRequest.participant)
}
inline std::string* SendNewTransactionRequest::mutable_participant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_participant();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendNewTransactionRequest.participant)
  return _s;
}
inline const std::string& SendNewTransactionRequest::_internal_participant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_.Get();
}
inline void SendNewTransactionRequest::_internal_set_participant(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(value, GetArena());
}
inline std::string* SendNewTransactionRequest::_internal_mutable_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.participant_.Mutable( GetArena());
}
inline std::string* SendNewTransactionRequest::release_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendNewTransactionRequest.participant)
  return _impl_.participant_.Release();
}
inline void SendNewTransactionRequest::set_allocated_participant(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.participant_.IsDefault()) {
          _impl_.participant_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendNewTransactionRequest.participant)
}

// string memo = 2;
inline void SendNewTransactionRequest::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& SendNewTransactionRequest::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendNewTransactionRequest.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendNewTransactionRequest::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendNewTransactionRequest.memo)
}
inline std::string* SendNewTransactionRequest::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendNewTransactionRequest.memo)
  return _s;
}
inline const std::string& SendNewTransactionRequest::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void SendNewTransactionRequest::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* SendNewTransactionRequest::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* SendNewTransactionRequest::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendNewTransactionRequest.memo)
  return _impl_.memo_.Release();
}
inline void SendNewTransactionRequest::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendNewTransactionRequest.memo)
}

// repeated .common.Commitment commitments = 3;
inline int SendNewTransactionRequest::_internal_commitments_size() const {
  return _internal_commitments().size();
}
inline int SendNewTransactionRequest::commitments_size() const {
  return _internal_commitments_size();
}
inline ::common::Commitment* SendNewTransactionRequest::mutable_commitments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendNewTransactionRequest.commitments)
  return _internal_mutable_commitments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Commitment>* SendNewTransactionRequest::mutable_commitments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:business_api.v1.SendNewTransactionRequest.commitments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_commitments();
}
inline const ::common::Commitment& SendNewTransactionRequest::commitments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendNewTransactionRequest.commitments)
  return _internal_commitments().Get(index);
}
inline ::common::Commitment* SendNewTransactionRequest::add_commitments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Commitment* _add = _internal_mutable_commitments()->Add();
  // @@protoc_insertion_point(field_add:business_api.v1.SendNewTransactionRequest.commitments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Commitment>& SendNewTransactionRequest::commitments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:business_api.v1.SendNewTransactionRequest.commitments)
  return _internal_commitments();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Commitment>&
SendNewTransactionRequest::_internal_commitments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commitments_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Commitment>*
SendNewTransactionRequest::_internal_mutable_commitments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.commitments_;
}

// repeated .common.Condition conditions = 4;
inline int SendNewTransactionRequest::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int SendNewTransactionRequest::conditions_size() const {
  return _internal_conditions_size();
}
inline ::common::Condition* SendNewTransactionRequest::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendNewTransactionRequest.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Condition>* SendNewTransactionRequest::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:business_api.v1.SendNewTransactionRequest.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::common::Condition& SendNewTransactionRequest::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendNewTransactionRequest.conditions)
  return _internal_conditions().Get(index);
}
inline ::common::Condition* SendNewTransactionRequest::add_conditions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Condition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:business_api.v1.SendNewTransactionRequest.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Condition>& SendNewTransactionRequest::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:business_api.v1.SendNewTransactionRequest.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Condition>&
SendNewTransactionRequest::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Condition>*
SendNewTransactionRequest::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// -------------------------------------------------------------------

// SendNewTransactionResponse

// string contract_id = 1;
inline void SendNewTransactionResponse::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
}
inline const std::string& SendNewTransactionResponse::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendNewTransactionResponse.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendNewTransactionResponse::set_contract_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendNewTransactionResponse.contract_id)
}
inline std::string* SendNewTransactionResponse::mutable_contract_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendNewTransactionResponse.contract_id)
  return _s;
}
inline const std::string& SendNewTransactionResponse::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void SendNewTransactionResponse::_internal_set_contract_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(value, GetArena());
}
inline std::string* SendNewTransactionResponse::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_id_.Mutable( GetArena());
}
inline std::string* SendNewTransactionResponse::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendNewTransactionResponse.contract_id)
  return _impl_.contract_id_.Release();
}
inline void SendNewTransactionResponse::set_allocated_contract_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_id_.IsDefault()) {
          _impl_.contract_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendNewTransactionResponse.contract_id)
}

// -------------------------------------------------------------------

// SendProposalAckedRequest

// string participant = 1;
inline void SendProposalAckedRequest::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.ClearToEmpty();
}
inline const std::string& SendProposalAckedRequest::participant() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendProposalAckedRequest.participant)
  return _internal_participant();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendProposalAckedRequest::set_participant(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendProposalAckedRequest.participant)
}
inline std::string* SendProposalAckedRequest::mutable_participant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_participant();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendProposalAckedRequest.participant)
  return _s;
}
inline const std::string& SendProposalAckedRequest::_internal_participant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_.Get();
}
inline void SendProposalAckedRequest::_internal_set_participant(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(value, GetArena());
}
inline std::string* SendProposalAckedRequest::_internal_mutable_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.participant_.Mutable( GetArena());
}
inline std::string* SendProposalAckedRequest::release_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendProposalAckedRequest.participant)
  return _impl_.participant_.Release();
}
inline void SendProposalAckedRequest::set_allocated_participant(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.participant_.IsDefault()) {
          _impl_.participant_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendProposalAckedRequest.participant)
}

// string contract_id = 2;
inline void SendProposalAckedRequest::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
}
inline const std::string& SendProposalAckedRequest::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendProposalAckedRequest.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendProposalAckedRequest::set_contract_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendProposalAckedRequest.contract_id)
}
inline std::string* SendProposalAckedRequest::mutable_contract_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendProposalAckedRequest.contract_id)
  return _s;
}
inline const std::string& SendProposalAckedRequest::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void SendProposalAckedRequest::_internal_set_contract_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(value, GetArena());
}
inline std::string* SendProposalAckedRequest::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_id_.Mutable( GetArena());
}
inline std::string* SendProposalAckedRequest::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendProposalAckedRequest.contract_id)
  return _impl_.contract_id_.Release();
}
inline void SendProposalAckedRequest::set_allocated_contract_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_id_.IsDefault()) {
          _impl_.contract_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendProposalAckedRequest.contract_id)
}

// string hash = 3;
inline void SendProposalAckedRequest::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& SendProposalAckedRequest::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendProposalAckedRequest.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendProposalAckedRequest::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendProposalAckedRequest.hash)
}
inline std::string* SendProposalAckedRequest::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendProposalAckedRequest.hash)
  return _s;
}
inline const std::string& SendProposalAckedRequest::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void SendProposalAckedRequest::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* SendProposalAckedRequest::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* SendProposalAckedRequest::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendProposalAckedRequest.hash)
  return _impl_.hash_.Release();
}
inline void SendProposalAckedRequest::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_.IsDefault()) {
          _impl_.hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendProposalAckedRequest.hash)
}

// .common.HashAlgorithm algorithm = 4;
inline void SendProposalAckedRequest::clear_algorithm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algorithm_ = 0;
}
inline ::common::HashAlgorithm SendProposalAckedRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:business_api.v1.SendProposalAckedRequest.algorithm)
  return _internal_algorithm();
}
inline void SendProposalAckedRequest::set_algorithm(::common::HashAlgorithm value) {
  _internal_set_algorithm(value);
  // @@protoc_insertion_point(field_set:business_api.v1.SendProposalAckedRequest.algorithm)
}
inline ::common::HashAlgorithm SendProposalAckedRequest::_internal_algorithm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::common::HashAlgorithm>(_impl_.algorithm_);
}
inline void SendProposalAckedRequest::_internal_set_algorithm(::common::HashAlgorithm value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algorithm_ = value;
}

// -------------------------------------------------------------------

// SendProposalAckedResponse

// -------------------------------------------------------------------

// SendProposalNackedRequest

// string participant = 1;
inline void SendProposalNackedRequest::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.ClearToEmpty();
}
inline const std::string& SendProposalNackedRequest::participant() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendProposalNackedRequest.participant)
  return _internal_participant();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendProposalNackedRequest::set_participant(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendProposalNackedRequest.participant)
}
inline std::string* SendProposalNackedRequest::mutable_participant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_participant();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendProposalNackedRequest.participant)
  return _s;
}
inline const std::string& SendProposalNackedRequest::_internal_participant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_.Get();
}
inline void SendProposalNackedRequest::_internal_set_participant(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(value, GetArena());
}
inline std::string* SendProposalNackedRequest::_internal_mutable_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.participant_.Mutable( GetArena());
}
inline std::string* SendProposalNackedRequest::release_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendProposalNackedRequest.participant)
  return _impl_.participant_.Release();
}
inline void SendProposalNackedRequest::set_allocated_participant(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.participant_.IsDefault()) {
          _impl_.participant_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendProposalNackedRequest.participant)
}

// string contract_id = 2;
inline void SendProposalNackedRequest::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
}
inline const std::string& SendProposalNackedRequest::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendProposalNackedRequest.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendProposalNackedRequest::set_contract_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendProposalNackedRequest.contract_id)
}
inline std::string* SendProposalNackedRequest::mutable_contract_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendProposalNackedRequest.contract_id)
  return _s;
}
inline const std::string& SendProposalNackedRequest::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void SendProposalNackedRequest::_internal_set_contract_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(value, GetArena());
}
inline std::string* SendProposalNackedRequest::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_id_.Mutable( GetArena());
}
inline std::string* SendProposalNackedRequest::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendProposalNackedRequest.contract_id)
  return _impl_.contract_id_.Release();
}
inline void SendProposalNackedRequest::set_allocated_contract_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_id_.IsDefault()) {
          _impl_.contract_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendProposalNackedRequest.contract_id)
}

// -------------------------------------------------------------------

// SendProposalNackedResponse

// -------------------------------------------------------------------

// SendSecretRevealedRequest

// string participant = 1;
inline void SendSecretRevealedRequest::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.ClearToEmpty();
}
inline const std::string& SendSecretRevealedRequest::participant() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendSecretRevealedRequest.participant)
  return _internal_participant();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendSecretRevealedRequest::set_participant(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendSecretRevealedRequest.participant)
}
inline std::string* SendSecretRevealedRequest::mutable_participant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_participant();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendSecretRevealedRequest.participant)
  return _s;
}
inline const std::string& SendSecretRevealedRequest::_internal_participant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_.Get();
}
inline void SendSecretRevealedRequest::_internal_set_participant(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.Set(value, GetArena());
}
inline std::string* SendSecretRevealedRequest::_internal_mutable_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.participant_.Mutable( GetArena());
}
inline std::string* SendSecretRevealedRequest::release_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendSecretRevealedRequest.participant)
  return _impl_.participant_.Release();
}
inline void SendSecretRevealedRequest::set_allocated_participant(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.participant_.IsDefault()) {
          _impl_.participant_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendSecretRevealedRequest.participant)
}

// string contract_id = 2;
inline void SendSecretRevealedRequest::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
}
inline const std::string& SendSecretRevealedRequest::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendSecretRevealedRequest.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendSecretRevealedRequest::set_contract_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendSecretRevealedRequest.contract_id)
}
inline std::string* SendSecretRevealedRequest::mutable_contract_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendSecretRevealedRequest.contract_id)
  return _s;
}
inline const std::string& SendSecretRevealedRequest::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void SendSecretRevealedRequest::_internal_set_contract_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(value, GetArena());
}
inline std::string* SendSecretRevealedRequest::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_id_.Mutable( GetArena());
}
inline std::string* SendSecretRevealedRequest::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendSecretRevealedRequest.contract_id)
  return _impl_.contract_id_.Release();
}
inline void SendSecretRevealedRequest::set_allocated_contract_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_id_.IsDefault()) {
          _impl_.contract_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendSecretRevealedRequest.contract_id)
}

// string secret = 3;
inline void SendSecretRevealedRequest::clear_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secret_.ClearToEmpty();
}
inline const std::string& SendSecretRevealedRequest::secret() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:business_api.v1.SendSecretRevealedRequest.secret)
  return _internal_secret();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendSecretRevealedRequest::set_secret(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secret_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:business_api.v1.SendSecretRevealedRequest.secret)
}
inline std::string* SendSecretRevealedRequest::mutable_secret() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secret();
  // @@protoc_insertion_point(field_mutable:business_api.v1.SendSecretRevealedRequest.secret)
  return _s;
}
inline const std::string& SendSecretRevealedRequest::_internal_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secret_.Get();
}
inline void SendSecretRevealedRequest::_internal_set_secret(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secret_.Set(value, GetArena());
}
inline std::string* SendSecretRevealedRequest::_internal_mutable_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secret_.Mutable( GetArena());
}
inline std::string* SendSecretRevealedRequest::release_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:business_api.v1.SendSecretRevealedRequest.secret)
  return _impl_.secret_.Release();
}
inline void SendSecretRevealedRequest::set_allocated_secret(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secret_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.secret_.IsDefault()) {
          _impl_.secret_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:business_api.v1.SendSecretRevealedRequest.secret)
}

// -------------------------------------------------------------------

// SendSecretRevealedResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace business_api


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_business_5fapi_2fv1_2fbusiness_2eproto_2epb_2eh
