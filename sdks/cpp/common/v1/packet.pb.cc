// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/v1/packet.proto
// Protobuf C++ Version: 5.27.1

#include "common/v1/packet.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace common {
      template <typename>
PROTOBUF_CONSTEXPR TransactionHeader_MetadataEntry_DoNotUse::TransactionHeader_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TransactionHeader_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionHeader_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionHeader_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TransactionHeader_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionHeader_MetadataEntry_DoNotUseDefaultTypeInternal _TransactionHeader_MetadataEntry_DoNotUse_default_instance_;

inline constexpr TimeoutCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timeout_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TimeoutCondition::TimeoutCondition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TimeoutConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeoutConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeoutConditionDefaultTypeInternal() {}
  union {
    TimeoutCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeoutConditionDefaultTypeInternal _TimeoutCondition_default_instance_;

inline constexpr SimplePaymentNack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : other_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rejection_reason_{static_cast< ::common::SimplePaymentNack_RejectionReason >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimplePaymentNack::SimplePaymentNack(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimplePaymentNackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimplePaymentNackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimplePaymentNackDefaultTypeInternal() {}
  union {
    SimplePaymentNack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimplePaymentNackDefaultTypeInternal _SimplePaymentNack_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SimplePaymentAck::SimplePaymentAck(::_pbi::ConstantInitialized) {}
struct SimplePaymentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimplePaymentAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimplePaymentAckDefaultTypeInternal() {}
  union {
    SimplePaymentAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimplePaymentAckDefaultTypeInternal _SimplePaymentAck_default_instance_;

inline constexpr RedeemCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : issuer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RedeemCondition::RedeemCondition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RedeemConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedeemConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedeemConditionDefaultTypeInternal() {}
  union {
    RedeemCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedeemConditionDefaultTypeInternal _RedeemCondition_default_instance_;

inline constexpr HashCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : presenter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        algorithm_oid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HashCondition::HashCondition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HashConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HashConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HashConditionDefaultTypeInternal() {}
  union {
    HashCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HashConditionDefaultTypeInternal _HashCondition_default_instance_;

inline constexpr FundsChangeNack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : other_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rejection_reason_{static_cast< ::common::FundsChangeNack_RejectionReason >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FundsChangeNack::FundsChangeNack(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FundsChangeNackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundsChangeNackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundsChangeNackDefaultTypeInternal() {}
  union {
    FundsChangeNack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundsChangeNackDefaultTypeInternal _FundsChangeNack_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FundsChangeAck::FundsChangeAck(::_pbi::ConstantInitialized) {}
struct FundsChangeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundsChangeAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundsChangeAckDefaultTypeInternal() {}
  union {
    FundsChangeAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundsChangeAckDefaultTypeInternal _FundsChangeAck_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Contract_SignatoriesEntry_DoNotUse::Contract_SignatoriesEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Contract_SignatoriesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Contract_SignatoriesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Contract_SignatoriesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Contract_SignatoriesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Contract_SignatoriesEntry_DoNotUseDefaultTypeInternal _Contract_SignatoriesEntry_DoNotUse_default_instance_;

inline constexpr CancelTransaction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : other_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rejection_reason_{static_cast< ::common::CancelTransaction_RejectionReason >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelTransaction::CancelTransaction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CancelTransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelTransactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelTransactionDefaultTypeInternal() {}
  union {
    CancelTransaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelTransactionDefaultTypeInternal _CancelTransaction_default_instance_;

inline constexpr BatchedPromissory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : promissory_batch_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BatchedPromissory::BatchedPromissory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BatchedPromissoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchedPromissoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchedPromissoryDefaultTypeInternal() {}
  union {
    BatchedPromissory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchedPromissoryDefaultTypeInternal _BatchedPromissory_default_instance_;

inline constexpr TransactionHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : related_uetrs_{},
        metadata_{},
        uetr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        urn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransactionHeader::TransactionHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransactionHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionHeaderDefaultTypeInternal() {}
  union {
    TransactionHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionHeaderDefaultTypeInternal _TransactionHeader_default_instance_;

inline constexpr SimplePaymentResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        received_promissories_{},
        received_amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SimplePaymentResponse::SimplePaymentResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimplePaymentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimplePaymentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimplePaymentResponseDefaultTypeInternal() {}
  union {
    SimplePaymentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimplePaymentResponseDefaultTypeInternal _SimplePaymentResponse_default_instance_;

inline constexpr SimplePaymentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SimplePaymentRequest::SimplePaymentRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimplePaymentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimplePaymentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimplePaymentRequestDefaultTypeInternal() {}
  union {
    SimplePaymentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimplePaymentRequestDefaultTypeInternal _SimplePaymentRequest_default_instance_;

inline constexpr FundsChangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gross_amount_{nullptr},
        exact_amount_{nullptr},
        fees_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FundsChangeRequest::FundsChangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FundsChangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundsChangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundsChangeRequestDefaultTypeInternal() {}
  union {
    FundsChangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundsChangeRequestDefaultTypeInternal _FundsChangeRequest_default_instance_;

inline constexpr Commitment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Commitment::Commitment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommitmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitmentDefaultTypeInternal() {}
  union {
    Commitment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitmentDefaultTypeInternal _Commitment_default_instance_;

inline constexpr Packet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nonce_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_{nullptr},
        recipient_{nullptr},
        transaction_header_{nullptr},
        packet_type_{static_cast< ::common::PacketType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Packet::Packet(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketDefaultTypeInternal() {}
  union {
    Packet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketDefaultTypeInternal _Packet_default_instance_;

inline constexpr MintCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        issuer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        distribution_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MintCondition::MintCondition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MintConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MintConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MintConditionDefaultTypeInternal() {}
  union {
    MintCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MintConditionDefaultTypeInternal _MintCondition_default_instance_;

inline constexpr Condition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : condition_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Condition::Condition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionDefaultTypeInternal() {}
  union {
    Condition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionDefaultTypeInternal _Condition_default_instance_;

inline constexpr AssociatedUetrConnection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uetr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        packet_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AssociatedUetrConnection::AssociatedUetrConnection(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssociatedUetrConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssociatedUetrConnectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssociatedUetrConnectionDefaultTypeInternal() {}
  union {
    AssociatedUetrConnection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssociatedUetrConnectionDefaultTypeInternal _AssociatedUetrConnection_default_instance_;

inline constexpr Contract::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : commitments_{},
        conditions_{},
        signatories_{},
        urn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Contract::Contract(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ContractDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractDefaultTypeInternal() {}
  union {
    Contract _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractDefaultTypeInternal _Contract_default_instance_;
}  // namespace common
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fv1_2fpacket_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2fv1_2fpacket_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::Packet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_.packet_type_),
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::common::Packet, _impl_.transaction_header_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        2,
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader_MetadataEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader_MetadataEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader_MetadataEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _impl_.uetr_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _impl_.urn_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _impl_.memo_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _impl_.related_uetrs_),
        PROTOBUF_FIELD_OFFSET(::common::TransactionHeader, _impl_.metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::BatchedPromissory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::BatchedPromissory, _impl_.promissory_batch_),
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentRequest, _impl_.amount_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentNack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentNack, _impl_.rejection_reason_),
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentNack, _impl_.other_),
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentResponse, _impl_.received_amount_),
        PROTOBUF_FIELD_OFFSET(::common::SimplePaymentResponse, _impl_.received_promissories_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeRequest, _impl_.gross_amount_),
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeRequest, _impl_.exact_amount_),
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeRequest, _impl_.fees_),
        0,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeNack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeNack, _impl_.rejection_reason_),
        PROTOBUF_FIELD_OFFSET(::common::FundsChangeNack, _impl_.other_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::CancelTransaction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::CancelTransaction, _impl_.rejection_reason_),
        PROTOBUF_FIELD_OFFSET(::common::CancelTransaction, _impl_.other_),
        PROTOBUF_FIELD_OFFSET(::common::Commitment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::Commitment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::Commitment, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::common::Commitment, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::common::Commitment, _impl_.amount_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::TimeoutCondition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::TimeoutCondition, _impl_.timeout_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::HashCondition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::HashCondition, _impl_.presenter_),
        PROTOBUF_FIELD_OFFSET(::common::HashCondition, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::common::HashCondition, _impl_.algorithm_oid_),
        PROTOBUF_FIELD_OFFSET(::common::MintCondition, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::MintCondition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::MintCondition, _impl_.issuer_),
        PROTOBUF_FIELD_OFFSET(::common::MintCondition, _impl_.distribution_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::RedeemCondition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::RedeemCondition, _impl_.issuer_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::Condition, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::common::Condition, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::common::Condition, _impl_.condition_),
        PROTOBUF_FIELD_OFFSET(::common::Contract_SignatoriesEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::Contract_SignatoriesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::Contract_SignatoriesEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::common::Contract_SignatoriesEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common::Contract, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::Contract, _impl_.urn_),
        PROTOBUF_FIELD_OFFSET(::common::Contract, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::common::Contract, _impl_.commitments_),
        PROTOBUF_FIELD_OFFSET(::common::Contract, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::common::Contract, _impl_.signatories_),
        PROTOBUF_FIELD_OFFSET(::common::Contract, _impl_.memo_),
        PROTOBUF_FIELD_OFFSET(::common::AssociatedUetrConnection, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::common::AssociatedUetrConnection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common::AssociatedUetrConnection, _impl_.uetr_),
        PROTOBUF_FIELD_OFFSET(::common::AssociatedUetrConnection, _impl_.packet_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::common::Packet)},
        {20, 30, -1, sizeof(::common::TransactionHeader_MetadataEntry_DoNotUse)},
        {32, -1, -1, sizeof(::common::TransactionHeader)},
        {46, -1, -1, sizeof(::common::BatchedPromissory)},
        {55, 64, -1, sizeof(::common::SimplePaymentRequest)},
        {65, -1, -1, sizeof(::common::SimplePaymentAck)},
        {73, -1, -1, sizeof(::common::SimplePaymentNack)},
        {83, 93, -1, sizeof(::common::SimplePaymentResponse)},
        {95, 106, -1, sizeof(::common::FundsChangeRequest)},
        {109, -1, -1, sizeof(::common::FundsChangeAck)},
        {117, -1, -1, sizeof(::common::FundsChangeNack)},
        {127, -1, -1, sizeof(::common::CancelTransaction)},
        {137, 148, -1, sizeof(::common::Commitment)},
        {151, -1, -1, sizeof(::common::TimeoutCondition)},
        {160, -1, -1, sizeof(::common::HashCondition)},
        {171, 181, -1, sizeof(::common::MintCondition)},
        {183, -1, -1, sizeof(::common::RedeemCondition)},
        {192, -1, -1, sizeof(::common::Condition)},
        {205, 215, -1, sizeof(::common::Contract_SignatoriesEntry_DoNotUse)},
        {217, -1, -1, sizeof(::common::Contract)},
        {231, 241, -1, sizeof(::common::AssociatedUetrConnection)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::common::_Packet_default_instance_._instance,
    &::common::_TransactionHeader_MetadataEntry_DoNotUse_default_instance_._instance,
    &::common::_TransactionHeader_default_instance_._instance,
    &::common::_BatchedPromissory_default_instance_._instance,
    &::common::_SimplePaymentRequest_default_instance_._instance,
    &::common::_SimplePaymentAck_default_instance_._instance,
    &::common::_SimplePaymentNack_default_instance_._instance,
    &::common::_SimplePaymentResponse_default_instance_._instance,
    &::common::_FundsChangeRequest_default_instance_._instance,
    &::common::_FundsChangeAck_default_instance_._instance,
    &::common::_FundsChangeNack_default_instance_._instance,
    &::common::_CancelTransaction_default_instance_._instance,
    &::common::_Commitment_default_instance_._instance,
    &::common::_TimeoutCondition_default_instance_._instance,
    &::common::_HashCondition_default_instance_._instance,
    &::common::_MintCondition_default_instance_._instance,
    &::common::_RedeemCondition_default_instance_._instance,
    &::common::_Condition_default_instance_._instance,
    &::common::_Contract_SignatoriesEntry_DoNotUse_default_instance_._instance,
    &::common::_Contract_default_instance_._instance,
    &::common::_AssociatedUetrConnection_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fv1_2fpacket_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026common/v1/packet.proto\022\006common\032\026common"
    "/v1/common.proto\"\332\001\n\006Packet\022\'\n\013packet_ty"
    "pe\030\001 \001(\0162\022.common.PacketType\022\014\n\004data\030\002 \001"
    "(\014\022\'\n\006sender\030\004 \001(\0132\027.common.DynamicVerif"
    "ier\022*\n\trecipient\030\005 \001(\0132\027.common.DynamicV"
    "erifier\022\r\n\005nonce\030\006 \001(\014\0225\n\022transaction_he"
    "ader\030\007 \001(\0132\031.common.TransactionHeader\"\322\001"
    "\n\021TransactionHeader\022\014\n\004uetr\030\001 \001(\t\022\013\n\003urn"
    "\030\002 \001(\t\022\014\n\004memo\030\003 \001(\t\022\021\n\ttimestamp\030\004 \001(\004\022"
    "\025\n\rrelated_uetrs\030\005 \003(\t\0229\n\010metadata\030\006 \003(\013"
    "2\'.common.TransactionHeader.MetadataEntr"
    "y\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
    "\030\002 \001(\t:\0028\001\"-\n\021BatchedPromissory\022\030\n\020promi"
    "ssory_batch\030\001 \003(\014\"6\n\024SimplePaymentReques"
    "t\022\036\n\006amount\030\001 \001(\0132\016.common.Amount\"\022\n\020Sim"
    "plePaymentAck\"\344\001\n\021SimplePaymentNack\022C\n\020r"
    "ejection_reason\030\001 \001(\0162).common.SimplePay"
    "mentNack.RejectionReason\022\r\n\005other\030\002 \001(\t\""
    "{\n\017RejectionReason\022\022\n\016REASON_UNKNOWN\020\000\022\020"
    "\n\014REASON_OTHER\020\001\022\027\n\023REASON_AMOUNT_EMPTY\020"
    "\002\022)\n%REASON_CHANGE_REQUEST_AMOUNT_MISMAT"
    "CH\020\003\"_\n\025SimplePaymentResponse\022\'\n\017receive"
    "d_amount\030\001 \001(\0132\016.common.Amount\022\035\n\025receiv"
    "ed_promissories\030\002 \003(\t\"~\n\022FundsChangeRequ"
    "est\022$\n\014gross_amount\030\001 \001(\0132\016.common.Amoun"
    "t\022$\n\014exact_amount\030\002 \001(\0132\016.common.Amount\022"
    "\034\n\004fees\030\003 \001(\0132\016.common.Amount\"\020\n\016FundsCh"
    "angeAck\"\322\001\n\017FundsChangeNack\022A\n\020rejection"
    "_reason\030\001 \001(\0162\'.common.FundsChangeNack.R"
    "ejectionReason\022\r\n\005other\030\002 \001(\t\"m\n\017Rejecti"
    "onReason\022\022\n\016REASON_UNKNOWN\020\000\022\020\n\014REASON_O"
    "THER\020\001\022\027\n\023REASON_AMOUNT_EMPTY\020\002\022\033\n\027REASO"
    "N_AMOUNTS_MISMATCH\020\003\"\304\001\n\021CancelTransacti"
    "on\022C\n\020rejection_reason\030\001 \001(\0162).common.Ca"
    "ncelTransaction.RejectionReason\022\r\n\005other"
    "\030\002 \001(\t\"[\n\017RejectionReason\022\022\n\016REASON_UNKN"
    "OWN\020\000\022\020\n\014REASON_OTHER\020\001\022\"\n\036REASON_MISMAT"
    "CHED_TRANSACTIONS\020\002\"O\n\nCommitment\022\016\n\006sen"
    "der\030\001 \001(\t\022\021\n\trecipient\030\002 \001(\t\022\036\n\006amount\030\003"
    " \001(\0132\016.common.Amount\"#\n\020TimeoutCondition"
    "\022\017\n\007timeout\030\001 \001(\004\"G\n\rHashCondition\022\021\n\tpr"
    "esenter\030\001 \001(\t\022\014\n\004hash\030\002 \001(\014\022\025\n\ralgorithm"
    "_oid\030\003 \001(\014\"K\n\rMintCondition\022\016\n\006issuer\030\001 "
    "\001(\t\022*\n\014distribution\030\002 \001(\0132\024.common.Distr"
    "ibution\"!\n\017RedeemCondition\022\016\n\006issuer\030\001 \001"
    "(\t\"\276\001\n\tCondition\022+\n\007timeout\030\001 \001(\0132\030.comm"
    "on.TimeoutConditionH\000\022%\n\004hash\030\002 \001(\0132\025.co"
    "mmon.HashConditionH\000\022%\n\004mint\030\003 \001(\0132\025.com"
    "mon.MintConditionH\000\022)\n\006redeem\030\004 \001(\0132\027.co"
    "mmon.RedeemConditionH\000B\013\n\tcondition\"\355\001\n\010"
    "Contract\022\013\n\003urn\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\'\n\013com"
    "mitments\030\003 \003(\0132\022.common.Commitment\022%\n\nco"
    "nditions\030\004 \003(\0132\021.common.Condition\0226\n\013sig"
    "natories\030\005 \003(\0132!.common.Contract.Signato"
    "riesEntry\022\014\n\004memo\030\006 \001(\t\0322\n\020SignatoriesEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"X\n\030A"
    "ssociatedUetrConnection\022\014\n\004uetr\030\001 \001(\t\022#\n"
    "\006packet\030\002 \001(\0132\016.common.PacketH\000\210\001\001B\t\n\007_p"
    "acket*\317\t\n\nPacketType\022\013\n\007Unknown\020\000\022\017\n\013Uns"
    "upported\020\001\022\020\n\014Authenticate\020\002\022\033\n\027Connecti"
    "onAuthenticated\020\007\022\022\n\016ReturnToSender\020\003\022\023\n"
    "\017TerminateStream\020\004\022\r\n\tKeepAlive\020\005\022\023\n\017Ack"
    "nowledgement\020\006\022\033\n\027AddAssociatedConnectio"
    "n\020\t\022\034\n\030DropAssociatedConnection\020\n\022\035\n\031Ass"
    "ociatedConnectionAdded\020\013\022\037\n\033AssociatedCo"
    "nnectionDropped\020\014\022\n\n\006Report\0202\022\016\n\nPromiss"
    "ory\020d\022\027\n\023AuthorizePromissory\020e\022!\n\035Author"
    "izeAndForwardPromissory\020f\022\025\n\021ArchiveProm"
    "issory\020g\022\025\n\021PromissoryReceipt\020h\022\027\n\023Autho"
    "rizationStatus\020l\022\022\n\016RetrieveAssets\020m\022\023\n\017"
    "PromissoryBatch\020n\022\027\n\023LockPromissoryBatch"
    "\020o\022\032\n\026LockPromissoryBatchAck\020p\022\027\n\023Retrie"
    "veAssetsBatch\020q\022&\n\"AuthorizeAndForwardPr"
    "omissoryBatch\020t\022\030\n\024ValidationBlockBatch\020"
    "u\022\030\n\024AuthorizedBlockBatch\020v\022\022\n\016MintPromi"
    "ssory\020w\022\030\n\024FreshPromissoryBatch\020x\022\031\n\025Min"
    "tedPromissoryBatch\020y\022\036\n\032RedeemValidation"
    "BlockBatch\020z\022\024\n\017IdentityRequest\020\310\001\022\025\n\020Id"
    "entityResponse\020\311\001\022\022\n\rIdentityProof\020\312\001\022\030\n"
    "\023AuthorizationFailed\020\254\002\022\037\n\032EmissaryConne"
    "ctionIdentity\020\220\003\022\025\n\020ContractProposal\020\364\003\022"
    "\030\n\023ContractProposalAck\020\365\003\022\031\n\024ContractPro"
    "posalNack\020\366\003\022\026\n\021ContractSignature\020\367\003\022\025\n\020"
    "ContractComplete\020\370\003\022\021\n\014RecoveryData\020\330\004\022\026"
    "\n\021RemittanceRequest\020\274\005\022\027\n\022RemittanceResp"
    "onse\020\275\005\022\020\n\013TxnContract\020\227\n\022\023\n\016TxnContract"
    "Ack\020\230\n\022\030\n\023TxnAssetsAuthorized\020\231\n\022\025\n\020TxnS"
    "ecretRequest\020\234\n\022\025\n\020TxnSecretPresent\020\235\n\022\026"
    "\n\021TxnAssetsReturned\020\236\n\022\017\n\nTxnRecover\020\237\n*"
    "a\n\rHashAlgorithm\022\n\n\006SHA256\020\000\022\n\n\006SHA512\020\001"
    "\022\014\n\010SHA3_256\020\002\022\014\n\010SHA3_512\020\003\022\r\n\tKECCAK25"
    "6\020\004\022\r\n\tKECCAK512\020\005*\305\001\n\014ContractType\022\035\n\031C"
    "ONTRACT_TYPE_UNSPECIFIED\020\000\022\031\n\025CONTRACT_T"
    "YPE_PAYMENT\020\001\022\026\n\022CONTRACT_TYPE_SWAP\020\002\022\027\n"
    "\023CONTRACT_TYPE_RELAY\020\003\022\030\n\024CONTRACT_TYPE_"
    "CUSTOM\020\004\022\026\n\022CONTRACT_TYPE_MINT\020\005\022\030\n\024CONT"
    "RACT_TYPE_REDEEM\020\006B\004Z\002./b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fv1_2fpacket_2eproto_deps[1] =
    {
        &::descriptor_table_common_2fv1_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fv1_2fpacket_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_2fv1_2fpacket_2eproto = {
    false,
    false,
    3872,
    descriptor_table_protodef_common_2fv1_2fpacket_2eproto,
    "common/v1/packet.proto",
    &descriptor_table_common_2fv1_2fpacket_2eproto_once,
    descriptor_table_common_2fv1_2fpacket_2eproto_deps,
    1,
    21,
    schemas,
    file_default_instances,
    TableStruct_common_2fv1_2fpacket_2eproto::offsets,
    file_level_enum_descriptors_common_2fv1_2fpacket_2eproto,
    file_level_service_descriptors_common_2fv1_2fpacket_2eproto,
};
namespace common {
const ::google::protobuf::EnumDescriptor* SimplePaymentNack_RejectionReason_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SimplePaymentNack_RejectionReason_internal_data_[] = {
    262144u, 0u, };
bool SimplePaymentNack_RejectionReason_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SimplePaymentNack_RejectionReason SimplePaymentNack::REASON_UNKNOWN;
constexpr SimplePaymentNack_RejectionReason SimplePaymentNack::REASON_OTHER;
constexpr SimplePaymentNack_RejectionReason SimplePaymentNack::REASON_AMOUNT_EMPTY;
constexpr SimplePaymentNack_RejectionReason SimplePaymentNack::REASON_CHANGE_REQUEST_AMOUNT_MISMATCH;
constexpr SimplePaymentNack_RejectionReason SimplePaymentNack::RejectionReason_MIN;
constexpr SimplePaymentNack_RejectionReason SimplePaymentNack::RejectionReason_MAX;
constexpr int SimplePaymentNack::RejectionReason_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* FundsChangeNack_RejectionReason_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t FundsChangeNack_RejectionReason_internal_data_[] = {
    262144u, 0u, };
bool FundsChangeNack_RejectionReason_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr FundsChangeNack_RejectionReason FundsChangeNack::REASON_UNKNOWN;
constexpr FundsChangeNack_RejectionReason FundsChangeNack::REASON_OTHER;
constexpr FundsChangeNack_RejectionReason FundsChangeNack::REASON_AMOUNT_EMPTY;
constexpr FundsChangeNack_RejectionReason FundsChangeNack::REASON_AMOUNTS_MISMATCH;
constexpr FundsChangeNack_RejectionReason FundsChangeNack::RejectionReason_MIN;
constexpr FundsChangeNack_RejectionReason FundsChangeNack::RejectionReason_MAX;
constexpr int FundsChangeNack::RejectionReason_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CancelTransaction_RejectionReason_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t CancelTransaction_RejectionReason_internal_data_[] = {
    196608u, 0u, };
bool CancelTransaction_RejectionReason_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CancelTransaction_RejectionReason CancelTransaction::REASON_UNKNOWN;
constexpr CancelTransaction_RejectionReason CancelTransaction::REASON_OTHER;
constexpr CancelTransaction_RejectionReason CancelTransaction::REASON_MISMATCHED_TRANSACTIONS;
constexpr CancelTransaction_RejectionReason CancelTransaction::RejectionReason_MIN;
constexpr CancelTransaction_RejectionReason CancelTransaction::RejectionReason_MAX;
constexpr int CancelTransaction::RejectionReason_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PacketType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PacketType_internal_data_[] = {
    524288u, 1114336u, 30u, 1024u, 4026531840u, 521201u, 0u, 0u, 7u, 701u, 503u, 1308u, 501u, 600u, 1304u, 1310u, 400u, 502u, 504u, 700u, 1303u, 1305u, 1309u, 1311u, 300u, 500u, };
bool PacketType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, PacketType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* HashAlgorithm_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t HashAlgorithm_internal_data_[] = {
    393216u, 0u, };
bool HashAlgorithm_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* ContractType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto);
  return file_level_enum_descriptors_common_2fv1_2fpacket_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t ContractType_internal_data_[] = {
    458752u, 0u, };
bool ContractType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

class Packet::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Packet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Packet, _impl_._has_bits_);
};

void Packet::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sender_ != nullptr) _impl_.sender_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Packet::clear_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.recipient_ != nullptr) _impl_.recipient_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Packet::Packet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.Packet)
}
inline PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::Packet& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_),
        nonce_(arena, from.nonce_) {}

Packet::Packet(
    ::google::protobuf::Arena* arena,
    const Packet& from)
    : ::google::protobuf::Message(arena) {
  Packet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sender_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::DynamicVerifier>(
                              arena, *from._impl_.sender_)
                        : nullptr;
  _impl_.recipient_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::common::DynamicVerifier>(
                              arena, *from._impl_.recipient_)
                        : nullptr;
  _impl_.transaction_header_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::common::TransactionHeader>(
                              arena, *from._impl_.transaction_header_)
                        : nullptr;
  _impl_.packet_type_ = from._impl_.packet_type_;

  // @@protoc_insertion_point(copy_constructor:common.Packet)
}
inline PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena),
        nonce_(arena) {}

inline void Packet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sender_),
           0,
           offsetof(Impl_, packet_type_) -
               offsetof(Impl_, sender_) +
               sizeof(Impl_::packet_type_));
}
Packet::~Packet() {
  // @@protoc_insertion_point(destructor:common.Packet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Packet::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.nonce_.Destroy();
  delete _impl_.sender_;
  delete _impl_.recipient_;
  delete _impl_.transaction_header_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Packet::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Packet, _impl_._cached_size_),
              false,
          },
          &Packet::MergeImpl,
          &Packet::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> Packet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Packet, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967172,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Packet_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::Packet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .common.PacketType packet_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.packet_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.packet_type_)}},
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .common.DynamicVerifier sender = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.sender_)}},
    // .common.DynamicVerifier recipient = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Packet, _impl_.recipient_)}},
    // bytes nonce = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.nonce_)}},
    // .common.TransactionHeader transaction_header = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(Packet, _impl_.transaction_header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.PacketType packet_type = 1;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.packet_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .common.DynamicVerifier sender = 4;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.sender_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.DynamicVerifier recipient = 5;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.recipient_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes nonce = 6;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.nonce_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .common.TransactionHeader transaction_header = 7;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.transaction_header_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::DynamicVerifier>()},
    {::_pbi::TcParser::GetTable<::common::DynamicVerifier>()},
    {::_pbi::TcParser::GetTable<::common::TransactionHeader>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Packet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.nonce_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.sender_ != nullptr);
      _impl_.sender_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.recipient_ != nullptr);
      _impl_.recipient_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.transaction_header_ != nullptr);
      _impl_.transaction_header_->Clear();
    }
  }
  _impl_.packet_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Packet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.Packet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .common.PacketType packet_type = 1;
  if (this->_internal_packet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_packet_type(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .common.DynamicVerifier sender = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.sender_, _impl_.sender_->GetCachedSize(), target, stream);
  }

  // .common.DynamicVerifier recipient = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.recipient_, _impl_.recipient_->GetCachedSize(), target, stream);
  }

  // bytes nonce = 6;
  if (!this->_internal_nonce().empty()) {
    const std::string& _s = this->_internal_nonce();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // .common.TransactionHeader transaction_header = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.transaction_header_, _impl_.transaction_header_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Packet)
  return target;
}

::size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Packet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // bytes nonce = 6;
  if (!this->_internal_nonce().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_nonce());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .common.DynamicVerifier sender = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sender_);
    }

    // .common.DynamicVerifier recipient = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.recipient_);
    }

    // .common.TransactionHeader transaction_header = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transaction_header_);
    }

  }
  // .common.PacketType packet_type = 1;
  if (this->_internal_packet_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_packet_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Packet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Packet*>(&to_msg);
  auto& from = static_cast<const Packet&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.Packet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_nonce().empty()) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.sender_ != nullptr);
      if (_this->_impl_.sender_ == nullptr) {
        _this->_impl_.sender_ =
            ::google::protobuf::Message::CopyConstruct<::common::DynamicVerifier>(arena, *from._impl_.sender_);
      } else {
        _this->_impl_.sender_->MergeFrom(*from._impl_.sender_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.recipient_ != nullptr);
      if (_this->_impl_.recipient_ == nullptr) {
        _this->_impl_.recipient_ =
            ::google::protobuf::Message::CopyConstruct<::common::DynamicVerifier>(arena, *from._impl_.recipient_);
      } else {
        _this->_impl_.recipient_->MergeFrom(*from._impl_.recipient_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.transaction_header_ != nullptr);
      if (_this->_impl_.transaction_header_ == nullptr) {
        _this->_impl_.transaction_header_ =
            ::google::protobuf::Message::CopyConstruct<::common::TransactionHeader>(arena, *from._impl_.transaction_header_);
      } else {
        _this->_impl_.transaction_header_->MergeFrom(*from._impl_.transaction_header_);
      }
    }
  }
  if (from._internal_packet_type() != 0) {
    _this->_impl_.packet_type_ = from._impl_.packet_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Packet::InternalSwap(Packet* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nonce_, &other->_impl_.nonce_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Packet, _impl_.packet_type_)
      + sizeof(Packet::_impl_.packet_type_)
      - PROTOBUF_FIELD_OFFSET(Packet, _impl_.sender_)>(
          reinterpret_cast<char*>(&_impl_.sender_),
          reinterpret_cast<char*>(&other->_impl_.sender_));
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

TransactionHeader_MetadataEntry_DoNotUse::TransactionHeader_MetadataEntry_DoNotUse() {}
TransactionHeader_MetadataEntry_DoNotUse::TransactionHeader_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
TransactionHeader_MetadataEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TransactionHeader_MetadataEntry_DoNotUse, _cached_size_),
              false,
          },
          &TransactionHeader_MetadataEntry_DoNotUse::MergeImpl,
          &TransactionHeader_MetadataEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class TransactionHeader::_Internal {
 public:
};

TransactionHeader::TransactionHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.TransactionHeader)
}
inline PROTOBUF_NDEBUG_INLINE TransactionHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::TransactionHeader& from_msg)
      : related_uetrs_{visibility, arena, from.related_uetrs_},
        metadata_{visibility, arena, from.metadata_},
        uetr_(arena, from.uetr_),
        urn_(arena, from.urn_),
        memo_(arena, from.memo_),
        _cached_size_{0} {}

TransactionHeader::TransactionHeader(
    ::google::protobuf::Arena* arena,
    const TransactionHeader& from)
    : ::google::protobuf::Message(arena) {
  TransactionHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:common.TransactionHeader)
}
inline PROTOBUF_NDEBUG_INLINE TransactionHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : related_uetrs_{visibility, arena},
        metadata_{visibility, arena},
        uetr_(arena),
        urn_(arena),
        memo_(arena),
        _cached_size_{0} {}

inline void TransactionHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
TransactionHeader::~TransactionHeader() {
  // @@protoc_insertion_point(destructor:common.TransactionHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransactionHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uetr_.Destroy();
  _impl_.urn_.Destroy();
  _impl_.memo_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TransactionHeader::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_._cached_size_),
              false,
          },
          &TransactionHeader::MergeImpl,
          &TransactionHeader::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 65, 2> TransactionHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TransactionHeader_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::TransactionHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string uetr = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.uetr_)}},
    // string urn = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.urn_)}},
    // string memo = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.memo_)}},
    // uint64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TransactionHeader, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.timestamp_)}},
    // repeated string related_uetrs = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.related_uetrs_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string uetr = 1;
    {PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.uetr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string urn = 2;
    {PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.urn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string memo = 3;
    {PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.memo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated string related_uetrs = 5;
    {PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.related_uetrs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(TransactionHeader, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TransactionHeader()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\30\4\3\4\0\15\10\0"
    "common.TransactionHeader"
    "uetr"
    "urn"
    "memo"
    "related_uetrs"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void TransactionHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:common.TransactionHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.related_uetrs_.Clear();
  _impl_.metadata_.Clear();
  _impl_.uetr_.ClearToEmpty();
  _impl_.urn_.ClearToEmpty();
  _impl_.memo_.ClearToEmpty();
  _impl_.timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TransactionHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.TransactionHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uetr = 1;
  if (!this->_internal_uetr().empty()) {
    const std::string& _s = this->_internal_uetr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.uetr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string urn = 2;
  if (!this->_internal_urn().empty()) {
    const std::string& _s = this->_internal_urn();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.urn");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string memo = 3;
  if (!this->_internal_memo().empty()) {
    const std::string& _s = this->_internal_memo();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.memo");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 timestamp = 4;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_timestamp(), target);
  }

  // repeated string related_uetrs = 5;
  for (int i = 0, n = this->_internal_related_uetrs_size(); i < n; ++i) {
    const auto& s = this->_internal_related_uetrs().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.related_uetrs");
    target = stream->WriteString(5, s, target);
  }

  // map<string, string> metadata = 6;
  if (!_internal_metadata().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_metadata();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.metadata");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.metadata");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.metadata");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.TransactionHeader.metadata");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.TransactionHeader)
  return target;
}

::size_t TransactionHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.TransactionHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string related_uetrs = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_related_uetrs().size());
  for (int i = 0, n = _internal_related_uetrs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_related_uetrs().Get(i));
  }
  // map<string, string> metadata = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_metadata_size());
  for (const auto& entry : _internal_metadata()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string uetr = 1;
  if (!this->_internal_uetr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uetr());
  }

  // string urn = 2;
  if (!this->_internal_urn().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_urn());
  }

  // string memo = 3;
  if (!this->_internal_memo().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_memo());
  }

  // uint64 timestamp = 4;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TransactionHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransactionHeader*>(&to_msg);
  auto& from = static_cast<const TransactionHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.TransactionHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_related_uetrs()->MergeFrom(from._internal_related_uetrs());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_uetr().empty()) {
    _this->_internal_set_uetr(from._internal_uetr());
  }
  if (!from._internal_urn().empty()) {
    _this->_internal_set_urn(from._internal_urn());
  }
  if (!from._internal_memo().empty()) {
    _this->_internal_set_memo(from._internal_memo());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionHeader::CopyFrom(const TransactionHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.TransactionHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransactionHeader::InternalSwap(TransactionHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.related_uetrs_.InternalSwap(&other->_impl_.related_uetrs_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uetr_, &other->_impl_.uetr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.urn_, &other->_impl_.urn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memo_, &other->_impl_.memo_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata TransactionHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchedPromissory::_Internal {
 public:
};

BatchedPromissory::BatchedPromissory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.BatchedPromissory)
}
inline PROTOBUF_NDEBUG_INLINE BatchedPromissory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::BatchedPromissory& from_msg)
      : promissory_batch_{visibility, arena, from.promissory_batch_},
        _cached_size_{0} {}

BatchedPromissory::BatchedPromissory(
    ::google::protobuf::Arena* arena,
    const BatchedPromissory& from)
    : ::google::protobuf::Message(arena) {
  BatchedPromissory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:common.BatchedPromissory)
}
inline PROTOBUF_NDEBUG_INLINE BatchedPromissory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : promissory_batch_{visibility, arena},
        _cached_size_{0} {}

inline void BatchedPromissory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BatchedPromissory::~BatchedPromissory() {
  // @@protoc_insertion_point(destructor:common.BatchedPromissory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BatchedPromissory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BatchedPromissory::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BatchedPromissory, _impl_._cached_size_),
              false,
          },
          &BatchedPromissory::MergeImpl,
          &BatchedPromissory::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BatchedPromissory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BatchedPromissory_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::BatchedPromissory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes promissory_batch = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BatchedPromissory, _impl_.promissory_batch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes promissory_batch = 1;
    {PROTOBUF_FIELD_OFFSET(BatchedPromissory, _impl_.promissory_batch_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BatchedPromissory::Clear() {
// @@protoc_insertion_point(message_clear_start:common.BatchedPromissory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.promissory_batch_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BatchedPromissory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.BatchedPromissory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes promissory_batch = 1;
  for (int i = 0, n = this->_internal_promissory_batch_size(); i < n; ++i) {
    const auto& s = this->_internal_promissory_batch().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.BatchedPromissory)
  return target;
}

::size_t BatchedPromissory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.BatchedPromissory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes promissory_batch = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_promissory_batch().size());
  for (int i = 0, n = _internal_promissory_batch().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_promissory_batch().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BatchedPromissory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchedPromissory*>(&to_msg);
  auto& from = static_cast<const BatchedPromissory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.BatchedPromissory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_promissory_batch()->MergeFrom(from._internal_promissory_batch());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchedPromissory::CopyFrom(const BatchedPromissory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.BatchedPromissory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchedPromissory::InternalSwap(BatchedPromissory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.promissory_batch_.InternalSwap(&other->_impl_.promissory_batch_);
}

::google::protobuf::Metadata BatchedPromissory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimplePaymentRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SimplePaymentRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimplePaymentRequest, _impl_._has_bits_);
};

void SimplePaymentRequest::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SimplePaymentRequest::SimplePaymentRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.SimplePaymentRequest)
}
inline PROTOBUF_NDEBUG_INLINE SimplePaymentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::SimplePaymentRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SimplePaymentRequest::SimplePaymentRequest(
    ::google::protobuf::Arena* arena,
    const SimplePaymentRequest& from)
    : ::google::protobuf::Message(arena) {
  SimplePaymentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.amount_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::Amount>(
                              arena, *from._impl_.amount_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:common.SimplePaymentRequest)
}
inline PROTOBUF_NDEBUG_INLINE SimplePaymentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SimplePaymentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
SimplePaymentRequest::~SimplePaymentRequest() {
  // @@protoc_insertion_point(destructor:common.SimplePaymentRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimplePaymentRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.amount_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimplePaymentRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimplePaymentRequest, _impl_._cached_size_),
              false,
          },
          &SimplePaymentRequest::MergeImpl,
          &SimplePaymentRequest::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SimplePaymentRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimplePaymentRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SimplePaymentRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::SimplePaymentRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .common.Amount amount = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SimplePaymentRequest, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.Amount amount = 1;
    {PROTOBUF_FIELD_OFFSET(SimplePaymentRequest, _impl_.amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Amount>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SimplePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:common.SimplePaymentRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimplePaymentRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.SimplePaymentRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .common.Amount amount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.amount_, _impl_.amount_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.SimplePaymentRequest)
  return target;
}

::size_t SimplePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.SimplePaymentRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.Amount amount = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimplePaymentRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimplePaymentRequest*>(&to_msg);
  auto& from = static_cast<const SimplePaymentRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.SimplePaymentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.amount_ != nullptr);
    if (_this->_impl_.amount_ == nullptr) {
      _this->_impl_.amount_ =
          ::google::protobuf::Message::CopyConstruct<::common::Amount>(arena, *from._impl_.amount_);
    } else {
      _this->_impl_.amount_->MergeFrom(*from._impl_.amount_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimplePaymentRequest::CopyFrom(const SimplePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.SimplePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimplePaymentRequest::InternalSwap(SimplePaymentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata SimplePaymentRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimplePaymentAck::_Internal {
 public:
};

SimplePaymentAck::SimplePaymentAck(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:common.SimplePaymentAck)
}
SimplePaymentAck::SimplePaymentAck(
    ::google::protobuf::Arena* arena,
    const SimplePaymentAck& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SimplePaymentAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:common.SimplePaymentAck)
}

const ::google::protobuf::MessageLite::ClassData*
SimplePaymentAck::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimplePaymentAck, _impl_._cached_size_),
              false,
          },
          &SimplePaymentAck::MergeImpl,
          &SimplePaymentAck::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SimplePaymentAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimplePaymentAck_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::SimplePaymentAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata SimplePaymentAck::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimplePaymentNack::_Internal {
 public:
};

SimplePaymentNack::SimplePaymentNack(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.SimplePaymentNack)
}
inline PROTOBUF_NDEBUG_INLINE SimplePaymentNack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::SimplePaymentNack& from_msg)
      : other_(arena, from.other_),
        _cached_size_{0} {}

SimplePaymentNack::SimplePaymentNack(
    ::google::protobuf::Arena* arena,
    const SimplePaymentNack& from)
    : ::google::protobuf::Message(arena) {
  SimplePaymentNack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.rejection_reason_ = from._impl_.rejection_reason_;

  // @@protoc_insertion_point(copy_constructor:common.SimplePaymentNack)
}
inline PROTOBUF_NDEBUG_INLINE SimplePaymentNack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : other_(arena),
        _cached_size_{0} {}

inline void SimplePaymentNack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rejection_reason_ = {};
}
SimplePaymentNack::~SimplePaymentNack() {
  // @@protoc_insertion_point(destructor:common.SimplePaymentNack)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimplePaymentNack::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.other_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimplePaymentNack::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimplePaymentNack, _impl_._cached_size_),
              false,
          },
          &SimplePaymentNack::MergeImpl,
          &SimplePaymentNack::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> SimplePaymentNack::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimplePaymentNack_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::SimplePaymentNack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string other = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SimplePaymentNack, _impl_.other_)}},
    // .common.SimplePaymentNack.RejectionReason rejection_reason = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimplePaymentNack, _impl_.rejection_reason_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SimplePaymentNack, _impl_.rejection_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.SimplePaymentNack.RejectionReason rejection_reason = 1;
    {PROTOBUF_FIELD_OFFSET(SimplePaymentNack, _impl_.rejection_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string other = 2;
    {PROTOBUF_FIELD_OFFSET(SimplePaymentNack, _impl_.other_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\5\0\0\0\0\0"
    "common.SimplePaymentNack"
    "other"
  }},
};

PROTOBUF_NOINLINE void SimplePaymentNack::Clear() {
// @@protoc_insertion_point(message_clear_start:common.SimplePaymentNack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.other_.ClearToEmpty();
  _impl_.rejection_reason_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimplePaymentNack::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.SimplePaymentNack)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .common.SimplePaymentNack.RejectionReason rejection_reason = 1;
  if (this->_internal_rejection_reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_rejection_reason(), target);
  }

  // string other = 2;
  if (!this->_internal_other().empty()) {
    const std::string& _s = this->_internal_other();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.SimplePaymentNack.other");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.SimplePaymentNack)
  return target;
}

::size_t SimplePaymentNack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.SimplePaymentNack)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string other = 2;
  if (!this->_internal_other().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_other());
  }

  // .common.SimplePaymentNack.RejectionReason rejection_reason = 1;
  if (this->_internal_rejection_reason() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_rejection_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimplePaymentNack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimplePaymentNack*>(&to_msg);
  auto& from = static_cast<const SimplePaymentNack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.SimplePaymentNack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_other().empty()) {
    _this->_internal_set_other(from._internal_other());
  }
  if (from._internal_rejection_reason() != 0) {
    _this->_impl_.rejection_reason_ = from._impl_.rejection_reason_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimplePaymentNack::CopyFrom(const SimplePaymentNack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.SimplePaymentNack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimplePaymentNack::InternalSwap(SimplePaymentNack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.other_, &other->_impl_.other_, arena);
  swap(_impl_.rejection_reason_, other->_impl_.rejection_reason_);
}

::google::protobuf::Metadata SimplePaymentNack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimplePaymentResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SimplePaymentResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_._has_bits_);
};

void SimplePaymentResponse::clear_received_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.received_amount_ != nullptr) _impl_.received_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SimplePaymentResponse::SimplePaymentResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.SimplePaymentResponse)
}
inline PROTOBUF_NDEBUG_INLINE SimplePaymentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::SimplePaymentResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        received_promissories_{visibility, arena, from.received_promissories_} {}

SimplePaymentResponse::SimplePaymentResponse(
    ::google::protobuf::Arena* arena,
    const SimplePaymentResponse& from)
    : ::google::protobuf::Message(arena) {
  SimplePaymentResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.received_amount_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::Amount>(
                              arena, *from._impl_.received_amount_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:common.SimplePaymentResponse)
}
inline PROTOBUF_NDEBUG_INLINE SimplePaymentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        received_promissories_{visibility, arena} {}

inline void SimplePaymentResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.received_amount_ = {};
}
SimplePaymentResponse::~SimplePaymentResponse() {
  // @@protoc_insertion_point(destructor:common.SimplePaymentResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimplePaymentResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.received_amount_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimplePaymentResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_._cached_size_),
              false,
          },
          &SimplePaymentResponse::MergeImpl,
          &SimplePaymentResponse::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 58, 2> SimplePaymentResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SimplePaymentResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::SimplePaymentResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string received_promissories = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_.received_promissories_)}},
    // .common.Amount received_amount = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_.received_amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.Amount received_amount = 1;
    {PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_.received_amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string received_promissories = 2;
    {PROTOBUF_FIELD_OFFSET(SimplePaymentResponse, _impl_.received_promissories_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Amount>()},
  }}, {{
    "\34\0\25\0\0\0\0\0"
    "common.SimplePaymentResponse"
    "received_promissories"
  }},
};

PROTOBUF_NOINLINE void SimplePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:common.SimplePaymentResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.received_promissories_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.received_amount_ != nullptr);
    _impl_.received_amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimplePaymentResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.SimplePaymentResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .common.Amount received_amount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.received_amount_, _impl_.received_amount_->GetCachedSize(), target, stream);
  }

  // repeated string received_promissories = 2;
  for (int i = 0, n = this->_internal_received_promissories_size(); i < n; ++i) {
    const auto& s = this->_internal_received_promissories().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.SimplePaymentResponse.received_promissories");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.SimplePaymentResponse)
  return target;
}

::size_t SimplePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.SimplePaymentResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string received_promissories = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_received_promissories().size());
  for (int i = 0, n = _internal_received_promissories().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_received_promissories().Get(i));
  }
  // .common.Amount received_amount = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.received_amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimplePaymentResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimplePaymentResponse*>(&to_msg);
  auto& from = static_cast<const SimplePaymentResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.SimplePaymentResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_received_promissories()->MergeFrom(from._internal_received_promissories());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.received_amount_ != nullptr);
    if (_this->_impl_.received_amount_ == nullptr) {
      _this->_impl_.received_amount_ =
          ::google::protobuf::Message::CopyConstruct<::common::Amount>(arena, *from._impl_.received_amount_);
    } else {
      _this->_impl_.received_amount_->MergeFrom(*from._impl_.received_amount_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimplePaymentResponse::CopyFrom(const SimplePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.SimplePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimplePaymentResponse::InternalSwap(SimplePaymentResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.received_promissories_.InternalSwap(&other->_impl_.received_promissories_);
  swap(_impl_.received_amount_, other->_impl_.received_amount_);
}

::google::protobuf::Metadata SimplePaymentResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FundsChangeRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FundsChangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_._has_bits_);
};

void FundsChangeRequest::clear_gross_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gross_amount_ != nullptr) _impl_.gross_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void FundsChangeRequest::clear_exact_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exact_amount_ != nullptr) _impl_.exact_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void FundsChangeRequest::clear_fees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fees_ != nullptr) _impl_.fees_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
FundsChangeRequest::FundsChangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.FundsChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE FundsChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::FundsChangeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FundsChangeRequest::FundsChangeRequest(
    ::google::protobuf::Arena* arena,
    const FundsChangeRequest& from)
    : ::google::protobuf::Message(arena) {
  FundsChangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gross_amount_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::Amount>(
                              arena, *from._impl_.gross_amount_)
                        : nullptr;
  _impl_.exact_amount_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::common::Amount>(
                              arena, *from._impl_.exact_amount_)
                        : nullptr;
  _impl_.fees_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::common::Amount>(
                              arena, *from._impl_.fees_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:common.FundsChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE FundsChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FundsChangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gross_amount_),
           0,
           offsetof(Impl_, fees_) -
               offsetof(Impl_, gross_amount_) +
               sizeof(Impl_::fees_));
}
FundsChangeRequest::~FundsChangeRequest() {
  // @@protoc_insertion_point(destructor:common.FundsChangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FundsChangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.gross_amount_;
  delete _impl_.exact_amount_;
  delete _impl_.fees_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FundsChangeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_._cached_size_),
              false,
          },
          &FundsChangeRequest::MergeImpl,
          &FundsChangeRequest::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> FundsChangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FundsChangeRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::FundsChangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .common.Amount gross_amount = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.gross_amount_)}},
    // .common.Amount exact_amount = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.exact_amount_)}},
    // .common.Amount fees = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.fees_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.Amount gross_amount = 1;
    {PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.gross_amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.Amount exact_amount = 2;
    {PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.exact_amount_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.Amount fees = 3;
    {PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.fees_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Amount>()},
    {::_pbi::TcParser::GetTable<::common::Amount>()},
    {::_pbi::TcParser::GetTable<::common::Amount>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FundsChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:common.FundsChangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.gross_amount_ != nullptr);
      _impl_.gross_amount_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.exact_amount_ != nullptr);
      _impl_.exact_amount_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.fees_ != nullptr);
      _impl_.fees_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* FundsChangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.FundsChangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .common.Amount gross_amount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.gross_amount_, _impl_.gross_amount_->GetCachedSize(), target, stream);
  }

  // .common.Amount exact_amount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.exact_amount_, _impl_.exact_amount_->GetCachedSize(), target, stream);
  }

  // .common.Amount fees = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.fees_, _impl_.fees_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.FundsChangeRequest)
  return target;
}

::size_t FundsChangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.FundsChangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .common.Amount gross_amount = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.gross_amount_);
    }

    // .common.Amount exact_amount = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.exact_amount_);
    }

    // .common.Amount fees = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fees_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FundsChangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FundsChangeRequest*>(&to_msg);
  auto& from = static_cast<const FundsChangeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.FundsChangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.gross_amount_ != nullptr);
      if (_this->_impl_.gross_amount_ == nullptr) {
        _this->_impl_.gross_amount_ =
            ::google::protobuf::Message::CopyConstruct<::common::Amount>(arena, *from._impl_.gross_amount_);
      } else {
        _this->_impl_.gross_amount_->MergeFrom(*from._impl_.gross_amount_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.exact_amount_ != nullptr);
      if (_this->_impl_.exact_amount_ == nullptr) {
        _this->_impl_.exact_amount_ =
            ::google::protobuf::Message::CopyConstruct<::common::Amount>(arena, *from._impl_.exact_amount_);
      } else {
        _this->_impl_.exact_amount_->MergeFrom(*from._impl_.exact_amount_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.fees_ != nullptr);
      if (_this->_impl_.fees_ == nullptr) {
        _this->_impl_.fees_ =
            ::google::protobuf::Message::CopyConstruct<::common::Amount>(arena, *from._impl_.fees_);
      } else {
        _this->_impl_.fees_->MergeFrom(*from._impl_.fees_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FundsChangeRequest::CopyFrom(const FundsChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.FundsChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FundsChangeRequest::InternalSwap(FundsChangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.fees_)
      + sizeof(FundsChangeRequest::_impl_.fees_)
      - PROTOBUF_FIELD_OFFSET(FundsChangeRequest, _impl_.gross_amount_)>(
          reinterpret_cast<char*>(&_impl_.gross_amount_),
          reinterpret_cast<char*>(&other->_impl_.gross_amount_));
}

::google::protobuf::Metadata FundsChangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FundsChangeAck::_Internal {
 public:
};

FundsChangeAck::FundsChangeAck(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:common.FundsChangeAck)
}
FundsChangeAck::FundsChangeAck(
    ::google::protobuf::Arena* arena,
    const FundsChangeAck& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FundsChangeAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:common.FundsChangeAck)
}

const ::google::protobuf::MessageLite::ClassData*
FundsChangeAck::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FundsChangeAck, _impl_._cached_size_),
              false,
          },
          &FundsChangeAck::MergeImpl,
          &FundsChangeAck::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> FundsChangeAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FundsChangeAck_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::FundsChangeAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata FundsChangeAck::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FundsChangeNack::_Internal {
 public:
};

FundsChangeNack::FundsChangeNack(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.FundsChangeNack)
}
inline PROTOBUF_NDEBUG_INLINE FundsChangeNack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::FundsChangeNack& from_msg)
      : other_(arena, from.other_),
        _cached_size_{0} {}

FundsChangeNack::FundsChangeNack(
    ::google::protobuf::Arena* arena,
    const FundsChangeNack& from)
    : ::google::protobuf::Message(arena) {
  FundsChangeNack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.rejection_reason_ = from._impl_.rejection_reason_;

  // @@protoc_insertion_point(copy_constructor:common.FundsChangeNack)
}
inline PROTOBUF_NDEBUG_INLINE FundsChangeNack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : other_(arena),
        _cached_size_{0} {}

inline void FundsChangeNack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rejection_reason_ = {};
}
FundsChangeNack::~FundsChangeNack() {
  // @@protoc_insertion_point(destructor:common.FundsChangeNack)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FundsChangeNack::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.other_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FundsChangeNack::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FundsChangeNack, _impl_._cached_size_),
              false,
          },
          &FundsChangeNack::MergeImpl,
          &FundsChangeNack::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> FundsChangeNack::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FundsChangeNack_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::FundsChangeNack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string other = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FundsChangeNack, _impl_.other_)}},
    // .common.FundsChangeNack.RejectionReason rejection_reason = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FundsChangeNack, _impl_.rejection_reason_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FundsChangeNack, _impl_.rejection_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.FundsChangeNack.RejectionReason rejection_reason = 1;
    {PROTOBUF_FIELD_OFFSET(FundsChangeNack, _impl_.rejection_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string other = 2;
    {PROTOBUF_FIELD_OFFSET(FundsChangeNack, _impl_.other_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\5\0\0\0\0\0"
    "common.FundsChangeNack"
    "other"
  }},
};

PROTOBUF_NOINLINE void FundsChangeNack::Clear() {
// @@protoc_insertion_point(message_clear_start:common.FundsChangeNack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.other_.ClearToEmpty();
  _impl_.rejection_reason_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* FundsChangeNack::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.FundsChangeNack)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .common.FundsChangeNack.RejectionReason rejection_reason = 1;
  if (this->_internal_rejection_reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_rejection_reason(), target);
  }

  // string other = 2;
  if (!this->_internal_other().empty()) {
    const std::string& _s = this->_internal_other();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.FundsChangeNack.other");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.FundsChangeNack)
  return target;
}

::size_t FundsChangeNack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.FundsChangeNack)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string other = 2;
  if (!this->_internal_other().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_other());
  }

  // .common.FundsChangeNack.RejectionReason rejection_reason = 1;
  if (this->_internal_rejection_reason() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_rejection_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FundsChangeNack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FundsChangeNack*>(&to_msg);
  auto& from = static_cast<const FundsChangeNack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.FundsChangeNack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_other().empty()) {
    _this->_internal_set_other(from._internal_other());
  }
  if (from._internal_rejection_reason() != 0) {
    _this->_impl_.rejection_reason_ = from._impl_.rejection_reason_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FundsChangeNack::CopyFrom(const FundsChangeNack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.FundsChangeNack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FundsChangeNack::InternalSwap(FundsChangeNack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.other_, &other->_impl_.other_, arena);
  swap(_impl_.rejection_reason_, other->_impl_.rejection_reason_);
}

::google::protobuf::Metadata FundsChangeNack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelTransaction::_Internal {
 public:
};

CancelTransaction::CancelTransaction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.CancelTransaction)
}
inline PROTOBUF_NDEBUG_INLINE CancelTransaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::CancelTransaction& from_msg)
      : other_(arena, from.other_),
        _cached_size_{0} {}

CancelTransaction::CancelTransaction(
    ::google::protobuf::Arena* arena,
    const CancelTransaction& from)
    : ::google::protobuf::Message(arena) {
  CancelTransaction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.rejection_reason_ = from._impl_.rejection_reason_;

  // @@protoc_insertion_point(copy_constructor:common.CancelTransaction)
}
inline PROTOBUF_NDEBUG_INLINE CancelTransaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : other_(arena),
        _cached_size_{0} {}

inline void CancelTransaction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rejection_reason_ = {};
}
CancelTransaction::~CancelTransaction() {
  // @@protoc_insertion_point(destructor:common.CancelTransaction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CancelTransaction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.other_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CancelTransaction::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CancelTransaction, _impl_._cached_size_),
              false,
          },
          &CancelTransaction::MergeImpl,
          &CancelTransaction::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> CancelTransaction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CancelTransaction_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::CancelTransaction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string other = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelTransaction, _impl_.other_)}},
    // .common.CancelTransaction.RejectionReason rejection_reason = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CancelTransaction, _impl_.rejection_reason_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CancelTransaction, _impl_.rejection_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.CancelTransaction.RejectionReason rejection_reason = 1;
    {PROTOBUF_FIELD_OFFSET(CancelTransaction, _impl_.rejection_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string other = 2;
    {PROTOBUF_FIELD_OFFSET(CancelTransaction, _impl_.other_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\5\0\0\0\0\0"
    "common.CancelTransaction"
    "other"
  }},
};

PROTOBUF_NOINLINE void CancelTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:common.CancelTransaction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.other_.ClearToEmpty();
  _impl_.rejection_reason_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CancelTransaction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.CancelTransaction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .common.CancelTransaction.RejectionReason rejection_reason = 1;
  if (this->_internal_rejection_reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_rejection_reason(), target);
  }

  // string other = 2;
  if (!this->_internal_other().empty()) {
    const std::string& _s = this->_internal_other();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.CancelTransaction.other");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.CancelTransaction)
  return target;
}

::size_t CancelTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.CancelTransaction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string other = 2;
  if (!this->_internal_other().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_other());
  }

  // .common.CancelTransaction.RejectionReason rejection_reason = 1;
  if (this->_internal_rejection_reason() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_rejection_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CancelTransaction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelTransaction*>(&to_msg);
  auto& from = static_cast<const CancelTransaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.CancelTransaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_other().empty()) {
    _this->_internal_set_other(from._internal_other());
  }
  if (from._internal_rejection_reason() != 0) {
    _this->_impl_.rejection_reason_ = from._impl_.rejection_reason_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelTransaction::CopyFrom(const CancelTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.CancelTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelTransaction::InternalSwap(CancelTransaction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.other_, &other->_impl_.other_, arena);
  swap(_impl_.rejection_reason_, other->_impl_.rejection_reason_);
}

::google::protobuf::Metadata CancelTransaction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Commitment::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Commitment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Commitment, _impl_._has_bits_);
};

void Commitment::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Commitment::Commitment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.Commitment)
}
inline PROTOBUF_NDEBUG_INLINE Commitment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::Commitment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sender_(arena, from.sender_),
        recipient_(arena, from.recipient_) {}

Commitment::Commitment(
    ::google::protobuf::Arena* arena,
    const Commitment& from)
    : ::google::protobuf::Message(arena) {
  Commitment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.amount_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::Amount>(
                              arena, *from._impl_.amount_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:common.Commitment)
}
inline PROTOBUF_NDEBUG_INLINE Commitment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sender_(arena),
        recipient_(arena) {}

inline void Commitment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
Commitment::~Commitment() {
  // @@protoc_insertion_point(destructor:common.Commitment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Commitment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.recipient_.Destroy();
  delete _impl_.amount_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Commitment::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Commitment, _impl_._cached_size_),
              false,
          },
          &Commitment::MergeImpl,
          &Commitment::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 41, 2> Commitment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Commitment, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Commitment_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::Commitment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sender = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Commitment, _impl_.sender_)}},
    // string recipient = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Commitment, _impl_.recipient_)}},
    // .common.Amount amount = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Commitment, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sender = 1;
    {PROTOBUF_FIELD_OFFSET(Commitment, _impl_.sender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient = 2;
    {PROTOBUF_FIELD_OFFSET(Commitment, _impl_.recipient_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .common.Amount amount = 3;
    {PROTOBUF_FIELD_OFFSET(Commitment, _impl_.amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Amount>()},
  }}, {{
    "\21\6\11\0\0\0\0\0"
    "common.Commitment"
    "sender"
    "recipient"
  }},
};

PROTOBUF_NOINLINE void Commitment::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Commitment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.recipient_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Commitment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.Commitment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Commitment.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string recipient = 2;
  if (!this->_internal_recipient().empty()) {
    const std::string& _s = this->_internal_recipient();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Commitment.recipient");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .common.Amount amount = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.amount_, _impl_.amount_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Commitment)
  return target;
}

::size_t Commitment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Commitment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string recipient = 2;
  if (!this->_internal_recipient().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_recipient());
  }

  // .common.Amount amount = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Commitment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Commitment*>(&to_msg);
  auto& from = static_cast<const Commitment&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.Commitment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.amount_ != nullptr);
    if (_this->_impl_.amount_ == nullptr) {
      _this->_impl_.amount_ =
          ::google::protobuf::Message::CopyConstruct<::common::Amount>(arena, *from._impl_.amount_);
    } else {
      _this->_impl_.amount_->MergeFrom(*from._impl_.amount_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Commitment::CopyFrom(const Commitment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Commitment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Commitment::InternalSwap(Commitment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata Commitment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimeoutCondition::_Internal {
 public:
};

TimeoutCondition::TimeoutCondition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.TimeoutCondition)
}
TimeoutCondition::TimeoutCondition(
    ::google::protobuf::Arena* arena, const TimeoutCondition& from)
    : TimeoutCondition(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TimeoutCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TimeoutCondition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timeout_ = {};
}
TimeoutCondition::~TimeoutCondition() {
  // @@protoc_insertion_point(destructor:common.TimeoutCondition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeoutCondition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TimeoutCondition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TimeoutCondition, _impl_._cached_size_),
              false,
          },
          &TimeoutCondition::MergeImpl,
          &TimeoutCondition::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TimeoutCondition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TimeoutCondition_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::TimeoutCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timeout = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeoutCondition, _impl_.timeout_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TimeoutCondition, _impl_.timeout_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timeout = 1;
    {PROTOBUF_FIELD_OFFSET(TimeoutCondition, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TimeoutCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:common.TimeoutCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timeout_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TimeoutCondition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.TimeoutCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 timeout = 1;
  if (this->_internal_timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.TimeoutCondition)
  return target;
}

::size_t TimeoutCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.TimeoutCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 timeout = 1;
  if (this->_internal_timeout() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timeout());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TimeoutCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimeoutCondition*>(&to_msg);
  auto& from = static_cast<const TimeoutCondition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.TimeoutCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timeout() != 0) {
    _this->_impl_.timeout_ = from._impl_.timeout_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeoutCondition::CopyFrom(const TimeoutCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.TimeoutCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimeoutCondition::InternalSwap(TimeoutCondition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.timeout_, other->_impl_.timeout_);
}

::google::protobuf::Metadata TimeoutCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HashCondition::_Internal {
 public:
};

HashCondition::HashCondition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.HashCondition)
}
inline PROTOBUF_NDEBUG_INLINE HashCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::HashCondition& from_msg)
      : presenter_(arena, from.presenter_),
        hash_(arena, from.hash_),
        algorithm_oid_(arena, from.algorithm_oid_),
        _cached_size_{0} {}

HashCondition::HashCondition(
    ::google::protobuf::Arena* arena,
    const HashCondition& from)
    : ::google::protobuf::Message(arena) {
  HashCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:common.HashCondition)
}
inline PROTOBUF_NDEBUG_INLINE HashCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : presenter_(arena),
        hash_(arena),
        algorithm_oid_(arena),
        _cached_size_{0} {}

inline void HashCondition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HashCondition::~HashCondition() {
  // @@protoc_insertion_point(destructor:common.HashCondition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HashCondition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.presenter_.Destroy();
  _impl_.hash_.Destroy();
  _impl_.algorithm_oid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HashCondition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HashCondition, _impl_._cached_size_),
              false,
          },
          &HashCondition::MergeImpl,
          &HashCondition::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 38, 2> HashCondition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HashCondition_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::HashCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string presenter = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HashCondition, _impl_.presenter_)}},
    // bytes hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HashCondition, _impl_.hash_)}},
    // bytes algorithm_oid = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HashCondition, _impl_.algorithm_oid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string presenter = 1;
    {PROTOBUF_FIELD_OFFSET(HashCondition, _impl_.presenter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes hash = 2;
    {PROTOBUF_FIELD_OFFSET(HashCondition, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes algorithm_oid = 3;
    {PROTOBUF_FIELD_OFFSET(HashCondition, _impl_.algorithm_oid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\11\0\0\0\0\0\0"
    "common.HashCondition"
    "presenter"
  }},
};

PROTOBUF_NOINLINE void HashCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:common.HashCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.presenter_.ClearToEmpty();
  _impl_.hash_.ClearToEmpty();
  _impl_.algorithm_oid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HashCondition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.HashCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string presenter = 1;
  if (!this->_internal_presenter().empty()) {
    const std::string& _s = this->_internal_presenter();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.HashCondition.presenter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes hash = 2;
  if (!this->_internal_hash().empty()) {
    const std::string& _s = this->_internal_hash();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes algorithm_oid = 3;
  if (!this->_internal_algorithm_oid().empty()) {
    const std::string& _s = this->_internal_algorithm_oid();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.HashCondition)
  return target;
}

::size_t HashCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.HashCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string presenter = 1;
  if (!this->_internal_presenter().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_presenter());
  }

  // bytes hash = 2;
  if (!this->_internal_hash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_hash());
  }

  // bytes algorithm_oid = 3;
  if (!this->_internal_algorithm_oid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_algorithm_oid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HashCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HashCondition*>(&to_msg);
  auto& from = static_cast<const HashCondition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.HashCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_presenter().empty()) {
    _this->_internal_set_presenter(from._internal_presenter());
  }
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_algorithm_oid().empty()) {
    _this->_internal_set_algorithm_oid(from._internal_algorithm_oid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HashCondition::CopyFrom(const HashCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.HashCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HashCondition::InternalSwap(HashCondition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.presenter_, &other->_impl_.presenter_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.algorithm_oid_, &other->_impl_.algorithm_oid_, arena);
}

::google::protobuf::Metadata HashCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MintCondition::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MintCondition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MintCondition, _impl_._has_bits_);
};

void MintCondition::clear_distribution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.distribution_ != nullptr) _impl_.distribution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MintCondition::MintCondition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.MintCondition)
}
inline PROTOBUF_NDEBUG_INLINE MintCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::MintCondition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        issuer_(arena, from.issuer_) {}

MintCondition::MintCondition(
    ::google::protobuf::Arena* arena,
    const MintCondition& from)
    : ::google::protobuf::Message(arena) {
  MintCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.distribution_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::Distribution>(
                              arena, *from._impl_.distribution_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:common.MintCondition)
}
inline PROTOBUF_NDEBUG_INLINE MintCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        issuer_(arena) {}

inline void MintCondition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.distribution_ = {};
}
MintCondition::~MintCondition() {
  // @@protoc_insertion_point(destructor:common.MintCondition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MintCondition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.issuer_.Destroy();
  delete _impl_.distribution_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MintCondition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MintCondition, _impl_._cached_size_),
              false,
          },
          &MintCondition::MergeImpl,
          &MintCondition::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> MintCondition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MintCondition, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MintCondition_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::MintCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .common.Distribution distribution = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MintCondition, _impl_.distribution_)}},
    // string issuer = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MintCondition, _impl_.issuer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string issuer = 1;
    {PROTOBUF_FIELD_OFFSET(MintCondition, _impl_.issuer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .common.Distribution distribution = 2;
    {PROTOBUF_FIELD_OFFSET(MintCondition, _impl_.distribution_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Distribution>()},
  }}, {{
    "\24\6\0\0\0\0\0\0"
    "common.MintCondition"
    "issuer"
  }},
};

PROTOBUF_NOINLINE void MintCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:common.MintCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.issuer_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.distribution_ != nullptr);
    _impl_.distribution_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MintCondition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.MintCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string issuer = 1;
  if (!this->_internal_issuer().empty()) {
    const std::string& _s = this->_internal_issuer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.MintCondition.issuer");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .common.Distribution distribution = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.distribution_, _impl_.distribution_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.MintCondition)
  return target;
}

::size_t MintCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.MintCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string issuer = 1;
  if (!this->_internal_issuer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_issuer());
  }

  // .common.Distribution distribution = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.distribution_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MintCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MintCondition*>(&to_msg);
  auto& from = static_cast<const MintCondition&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.MintCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_issuer().empty()) {
    _this->_internal_set_issuer(from._internal_issuer());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.distribution_ != nullptr);
    if (_this->_impl_.distribution_ == nullptr) {
      _this->_impl_.distribution_ =
          ::google::protobuf::Message::CopyConstruct<::common::Distribution>(arena, *from._impl_.distribution_);
    } else {
      _this->_impl_.distribution_->MergeFrom(*from._impl_.distribution_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MintCondition::CopyFrom(const MintCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.MintCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MintCondition::InternalSwap(MintCondition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.issuer_, &other->_impl_.issuer_, arena);
  swap(_impl_.distribution_, other->_impl_.distribution_);
}

::google::protobuf::Metadata MintCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RedeemCondition::_Internal {
 public:
};

RedeemCondition::RedeemCondition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.RedeemCondition)
}
inline PROTOBUF_NDEBUG_INLINE RedeemCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::RedeemCondition& from_msg)
      : issuer_(arena, from.issuer_),
        _cached_size_{0} {}

RedeemCondition::RedeemCondition(
    ::google::protobuf::Arena* arena,
    const RedeemCondition& from)
    : ::google::protobuf::Message(arena) {
  RedeemCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:common.RedeemCondition)
}
inline PROTOBUF_NDEBUG_INLINE RedeemCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : issuer_(arena),
        _cached_size_{0} {}

inline void RedeemCondition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RedeemCondition::~RedeemCondition() {
  // @@protoc_insertion_point(destructor:common.RedeemCondition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RedeemCondition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.issuer_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RedeemCondition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RedeemCondition, _impl_._cached_size_),
              false,
          },
          &RedeemCondition::MergeImpl,
          &RedeemCondition::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> RedeemCondition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RedeemCondition_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::RedeemCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string issuer = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RedeemCondition, _impl_.issuer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string issuer = 1;
    {PROTOBUF_FIELD_OFFSET(RedeemCondition, _impl_.issuer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\6\0\0\0\0\0\0"
    "common.RedeemCondition"
    "issuer"
  }},
};

PROTOBUF_NOINLINE void RedeemCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:common.RedeemCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.issuer_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RedeemCondition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.RedeemCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string issuer = 1;
  if (!this->_internal_issuer().empty()) {
    const std::string& _s = this->_internal_issuer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.RedeemCondition.issuer");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.RedeemCondition)
  return target;
}

::size_t RedeemCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.RedeemCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string issuer = 1;
  if (!this->_internal_issuer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_issuer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RedeemCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RedeemCondition*>(&to_msg);
  auto& from = static_cast<const RedeemCondition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.RedeemCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_issuer().empty()) {
    _this->_internal_set_issuer(from._internal_issuer());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedeemCondition::CopyFrom(const RedeemCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.RedeemCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RedeemCondition::InternalSwap(RedeemCondition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.issuer_, &other->_impl_.issuer_, arena);
}

::google::protobuf::Metadata RedeemCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Condition::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::common::Condition, _impl_._oneof_case_);
};

void Condition::set_allocated_timeout(::common::TimeoutCondition* timeout) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_condition();
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = timeout->GetArena();
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(message_arena, timeout, submessage_arena);
    }
    set_has_timeout();
    _impl_.condition_.timeout_ = timeout;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Condition.timeout)
}
void Condition::set_allocated_hash(::common::HashCondition* hash) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_condition();
  if (hash) {
    ::google::protobuf::Arena* submessage_arena = hash->GetArena();
    if (message_arena != submessage_arena) {
      hash = ::google::protobuf::internal::GetOwnedMessage(message_arena, hash, submessage_arena);
    }
    set_has_hash();
    _impl_.condition_.hash_ = hash;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Condition.hash)
}
void Condition::set_allocated_mint(::common::MintCondition* mint) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_condition();
  if (mint) {
    ::google::protobuf::Arena* submessage_arena = mint->GetArena();
    if (message_arena != submessage_arena) {
      mint = ::google::protobuf::internal::GetOwnedMessage(message_arena, mint, submessage_arena);
    }
    set_has_mint();
    _impl_.condition_.mint_ = mint;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Condition.mint)
}
void Condition::set_allocated_redeem(::common::RedeemCondition* redeem) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_condition();
  if (redeem) {
    ::google::protobuf::Arena* submessage_arena = redeem->GetArena();
    if (message_arena != submessage_arena) {
      redeem = ::google::protobuf::internal::GetOwnedMessage(message_arena, redeem, submessage_arena);
    }
    set_has_redeem();
    _impl_.condition_.redeem_ = redeem;
  }
  // @@protoc_insertion_point(field_set_allocated:common.Condition.redeem)
}
Condition::Condition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.Condition)
}
inline PROTOBUF_NDEBUG_INLINE Condition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::Condition& from_msg)
      : condition_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Condition::Condition(
    ::google::protobuf::Arena* arena,
    const Condition& from)
    : ::google::protobuf::Message(arena) {
  Condition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (condition_case()) {
    case CONDITION_NOT_SET:
      break;
      case kTimeout:
        _impl_.condition_.timeout_ = ::google::protobuf::Message::CopyConstruct<::common::TimeoutCondition>(arena, *from._impl_.condition_.timeout_);
        break;
      case kHash:
        _impl_.condition_.hash_ = ::google::protobuf::Message::CopyConstruct<::common::HashCondition>(arena, *from._impl_.condition_.hash_);
        break;
      case kMint:
        _impl_.condition_.mint_ = ::google::protobuf::Message::CopyConstruct<::common::MintCondition>(arena, *from._impl_.condition_.mint_);
        break;
      case kRedeem:
        _impl_.condition_.redeem_ = ::google::protobuf::Message::CopyConstruct<::common::RedeemCondition>(arena, *from._impl_.condition_.redeem_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:common.Condition)
}
inline PROTOBUF_NDEBUG_INLINE Condition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : condition_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Condition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Condition::~Condition() {
  // @@protoc_insertion_point(destructor:common.Condition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Condition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_condition()) {
    clear_condition();
  }
  _impl_.~Impl_();
}

void Condition::clear_condition() {
// @@protoc_insertion_point(one_of_clear_start:common.Condition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (condition_case()) {
    case kTimeout: {
      if (GetArena() == nullptr) {
        delete _impl_.condition_.timeout_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.timeout_);
      }
      break;
    }
    case kHash: {
      if (GetArena() == nullptr) {
        delete _impl_.condition_.hash_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.hash_);
      }
      break;
    }
    case kMint: {
      if (GetArena() == nullptr) {
        delete _impl_.condition_.mint_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.mint_);
      }
      break;
    }
    case kRedeem: {
      if (GetArena() == nullptr) {
        delete _impl_.condition_.redeem_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.redeem_);
      }
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONDITION_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Condition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Condition, _impl_._cached_size_),
              false,
          },
          &Condition::MergeImpl,
          &Condition::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> Condition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Condition_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::Condition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .common.TimeoutCondition timeout = 1;
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.condition_.timeout_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.HashCondition hash = 2;
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.condition_.hash_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.MintCondition mint = 3;
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.condition_.mint_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.RedeemCondition redeem = 4;
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.condition_.redeem_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::TimeoutCondition>()},
    {::_pbi::TcParser::GetTable<::common::HashCondition>()},
    {::_pbi::TcParser::GetTable<::common::MintCondition>()},
    {::_pbi::TcParser::GetTable<::common::RedeemCondition>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Condition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_condition();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Condition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.Condition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (condition_case()) {
    case kTimeout: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.condition_.timeout_, _impl_.condition_.timeout_->GetCachedSize(), target, stream);
      break;
    }
    case kHash: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.condition_.hash_, _impl_.condition_.hash_->GetCachedSize(), target, stream);
      break;
    }
    case kMint: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.condition_.mint_, _impl_.condition_.mint_->GetCachedSize(), target, stream);
      break;
    }
    case kRedeem: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.condition_.redeem_, _impl_.condition_.redeem_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Condition)
  return target;
}

::size_t Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Condition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (condition_case()) {
    // .common.TimeoutCondition timeout = 1;
    case kTimeout: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.condition_.timeout_);
      break;
    }
    // .common.HashCondition hash = 2;
    case kHash: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.condition_.hash_);
      break;
    }
    // .common.MintCondition mint = 3;
    case kMint: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.condition_.mint_);
      break;
    }
    // .common.RedeemCondition redeem = 4;
    case kRedeem: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.condition_.redeem_);
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Condition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Condition*>(&to_msg);
  auto& from = static_cast<const Condition&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.Condition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_condition();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTimeout: {
        if (oneof_needs_init) {
          _this->_impl_.condition_.timeout_ =
              ::google::protobuf::Message::CopyConstruct<::common::TimeoutCondition>(arena, *from._impl_.condition_.timeout_);
        } else {
          _this->_impl_.condition_.timeout_->MergeFrom(from._internal_timeout());
        }
        break;
      }
      case kHash: {
        if (oneof_needs_init) {
          _this->_impl_.condition_.hash_ =
              ::google::protobuf::Message::CopyConstruct<::common::HashCondition>(arena, *from._impl_.condition_.hash_);
        } else {
          _this->_impl_.condition_.hash_->MergeFrom(from._internal_hash());
        }
        break;
      }
      case kMint: {
        if (oneof_needs_init) {
          _this->_impl_.condition_.mint_ =
              ::google::protobuf::Message::CopyConstruct<::common::MintCondition>(arena, *from._impl_.condition_.mint_);
        } else {
          _this->_impl_.condition_.mint_->MergeFrom(from._internal_mint());
        }
        break;
      }
      case kRedeem: {
        if (oneof_needs_init) {
          _this->_impl_.condition_.redeem_ =
              ::google::protobuf::Message::CopyConstruct<::common::RedeemCondition>(arena, *from._impl_.condition_.redeem_);
        } else {
          _this->_impl_.condition_.redeem_->MergeFrom(from._internal_redeem());
        }
        break;
      }
      case CONDITION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Condition::CopyFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Condition::InternalSwap(Condition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.condition_, other->_impl_.condition_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

Contract_SignatoriesEntry_DoNotUse::Contract_SignatoriesEntry_DoNotUse() {}
Contract_SignatoriesEntry_DoNotUse::Contract_SignatoriesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
Contract_SignatoriesEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Contract_SignatoriesEntry_DoNotUse, _cached_size_),
              false,
          },
          &Contract_SignatoriesEntry_DoNotUse::MergeImpl,
          &Contract_SignatoriesEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class Contract::_Internal {
 public:
};

Contract::Contract(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.Contract)
}
inline PROTOBUF_NDEBUG_INLINE Contract::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::Contract& from_msg)
      : commitments_{visibility, arena, from.commitments_},
        conditions_{visibility, arena, from.conditions_},
        signatories_{visibility, arena, from.signatories_},
        urn_(arena, from.urn_),
        id_(arena, from.id_),
        memo_(arena, from.memo_),
        _cached_size_{0} {}

Contract::Contract(
    ::google::protobuf::Arena* arena,
    const Contract& from)
    : ::google::protobuf::Message(arena) {
  Contract* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:common.Contract)
}
inline PROTOBUF_NDEBUG_INLINE Contract::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : commitments_{visibility, arena},
        conditions_{visibility, arena},
        signatories_{visibility, arena},
        urn_(arena),
        id_(arena),
        memo_(arena),
        _cached_size_{0} {}

inline void Contract::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Contract::~Contract() {
  // @@protoc_insertion_point(destructor:common.Contract)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Contract::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.urn_.Destroy();
  _impl_.id_.Destroy();
  _impl_.memo_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Contract::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Contract, _impl_._cached_size_),
              false,
          },
          &Contract::MergeImpl,
          &Contract::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 44, 2> Contract::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Contract_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::Contract>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string urn = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Contract, _impl_.urn_)}},
    // string id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Contract, _impl_.id_)}},
    // repeated .common.Commitment commitments = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Contract, _impl_.commitments_)}},
    // repeated .common.Condition conditions = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(Contract, _impl_.conditions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string memo = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Contract, _impl_.memo_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string urn = 1;
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.urn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 2;
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .common.Commitment commitments = 3;
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.commitments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .common.Condition conditions = 4;
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.conditions_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, bytes> signatories = 5;
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.signatories_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string memo = 6;
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.memo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Commitment>()},
    {::_pbi::TcParser::GetTable<::common::Condition>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Contract()._impl_.signatories_)>(
        1, 0, 0, 9,
        12)},
  }}, {{
    "\17\3\2\0\0\13\4\0"
    "common.Contract"
    "urn"
    "id"
    "signatories"
    "memo"
  }},
};

PROTOBUF_NOINLINE void Contract::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Contract)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitments_.Clear();
  _impl_.conditions_.Clear();
  _impl_.signatories_.Clear();
  _impl_.urn_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.memo_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Contract::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.Contract)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string urn = 1;
  if (!this->_internal_urn().empty()) {
    const std::string& _s = this->_internal_urn();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Contract.urn");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Contract.id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .common.Commitment commitments = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_commitments_size());
       i < n; i++) {
    const auto& repfield = this->_internal_commitments().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .common.Condition conditions = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_conditions_size());
       i < n; i++) {
    const auto& repfield = this->_internal_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, bytes> signatories = 5;
  if (!_internal_signatories().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BYTES>;
    const auto& field = _internal_signatories();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Contract.signatories");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Contract.signatories");
      }
    }
  }

  // string memo = 6;
  if (!this->_internal_memo().empty()) {
    const std::string& _s = this->_internal_memo();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.Contract.memo");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Contract)
  return target;
}

::size_t Contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Contract)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .common.Commitment commitments = 3;
  total_size += 1UL * this->_internal_commitments_size();
  for (const auto& msg : this->_internal_commitments()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .common.Condition conditions = 4;
  total_size += 1UL * this->_internal_conditions_size();
  for (const auto& msg : this->_internal_conditions()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, bytes> signatories = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_signatories_size());
  for (const auto& entry : _internal_signatories()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BYTES>::ByteSizeLong(entry.first, entry.second);
  }
  // string urn = 1;
  if (!this->_internal_urn().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_urn());
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string memo = 6;
  if (!this->_internal_memo().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_memo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Contract::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Contract*>(&to_msg);
  auto& from = static_cast<const Contract&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common.Contract)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_commitments()->MergeFrom(
      from._internal_commitments());
  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  _this->_impl_.signatories_.MergeFrom(from._impl_.signatories_);
  if (!from._internal_urn().empty()) {
    _this->_internal_set_urn(from._internal_urn());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_memo().empty()) {
    _this->_internal_set_memo(from._internal_memo());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Contract::CopyFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Contract::InternalSwap(Contract* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.commitments_.InternalSwap(&other->_impl_.commitments_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  _impl_.signatories_.InternalSwap(&other->_impl_.signatories_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.urn_, &other->_impl_.urn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memo_, &other->_impl_.memo_, arena);
}

::google::protobuf::Metadata Contract::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AssociatedUetrConnection::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AssociatedUetrConnection>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_._has_bits_);
};

AssociatedUetrConnection::AssociatedUetrConnection(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common.AssociatedUetrConnection)
}
inline PROTOBUF_NDEBUG_INLINE AssociatedUetrConnection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common::AssociatedUetrConnection& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uetr_(arena, from.uetr_) {}

AssociatedUetrConnection::AssociatedUetrConnection(
    ::google::protobuf::Arena* arena,
    const AssociatedUetrConnection& from)
    : ::google::protobuf::Message(arena) {
  AssociatedUetrConnection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.packet_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::common::Packet>(
                              arena, *from._impl_.packet_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:common.AssociatedUetrConnection)
}
inline PROTOBUF_NDEBUG_INLINE AssociatedUetrConnection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uetr_(arena) {}

inline void AssociatedUetrConnection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.packet_ = {};
}
AssociatedUetrConnection::~AssociatedUetrConnection() {
  // @@protoc_insertion_point(destructor:common.AssociatedUetrConnection)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssociatedUetrConnection::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uetr_.Destroy();
  delete _impl_.packet_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AssociatedUetrConnection::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_._cached_size_),
              false,
          },
          &AssociatedUetrConnection::MergeImpl,
          &AssociatedUetrConnection::kDescriptorMethods,
          &descriptor_table_common_2fv1_2fpacket_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 44, 2> AssociatedUetrConnection::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AssociatedUetrConnection_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common::AssociatedUetrConnection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .common.Packet packet = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_.packet_)}},
    // string uetr = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_.uetr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uetr = 1;
    {PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_.uetr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .common.Packet packet = 2;
    {PROTOBUF_FIELD_OFFSET(AssociatedUetrConnection, _impl_.packet_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::common::Packet>()},
  }}, {{
    "\37\4\0\0\0\0\0\0"
    "common.AssociatedUetrConnection"
    "uetr"
  }},
};

PROTOBUF_NOINLINE void AssociatedUetrConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:common.AssociatedUetrConnection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uetr_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.packet_ != nullptr);
    _impl_.packet_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AssociatedUetrConnection::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.AssociatedUetrConnection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string uetr = 1;
  if (!this->_internal_uetr().empty()) {
    const std::string& _s = this->_internal_uetr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "common.AssociatedUetrConnection.uetr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .common.Packet packet = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.packet_, _impl_.packet_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.AssociatedUetrConnection)
  return target;
}

::size_t AssociatedUetrConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.AssociatedUetrConnection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string uetr = 1;
  if (!this->_internal_uetr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uetr());
  }

  // optional .common.Packet packet = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.packet_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AssociatedUetrConnection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssociatedUetrConnection*>(&to_msg);
  auto& from = static_cast<const AssociatedUetrConnection&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:common.AssociatedUetrConnection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uetr().empty()) {
    _this->_internal_set_uetr(from._internal_uetr());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.packet_ != nullptr);
    if (_this->_impl_.packet_ == nullptr) {
      _this->_impl_.packet_ =
          ::google::protobuf::Message::CopyConstruct<::common::Packet>(arena, *from._impl_.packet_);
    } else {
      _this->_impl_.packet_->MergeFrom(*from._impl_.packet_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssociatedUetrConnection::CopyFrom(const AssociatedUetrConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.AssociatedUetrConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AssociatedUetrConnection::InternalSwap(AssociatedUetrConnection* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uetr_, &other->_impl_.uetr_, arena);
  swap(_impl_.packet_, other->_impl_.packet_);
}

::google::protobuf::Metadata AssociatedUetrConnection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_2fv1_2fpacket_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
