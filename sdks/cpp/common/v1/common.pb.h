// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/v1/common.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fv1_2fcommon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fv1_2fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fv1_2fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fv1_2fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fv1_2fcommon_2eproto;
namespace common {
class Amount;
struct AmountDefaultTypeInternal;
extern AmountDefaultTypeInternal _Amount_default_instance_;
class AssetAuthority;
struct AssetAuthorityDefaultTypeInternal;
extern AssetAuthorityDefaultTypeInternal _AssetAuthority_default_instance_;
class AssetDenomination;
struct AssetDenominationDefaultTypeInternal;
extern AssetDenominationDefaultTypeInternal _AssetDenomination_default_instance_;
class AssociatedVerifierConnection;
struct AssociatedVerifierConnectionDefaultTypeInternal;
extern AssociatedVerifierConnectionDefaultTypeInternal _AssociatedVerifierConnection_default_instance_;
class AuthenticationRequest;
struct AuthenticationRequestDefaultTypeInternal;
extern AuthenticationRequestDefaultTypeInternal _AuthenticationRequest_default_instance_;
class AuthenticationResponse;
struct AuthenticationResponseDefaultTypeInternal;
extern AuthenticationResponseDefaultTypeInternal _AuthenticationResponse_default_instance_;
class AuthenticationSignature;
struct AuthenticationSignatureDefaultTypeInternal;
extern AuthenticationSignatureDefaultTypeInternal _AuthenticationSignature_default_instance_;
class AuthorizedSignatureResponse;
struct AuthorizedSignatureResponseDefaultTypeInternal;
extern AuthorizedSignatureResponseDefaultTypeInternal _AuthorizedSignatureResponse_default_instance_;
class ConnectionRequest;
struct ConnectionRequestDefaultTypeInternal;
extern ConnectionRequestDefaultTypeInternal _ConnectionRequest_default_instance_;
class Distribution;
struct DistributionDefaultTypeInternal;
extern DistributionDefaultTypeInternal _Distribution_default_instance_;
class Distribution_ValueEntry_DoNotUse;
struct Distribution_ValueEntry_DoNotUseDefaultTypeInternal;
extern Distribution_ValueEntry_DoNotUseDefaultTypeInternal _Distribution_ValueEntry_DoNotUse_default_instance_;
class DynamicVerifier;
struct DynamicVerifierDefaultTypeInternal;
extern DynamicVerifierDefaultTypeInternal _DynamicVerifier_default_instance_;
class Filter;
struct FilterDefaultTypeInternal;
extern FilterDefaultTypeInternal _Filter_default_instance_;
class FilterItem;
struct FilterItemDefaultTypeInternal;
extern FilterItemDefaultTypeInternal _FilterItem_default_instance_;
class GetInstanceRequest;
struct GetInstanceRequestDefaultTypeInternal;
extern GetInstanceRequestDefaultTypeInternal _GetInstanceRequest_default_instance_;
class GetInstanceResponse;
struct GetInstanceResponseDefaultTypeInternal;
extern GetInstanceResponseDefaultTypeInternal _GetInstanceResponse_default_instance_;
class GetServiceTypeRequest;
struct GetServiceTypeRequestDefaultTypeInternal;
extern GetServiceTypeRequestDefaultTypeInternal _GetServiceTypeRequest_default_instance_;
class GetServiceTypeResponse;
struct GetServiceTypeResponseDefaultTypeInternal;
extern GetServiceTypeResponseDefaultTypeInternal _GetServiceTypeResponse_default_instance_;
class GetVerifierRequest;
struct GetVerifierRequestDefaultTypeInternal;
extern GetVerifierRequestDefaultTypeInternal _GetVerifierRequest_default_instance_;
class GetVerifierResponse;
struct GetVerifierResponseDefaultTypeInternal;
extern GetVerifierResponseDefaultTypeInternal _GetVerifierResponse_default_instance_;
class ManyUetrConnection;
struct ManyUetrConnectionDefaultTypeInternal;
extern ManyUetrConnectionDefaultTypeInternal _ManyUetrConnection_default_instance_;
class ManyVerifierConnection;
struct ManyVerifierConnectionDefaultTypeInternal;
extern ManyVerifierConnectionDefaultTypeInternal _ManyVerifierConnection_default_instance_;
class Media;
struct MediaDefaultTypeInternal;
extern MediaDefaultTypeInternal _Media_default_instance_;
class OneConnection;
struct OneConnectionDefaultTypeInternal;
extern OneConnectionDefaultTypeInternal _OneConnection_default_instance_;
class Role;
struct RoleDefaultTypeInternal;
extern RoleDefaultTypeInternal _Role_default_instance_;
class Role_IssuePermissions;
struct Role_IssuePermissionsDefaultTypeInternal;
extern Role_IssuePermissionsDefaultTypeInternal _Role_IssuePermissions_default_instance_;
class SortBy;
struct SortByDefaultTypeInternal;
extern SortByDefaultTypeInternal _SortBy_default_instance_;
class SortItem;
struct SortItemDefaultTypeInternal;
extern SortItemDefaultTypeInternal _SortItem_default_instance_;
class StartFundsChangeRequest;
struct StartFundsChangeRequestDefaultTypeInternal;
extern StartFundsChangeRequestDefaultTypeInternal _StartFundsChangeRequest_default_instance_;
class StartFundsChangeResponse;
struct StartFundsChangeResponseDefaultTypeInternal;
extern StartFundsChangeResponseDefaultTypeInternal _StartFundsChangeResponse_default_instance_;
}  // namespace common
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace common {
enum FilterItem_FilterOperator : int {
  FilterItem_FilterOperator_FILTER_OPERATOR_UNSPECIFIED = 0,
  FilterItem_FilterOperator_FILTER_OPERATOR_EQ = 1,
  FilterItem_FilterOperator_FILTER_OPERATOR_NE = 2,
  FilterItem_FilterOperator_FILTER_OPERATOR_GT = 3,
  FilterItem_FilterOperator_FILTER_OPERATOR_GTE = 4,
  FilterItem_FilterOperator_FILTER_OPERATOR_LT = 5,
  FilterItem_FilterOperator_FILTER_OPERATOR_LTE = 6,
  FilterItem_FilterOperator_FILTER_OPERATOR_IN = 7,
  FilterItem_FilterOperator_FILTER_OPERATOR_NOT_IN = 8,
  FilterItem_FilterOperator_FilterItem_FilterOperator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FilterItem_FilterOperator_FilterItem_FilterOperator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FilterItem_FilterOperator_IsValid(int value);
extern const uint32_t FilterItem_FilterOperator_internal_data_[];
constexpr FilterItem_FilterOperator FilterItem_FilterOperator_FilterOperator_MIN = static_cast<FilterItem_FilterOperator>(0);
constexpr FilterItem_FilterOperator FilterItem_FilterOperator_FilterOperator_MAX = static_cast<FilterItem_FilterOperator>(8);
constexpr int FilterItem_FilterOperator_FilterOperator_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
FilterItem_FilterOperator_descriptor();
template <typename T>
const std::string& FilterItem_FilterOperator_Name(T value) {
  static_assert(std::is_same<T, FilterItem_FilterOperator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FilterOperator_Name().");
  return FilterItem_FilterOperator_Name(static_cast<FilterItem_FilterOperator>(value));
}
template <>
inline const std::string& FilterItem_FilterOperator_Name(FilterItem_FilterOperator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FilterItem_FilterOperator_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool FilterItem_FilterOperator_Parse(absl::string_view name, FilterItem_FilterOperator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FilterItem_FilterOperator>(
      FilterItem_FilterOperator_descriptor(), name, value);
}
enum ServiceType : int {
  UnknownService = 0,
  Gateway = 1,
  Notary = 2,
  Authority = 3,
  Treasury = 4,
  Emissary = 5,
  Shared = 6,
  Identity = 7,
  Vault = 8,
  CustodialWallet = 9,
  Issuer = 10,
  Overload = 11,
  Faucet = 12,
  TransactionManager = 13,
  Recovery = 14,
  ServiceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ServiceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ServiceType_IsValid(int value);
extern const uint32_t ServiceType_internal_data_[];
constexpr ServiceType ServiceType_MIN = static_cast<ServiceType>(0);
constexpr ServiceType ServiceType_MAX = static_cast<ServiceType>(14);
constexpr int ServiceType_ARRAYSIZE = 14 + 1;
const ::google::protobuf::EnumDescriptor*
ServiceType_descriptor();
template <typename T>
const std::string& ServiceType_Name(T value) {
  static_assert(std::is_same<T, ServiceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ServiceType_Name().");
  return ServiceType_Name(static_cast<ServiceType>(value));
}
template <>
inline const std::string& ServiceType_Name(ServiceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ServiceType_descriptor,
                                                 0, 14>(
      static_cast<int>(value));
}
inline bool ServiceType_Parse(absl::string_view name, ServiceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceType>(
      ServiceType_descriptor(), name, value);
}
enum SignatureSystem : int {
  SIGNATURE_SYSTEM_UNSPECIFIED = 0,
  SIGNATURE_SYSTEM_ED25519 = 1,
  SIGNATURE_SYSTEM_SECP256K1 = 2,
  SignatureSystem_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SignatureSystem_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SignatureSystem_IsValid(int value);
extern const uint32_t SignatureSystem_internal_data_[];
constexpr SignatureSystem SignatureSystem_MIN = static_cast<SignatureSystem>(0);
constexpr SignatureSystem SignatureSystem_MAX = static_cast<SignatureSystem>(2);
constexpr int SignatureSystem_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SignatureSystem_descriptor();
template <typename T>
const std::string& SignatureSystem_Name(T value) {
  static_assert(std::is_same<T, SignatureSystem>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SignatureSystem_Name().");
  return SignatureSystem_Name(static_cast<SignatureSystem>(value));
}
template <>
inline const std::string& SignatureSystem_Name(SignatureSystem value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SignatureSystem_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SignatureSystem_Parse(absl::string_view name, SignatureSystem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignatureSystem>(
      SignatureSystem_descriptor(), name, value);
}
enum LogicalOperator : int {
  LOGICAL_OPERATOR_UNSPECIFIED = 0,
  LOGICAL_OPERATOR_AND = 1,
  LOGICAL_OPERATOR_OR = 2,
  LogicalOperator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LogicalOperator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LogicalOperator_IsValid(int value);
extern const uint32_t LogicalOperator_internal_data_[];
constexpr LogicalOperator LogicalOperator_MIN = static_cast<LogicalOperator>(0);
constexpr LogicalOperator LogicalOperator_MAX = static_cast<LogicalOperator>(2);
constexpr int LogicalOperator_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
LogicalOperator_descriptor();
template <typename T>
const std::string& LogicalOperator_Name(T value) {
  static_assert(std::is_same<T, LogicalOperator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LogicalOperator_Name().");
  return LogicalOperator_Name(static_cast<LogicalOperator>(value));
}
template <>
inline const std::string& LogicalOperator_Name(LogicalOperator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LogicalOperator_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool LogicalOperator_Parse(absl::string_view name, LogicalOperator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LogicalOperator>(
      LogicalOperator_descriptor(), name, value);
}
enum SortDirection : int {
  SORT_DIRECTION_UNSPECIFIED = 0,
  SORT_DIRECTION_ASCENDING = 1,
  SORT_DIRECTION_DESCENDING = 2,
  SortDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SortDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SortDirection_IsValid(int value);
extern const uint32_t SortDirection_internal_data_[];
constexpr SortDirection SortDirection_MIN = static_cast<SortDirection>(0);
constexpr SortDirection SortDirection_MAX = static_cast<SortDirection>(2);
constexpr int SortDirection_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SortDirection_descriptor();
template <typename T>
const std::string& SortDirection_Name(T value) {
  static_assert(std::is_same<T, SortDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SortDirection_Name().");
  return SortDirection_Name(static_cast<SortDirection>(value));
}
template <>
inline const std::string& SortDirection_Name(SortDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SortDirection_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SortDirection_Parse(absl::string_view name, SortDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SortDirection>(
      SortDirection_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class StartFundsChangeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.StartFundsChangeResponse) */ {
 public:
  inline StartFundsChangeResponse() : StartFundsChangeResponse(nullptr) {}
  ~StartFundsChangeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartFundsChangeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartFundsChangeResponse(const StartFundsChangeResponse& from) : StartFundsChangeResponse(nullptr, from) {}
  inline StartFundsChangeResponse(StartFundsChangeResponse&& from) noexcept
      : StartFundsChangeResponse(nullptr, std::move(from)) {}
  inline StartFundsChangeResponse& operator=(const StartFundsChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartFundsChangeResponse& operator=(StartFundsChangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartFundsChangeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartFundsChangeResponse* internal_default_instance() {
    return reinterpret_cast<const StartFundsChangeResponse*>(
        &_StartFundsChangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(StartFundsChangeResponse& a, StartFundsChangeResponse& b) { a.Swap(&b); }
  inline void Swap(StartFundsChangeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartFundsChangeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartFundsChangeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StartFundsChangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartFundsChangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartFundsChangeResponse& from) { StartFundsChangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartFundsChangeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.StartFundsChangeResponse"; }

 protected:
  explicit StartFundsChangeResponse(::google::protobuf::Arena* arena);
  StartFundsChangeResponse(::google::protobuf::Arena* arena, const StartFundsChangeResponse& from);
  StartFundsChangeResponse(::google::protobuf::Arena* arena, StartFundsChangeResponse&& from) noexcept
      : StartFundsChangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUetrFieldNumber = 1,
  };
  // string uetr = 1;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // @@protoc_insertion_point(class_scope:common.StartFundsChangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StartFundsChangeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartFundsChangeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class SortItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.SortItem) */ {
 public:
  inline SortItem() : SortItem(nullptr) {}
  ~SortItem() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SortItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline SortItem(const SortItem& from) : SortItem(nullptr, from) {}
  inline SortItem(SortItem&& from) noexcept
      : SortItem(nullptr, std::move(from)) {}
  inline SortItem& operator=(const SortItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline SortItem& operator=(SortItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SortItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const SortItem* internal_default_instance() {
    return reinterpret_cast<const SortItem*>(
        &_SortItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SortItem& a, SortItem& b) { a.Swap(&b); }
  inline void Swap(SortItem* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SortItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SortItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SortItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SortItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SortItem& from) { SortItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SortItem* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.SortItem"; }

 protected:
  explicit SortItem(::google::protobuf::Arena* arena);
  SortItem(::google::protobuf::Arena* arena, const SortItem& from);
  SortItem(::google::protobuf::Arena* arena, SortItem&& from) noexcept
      : SortItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // string field = 1;
  void clear_field() ;
  const std::string& field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field(Arg_&& arg, Args_... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* value);

  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(
      const std::string& value);
  std::string* _internal_mutable_field();

  public:
  // .common.SortDirection direction = 2;
  void clear_direction() ;
  ::common::SortDirection direction() const;
  void set_direction(::common::SortDirection value);

  private:
  ::common::SortDirection _internal_direction() const;
  void _internal_set_direction(::common::SortDirection value);

  public:
  // @@protoc_insertion_point(class_scope:common.SortItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      29, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SortItem_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SortItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr field_;
    int direction_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class OneConnection final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:common.OneConnection) */ {
 public:
  inline OneConnection() : OneConnection(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OneConnection(
      ::google::protobuf::internal::ConstantInitialized);

  inline OneConnection(const OneConnection& from) : OneConnection(nullptr, from) {}
  inline OneConnection(OneConnection&& from) noexcept
      : OneConnection(nullptr, std::move(from)) {}
  inline OneConnection& operator=(const OneConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneConnection& operator=(OneConnection&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OneConnection& default_instance() {
    return *internal_default_instance();
  }
  static inline const OneConnection* internal_default_instance() {
    return reinterpret_cast<const OneConnection*>(
        &_OneConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(OneConnection& a, OneConnection& b) { a.Swap(&b); }
  inline void Swap(OneConnection* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OneConnection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OneConnection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<OneConnection>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const OneConnection& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const OneConnection& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.OneConnection"; }

 protected:
  explicit OneConnection(::google::protobuf::Arena* arena);
  OneConnection(::google::protobuf::Arena* arena, const OneConnection& from);
  OneConnection(::google::protobuf::Arena* arena, OneConnection&& from) noexcept
      : OneConnection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:common.OneConnection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OneConnection_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OneConnection& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Media final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.Media) */ {
 public:
  inline Media() : Media(nullptr) {}
  ~Media() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Media(
      ::google::protobuf::internal::ConstantInitialized);

  inline Media(const Media& from) : Media(nullptr, from) {}
  inline Media(Media&& from) noexcept
      : Media(nullptr, std::move(from)) {}
  inline Media& operator=(const Media& from) {
    CopyFrom(from);
    return *this;
  }
  inline Media& operator=(Media&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Media& default_instance() {
    return *internal_default_instance();
  }
  static inline const Media* internal_default_instance() {
    return reinterpret_cast<const Media*>(
        &_Media_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(Media& a, Media& b) { a.Swap(&b); }
  inline void Swap(Media* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Media* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Media* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Media>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Media& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Media& from) { Media::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Media* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.Media"; }

 protected:
  explicit Media(::google::protobuf::Arena* arena);
  Media(::google::protobuf::Arena* arena, const Media& from);
  Media(::google::protobuf::Arena* arena, Media&& from) noexcept
      : Media(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMimeTypeFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string mime_type = 1;
  void clear_mime_type() ;
  const std::string& mime_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mime_type(Arg_&& arg, Args_... args);
  std::string* mutable_mime_type();
  PROTOBUF_NODISCARD std::string* release_mime_type();
  void set_allocated_mime_type(std::string* value);

  private:
  const std::string& _internal_mime_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mime_type(
      const std::string& value);
  std::string* _internal_mutable_mime_type();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:common.Media)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Media_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Media& from_msg);
    ::google::protobuf::internal::ArenaStringPtr mime_type_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class ManyUetrConnection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.ManyUetrConnection) */ {
 public:
  inline ManyUetrConnection() : ManyUetrConnection(nullptr) {}
  ~ManyUetrConnection() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ManyUetrConnection(
      ::google::protobuf::internal::ConstantInitialized);

  inline ManyUetrConnection(const ManyUetrConnection& from) : ManyUetrConnection(nullptr, from) {}
  inline ManyUetrConnection(ManyUetrConnection&& from) noexcept
      : ManyUetrConnection(nullptr, std::move(from)) {}
  inline ManyUetrConnection& operator=(const ManyUetrConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManyUetrConnection& operator=(ManyUetrConnection&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManyUetrConnection& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManyUetrConnection* internal_default_instance() {
    return reinterpret_cast<const ManyUetrConnection*>(
        &_ManyUetrConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ManyUetrConnection& a, ManyUetrConnection& b) { a.Swap(&b); }
  inline void Swap(ManyUetrConnection* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManyUetrConnection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManyUetrConnection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ManyUetrConnection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManyUetrConnection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ManyUetrConnection& from) { ManyUetrConnection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ManyUetrConnection* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.ManyUetrConnection"; }

 protected:
  explicit ManyUetrConnection(::google::protobuf::Arena* arena);
  ManyUetrConnection(::google::protobuf::Arena* arena, const ManyUetrConnection& from);
  ManyUetrConnection(::google::protobuf::Arena* arena, ManyUetrConnection&& from) noexcept
      : ManyUetrConnection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssociatedFieldNumber = 3,
  };
  // repeated string associated = 3;
  int associated_size() const;
  private:
  int _internal_associated_size() const;

  public:
  void clear_associated() ;
  const std::string& associated(int index) const;
  std::string* mutable_associated(int index);
  void set_associated(int index, const std::string& value);
  void set_associated(int index, std::string&& value);
  void set_associated(int index, const char* value);
  void set_associated(int index, const char* value, std::size_t size);
  void set_associated(int index, absl::string_view value);
  std::string* add_associated();
  void add_associated(const std::string& value);
  void add_associated(std::string&& value);
  void add_associated(const char* value);
  void add_associated(const char* value, std::size_t size);
  void add_associated(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& associated() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_associated();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_associated() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_associated();

  public:
  // @@protoc_insertion_point(class_scope:common.ManyUetrConnection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ManyUetrConnection_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ManyUetrConnection& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> associated_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetVerifierRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:common.GetVerifierRequest) */ {
 public:
  inline GetVerifierRequest() : GetVerifierRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVerifierRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVerifierRequest(const GetVerifierRequest& from) : GetVerifierRequest(nullptr, from) {}
  inline GetVerifierRequest(GetVerifierRequest&& from) noexcept
      : GetVerifierRequest(nullptr, std::move(from)) {}
  inline GetVerifierRequest& operator=(const GetVerifierRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVerifierRequest& operator=(GetVerifierRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVerifierRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVerifierRequest* internal_default_instance() {
    return reinterpret_cast<const GetVerifierRequest*>(
        &_GetVerifierRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetVerifierRequest& a, GetVerifierRequest& b) { a.Swap(&b); }
  inline void Swap(GetVerifierRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVerifierRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVerifierRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetVerifierRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetVerifierRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetVerifierRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.GetVerifierRequest"; }

 protected:
  explicit GetVerifierRequest(::google::protobuf::Arena* arena);
  GetVerifierRequest(::google::protobuf::Arena* arena, const GetVerifierRequest& from);
  GetVerifierRequest(::google::protobuf::Arena* arena, GetVerifierRequest&& from) noexcept
      : GetVerifierRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:common.GetVerifierRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetVerifierRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVerifierRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetServiceTypeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.GetServiceTypeResponse) */ {
 public:
  inline GetServiceTypeResponse() : GetServiceTypeResponse(nullptr) {}
  ~GetServiceTypeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetServiceTypeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetServiceTypeResponse(const GetServiceTypeResponse& from) : GetServiceTypeResponse(nullptr, from) {}
  inline GetServiceTypeResponse(GetServiceTypeResponse&& from) noexcept
      : GetServiceTypeResponse(nullptr, std::move(from)) {}
  inline GetServiceTypeResponse& operator=(const GetServiceTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetServiceTypeResponse& operator=(GetServiceTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetServiceTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetServiceTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetServiceTypeResponse*>(
        &_GetServiceTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetServiceTypeResponse& a, GetServiceTypeResponse& b) { a.Swap(&b); }
  inline void Swap(GetServiceTypeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetServiceTypeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetServiceTypeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetServiceTypeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetServiceTypeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetServiceTypeResponse& from) { GetServiceTypeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetServiceTypeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.GetServiceTypeResponse"; }

 protected:
  explicit GetServiceTypeResponse(::google::protobuf::Arena* arena);
  GetServiceTypeResponse(::google::protobuf::Arena* arena, const GetServiceTypeResponse& from);
  GetServiceTypeResponse(::google::protobuf::Arena* arena, GetServiceTypeResponse&& from) noexcept
      : GetServiceTypeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceTypeFieldNumber = 1,
  };
  // .common.ServiceType service_type = 1;
  void clear_service_type() ;
  ::common::ServiceType service_type() const;
  void set_service_type(::common::ServiceType value);

  private:
  ::common::ServiceType _internal_service_type() const;
  void _internal_set_service_type(::common::ServiceType value);

  public:
  // @@protoc_insertion_point(class_scope:common.GetServiceTypeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetServiceTypeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetServiceTypeResponse& from_msg);
    int service_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetServiceTypeRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:common.GetServiceTypeRequest) */ {
 public:
  inline GetServiceTypeRequest() : GetServiceTypeRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetServiceTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetServiceTypeRequest(const GetServiceTypeRequest& from) : GetServiceTypeRequest(nullptr, from) {}
  inline GetServiceTypeRequest(GetServiceTypeRequest&& from) noexcept
      : GetServiceTypeRequest(nullptr, std::move(from)) {}
  inline GetServiceTypeRequest& operator=(const GetServiceTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetServiceTypeRequest& operator=(GetServiceTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetServiceTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetServiceTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetServiceTypeRequest*>(
        &_GetServiceTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetServiceTypeRequest& a, GetServiceTypeRequest& b) { a.Swap(&b); }
  inline void Swap(GetServiceTypeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetServiceTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetServiceTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetServiceTypeRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetServiceTypeRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetServiceTypeRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.GetServiceTypeRequest"; }

 protected:
  explicit GetServiceTypeRequest(::google::protobuf::Arena* arena);
  GetServiceTypeRequest(::google::protobuf::Arena* arena, const GetServiceTypeRequest& from);
  GetServiceTypeRequest(::google::protobuf::Arena* arena, GetServiceTypeRequest&& from) noexcept
      : GetServiceTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:common.GetServiceTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetServiceTypeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetServiceTypeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetInstanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.GetInstanceResponse) */ {
 public:
  inline GetInstanceResponse() : GetInstanceResponse(nullptr) {}
  ~GetInstanceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInstanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInstanceResponse(const GetInstanceResponse& from) : GetInstanceResponse(nullptr, from) {}
  inline GetInstanceResponse(GetInstanceResponse&& from) noexcept
      : GetInstanceResponse(nullptr, std::move(from)) {}
  inline GetInstanceResponse& operator=(const GetInstanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInstanceResponse& operator=(GetInstanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInstanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInstanceResponse* internal_default_instance() {
    return reinterpret_cast<const GetInstanceResponse*>(
        &_GetInstanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(GetInstanceResponse& a, GetInstanceResponse& b) { a.Swap(&b); }
  inline void Swap(GetInstanceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInstanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInstanceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetInstanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInstanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInstanceResponse& from) { GetInstanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInstanceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.GetInstanceResponse"; }

 protected:
  explicit GetInstanceResponse(::google::protobuf::Arena* arena);
  GetInstanceResponse(::google::protobuf::Arena* arena, const GetInstanceResponse& from);
  GetInstanceResponse(::google::protobuf::Arena* arena, GetInstanceResponse&& from) noexcept
      : GetInstanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInstanceIdFieldNumber = 1,
  };
  // string instance_id = 1;
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* value);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // @@protoc_insertion_point(class_scope:common.GetInstanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetInstanceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInstanceResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetInstanceRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:common.GetInstanceRequest) */ {
 public:
  inline GetInstanceRequest() : GetInstanceRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInstanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInstanceRequest(const GetInstanceRequest& from) : GetInstanceRequest(nullptr, from) {}
  inline GetInstanceRequest(GetInstanceRequest&& from) noexcept
      : GetInstanceRequest(nullptr, std::move(from)) {}
  inline GetInstanceRequest& operator=(const GetInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInstanceRequest& operator=(GetInstanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInstanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const GetInstanceRequest*>(
        &_GetInstanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetInstanceRequest& a, GetInstanceRequest& b) { a.Swap(&b); }
  inline void Swap(GetInstanceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInstanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInstanceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetInstanceRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetInstanceRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetInstanceRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.GetInstanceRequest"; }

 protected:
  explicit GetInstanceRequest(::google::protobuf::Arena* arena);
  GetInstanceRequest(::google::protobuf::Arena* arena, const GetInstanceRequest& from);
  GetInstanceRequest(::google::protobuf::Arena* arena, GetInstanceRequest&& from) noexcept
      : GetInstanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:common.GetInstanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetInstanceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInstanceRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class FilterItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.FilterItem) */ {
 public:
  inline FilterItem() : FilterItem(nullptr) {}
  ~FilterItem() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FilterItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline FilterItem(const FilterItem& from) : FilterItem(nullptr, from) {}
  inline FilterItem(FilterItem&& from) noexcept
      : FilterItem(nullptr, std::move(from)) {}
  inline FilterItem& operator=(const FilterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline FilterItem& operator=(FilterItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FilterItem& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kStrValue = 3,
    kIntValue = 4,
    kBoolValue = 5,
    kRfc3339DatetimeValue = 6,
    kUuidValue = 7,
    VALUE_NOT_SET = 0,
  };
  static inline const FilterItem* internal_default_instance() {
    return reinterpret_cast<const FilterItem*>(
        &_FilterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(FilterItem& a, FilterItem& b) { a.Swap(&b); }
  inline void Swap(FilterItem* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FilterItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FilterItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FilterItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FilterItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FilterItem& from) { FilterItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FilterItem* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.FilterItem"; }

 protected:
  explicit FilterItem(::google::protobuf::Arena* arena);
  FilterItem(::google::protobuf::Arena* arena, const FilterItem& from);
  FilterItem(::google::protobuf::Arena* arena, FilterItem&& from) noexcept
      : FilterItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FilterOperator = FilterItem_FilterOperator;
  static constexpr FilterOperator FILTER_OPERATOR_UNSPECIFIED = FilterItem_FilterOperator_FILTER_OPERATOR_UNSPECIFIED;
  static constexpr FilterOperator FILTER_OPERATOR_EQ = FilterItem_FilterOperator_FILTER_OPERATOR_EQ;
  static constexpr FilterOperator FILTER_OPERATOR_NE = FilterItem_FilterOperator_FILTER_OPERATOR_NE;
  static constexpr FilterOperator FILTER_OPERATOR_GT = FilterItem_FilterOperator_FILTER_OPERATOR_GT;
  static constexpr FilterOperator FILTER_OPERATOR_GTE = FilterItem_FilterOperator_FILTER_OPERATOR_GTE;
  static constexpr FilterOperator FILTER_OPERATOR_LT = FilterItem_FilterOperator_FILTER_OPERATOR_LT;
  static constexpr FilterOperator FILTER_OPERATOR_LTE = FilterItem_FilterOperator_FILTER_OPERATOR_LTE;
  static constexpr FilterOperator FILTER_OPERATOR_IN = FilterItem_FilterOperator_FILTER_OPERATOR_IN;
  static constexpr FilterOperator FILTER_OPERATOR_NOT_IN = FilterItem_FilterOperator_FILTER_OPERATOR_NOT_IN;
  static inline bool FilterOperator_IsValid(int value) {
    return FilterItem_FilterOperator_IsValid(value);
  }
  static constexpr FilterOperator FilterOperator_MIN = FilterItem_FilterOperator_FilterOperator_MIN;
  static constexpr FilterOperator FilterOperator_MAX = FilterItem_FilterOperator_FilterOperator_MAX;
  static constexpr int FilterOperator_ARRAYSIZE = FilterItem_FilterOperator_FilterOperator_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* FilterOperator_descriptor() {
    return FilterItem_FilterOperator_descriptor();
  }
  template <typename T>
  static inline const std::string& FilterOperator_Name(T value) {
    return FilterItem_FilterOperator_Name(value);
  }
  static inline bool FilterOperator_Parse(absl::string_view name, FilterOperator* value) {
    return FilterItem_FilterOperator_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kFieldFieldNumber = 1,
    kOperatorFieldNumber = 2,
    kStrValueFieldNumber = 3,
    kIntValueFieldNumber = 4,
    kBoolValueFieldNumber = 5,
    kRfc3339DatetimeValueFieldNumber = 6,
    kUuidValueFieldNumber = 7,
  };
  // string field = 1;
  void clear_field() ;
  const std::string& field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field(Arg_&& arg, Args_... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* value);

  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(
      const std::string& value);
  std::string* _internal_mutable_field();

  public:
  // .common.FilterItem.FilterOperator operator = 2;
  void clear_operator_() ;
  ::common::FilterItem_FilterOperator operator_() const;
  void set_operator_(::common::FilterItem_FilterOperator value);

  private:
  ::common::FilterItem_FilterOperator _internal_operator_() const;
  void _internal_set_operator_(::common::FilterItem_FilterOperator value);

  public:
  // string str_value = 3;
  bool has_str_value() const;
  void clear_str_value() ;
  const std::string& str_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str_value(Arg_&& arg, Args_... args);
  std::string* mutable_str_value();
  PROTOBUF_NODISCARD std::string* release_str_value();
  void set_allocated_str_value(std::string* value);

  private:
  const std::string& _internal_str_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str_value(
      const std::string& value);
  std::string* _internal_mutable_str_value();

  public:
  // int64 int_value = 4;
  bool has_int_value() const;
  void clear_int_value() ;
  ::int64_t int_value() const;
  void set_int_value(::int64_t value);

  private:
  ::int64_t _internal_int_value() const;
  void _internal_set_int_value(::int64_t value);

  public:
  // bool bool_value = 5;
  bool has_bool_value() const;
  void clear_bool_value() ;
  bool bool_value() const;
  void set_bool_value(bool value);

  private:
  bool _internal_bool_value() const;
  void _internal_set_bool_value(bool value);

  public:
  // string rfc3339_datetime_value = 6;
  bool has_rfc3339_datetime_value() const;
  void clear_rfc3339_datetime_value() ;
  const std::string& rfc3339_datetime_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rfc3339_datetime_value(Arg_&& arg, Args_... args);
  std::string* mutable_rfc3339_datetime_value();
  PROTOBUF_NODISCARD std::string* release_rfc3339_datetime_value();
  void set_allocated_rfc3339_datetime_value(std::string* value);

  private:
  const std::string& _internal_rfc3339_datetime_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rfc3339_datetime_value(
      const std::string& value);
  std::string* _internal_mutable_rfc3339_datetime_value();

  public:
  // string uuid_value = 7;
  bool has_uuid_value() const;
  void clear_uuid_value() ;
  const std::string& uuid_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid_value(Arg_&& arg, Args_... args);
  std::string* mutable_uuid_value();
  PROTOBUF_NODISCARD std::string* release_uuid_value();
  void set_allocated_uuid_value(std::string* value);

  private:
  const std::string& _internal_uuid_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid_value(
      const std::string& value);
  std::string* _internal_mutable_uuid_value();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:common.FilterItem)
 private:
  class _Internal;
  void set_has_str_value();
  void set_has_int_value();
  void set_has_bool_value();
  void set_has_rfc3339_datetime_value();
  void set_has_uuid_value();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 7, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FilterItem_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FilterItem& from_msg);
    ::google::protobuf::internal::ArenaStringPtr field_;
    int operator__;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr str_value_;
      ::int64_t int_value_;
      bool bool_value_;
      ::google::protobuf::internal::ArenaStringPtr rfc3339_datetime_value_;
      ::google::protobuf::internal::ArenaStringPtr uuid_value_;
    } value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class DynamicVerifier final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.DynamicVerifier) */ {
 public:
  inline DynamicVerifier() : DynamicVerifier(nullptr) {}
  ~DynamicVerifier() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DynamicVerifier(
      ::google::protobuf::internal::ConstantInitialized);

  inline DynamicVerifier(const DynamicVerifier& from) : DynamicVerifier(nullptr, from) {}
  inline DynamicVerifier(DynamicVerifier&& from) noexcept
      : DynamicVerifier(nullptr, std::move(from)) {}
  inline DynamicVerifier& operator=(const DynamicVerifier& from) {
    CopyFrom(from);
    return *this;
  }
  inline DynamicVerifier& operator=(DynamicVerifier&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DynamicVerifier& default_instance() {
    return *internal_default_instance();
  }
  static inline const DynamicVerifier* internal_default_instance() {
    return reinterpret_cast<const DynamicVerifier*>(
        &_DynamicVerifier_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DynamicVerifier& a, DynamicVerifier& b) { a.Swap(&b); }
  inline void Swap(DynamicVerifier* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DynamicVerifier* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DynamicVerifier* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DynamicVerifier>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DynamicVerifier& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DynamicVerifier& from) { DynamicVerifier::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DynamicVerifier* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.DynamicVerifier"; }

 protected:
  explicit DynamicVerifier(::google::protobuf::Arena* arena);
  DynamicVerifier(::google::protobuf::Arena* arena, const DynamicVerifier& from);
  DynamicVerifier(::google::protobuf::Arena* arena, DynamicVerifier&& from) noexcept
      : DynamicVerifier(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVerifierFieldNumber = 2,
    kSignatureSystemFieldNumber = 1,
  };
  // bytes verifier = 2;
  void clear_verifier() ;
  const std::string& verifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifier(Arg_&& arg, Args_... args);
  std::string* mutable_verifier();
  PROTOBUF_NODISCARD std::string* release_verifier();
  void set_allocated_verifier(std::string* value);

  private:
  const std::string& _internal_verifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifier(
      const std::string& value);
  std::string* _internal_mutable_verifier();

  public:
  // .common.SignatureSystem signature_system = 1;
  void clear_signature_system() ;
  ::common::SignatureSystem signature_system() const;
  void set_signature_system(::common::SignatureSystem value);

  private:
  ::common::SignatureSystem _internal_signature_system() const;
  void _internal_set_signature_system(::common::SignatureSystem value);

  public:
  // @@protoc_insertion_point(class_scope:common.DynamicVerifier)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DynamicVerifier_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DynamicVerifier& from_msg);
    ::google::protobuf::internal::ArenaStringPtr verifier_;
    int signature_system_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Distribution_ValueEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Distribution_ValueEntry_DoNotUse, ::int64_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Distribution_ValueEntry_DoNotUse, ::int64_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  Distribution_ValueEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Distribution_ValueEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Distribution_ValueEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Distribution_ValueEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Distribution_ValueEntry_DoNotUse*>(
        &_Distribution_ValueEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AuthorizedSignatureResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AuthorizedSignatureResponse) */ {
 public:
  inline AuthorizedSignatureResponse() : AuthorizedSignatureResponse(nullptr) {}
  ~AuthorizedSignatureResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthorizedSignatureResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthorizedSignatureResponse(const AuthorizedSignatureResponse& from) : AuthorizedSignatureResponse(nullptr, from) {}
  inline AuthorizedSignatureResponse(AuthorizedSignatureResponse&& from) noexcept
      : AuthorizedSignatureResponse(nullptr, std::move(from)) {}
  inline AuthorizedSignatureResponse& operator=(const AuthorizedSignatureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthorizedSignatureResponse& operator=(AuthorizedSignatureResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthorizedSignatureResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthorizedSignatureResponse* internal_default_instance() {
    return reinterpret_cast<const AuthorizedSignatureResponse*>(
        &_AuthorizedSignatureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(AuthorizedSignatureResponse& a, AuthorizedSignatureResponse& b) { a.Swap(&b); }
  inline void Swap(AuthorizedSignatureResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthorizedSignatureResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthorizedSignatureResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthorizedSignatureResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthorizedSignatureResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthorizedSignatureResponse& from) { AuthorizedSignatureResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthorizedSignatureResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AuthorizedSignatureResponse"; }

 protected:
  explicit AuthorizedSignatureResponse(::google::protobuf::Arena* arena);
  AuthorizedSignatureResponse(::google::protobuf::Arena* arena, const AuthorizedSignatureResponse& from);
  AuthorizedSignatureResponse(::google::protobuf::Arena* arena, AuthorizedSignatureResponse&& from) noexcept
      : AuthorizedSignatureResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPromissoryFileFieldNumber = 1,
  };
  // bytes promissory_file = 1;
  void clear_promissory_file() ;
  const std::string& promissory_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_promissory_file(Arg_&& arg, Args_... args);
  std::string* mutable_promissory_file();
  PROTOBUF_NODISCARD std::string* release_promissory_file();
  void set_allocated_promissory_file(std::string* value);

  private:
  const std::string& _internal_promissory_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_promissory_file(
      const std::string& value);
  std::string* _internal_mutable_promissory_file();

  public:
  // @@protoc_insertion_point(class_scope:common.AuthorizedSignatureResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthorizedSignatureResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthorizedSignatureResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr promissory_file_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AuthenticationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AuthenticationResponse) */ {
 public:
  inline AuthenticationResponse() : AuthenticationResponse(nullptr) {}
  ~AuthenticationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticationResponse(const AuthenticationResponse& from) : AuthenticationResponse(nullptr, from) {}
  inline AuthenticationResponse(AuthenticationResponse&& from) noexcept
      : AuthenticationResponse(nullptr, std::move(from)) {}
  inline AuthenticationResponse& operator=(const AuthenticationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticationResponse& operator=(AuthenticationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticationResponse* internal_default_instance() {
    return reinterpret_cast<const AuthenticationResponse*>(
        &_AuthenticationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(AuthenticationResponse& a, AuthenticationResponse& b) { a.Swap(&b); }
  inline void Swap(AuthenticationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticationResponse& from) { AuthenticationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AuthenticationResponse"; }

 protected:
  explicit AuthenticationResponse(::google::protobuf::Arena* arena);
  AuthenticationResponse(::google::protobuf::Arena* arena, const AuthenticationResponse& from);
  AuthenticationResponse(::google::protobuf::Arena* arena, AuthenticationResponse&& from) noexcept
      : AuthenticationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChallengeFieldNumber = 1,
  };
  // bytes challenge = 1;
  void clear_challenge() ;
  const std::string& challenge() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_challenge(Arg_&& arg, Args_... args);
  std::string* mutable_challenge();
  PROTOBUF_NODISCARD std::string* release_challenge();
  void set_allocated_challenge(std::string* value);

  private:
  const std::string& _internal_challenge() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_challenge(
      const std::string& value);
  std::string* _internal_mutable_challenge();

  public:
  // @@protoc_insertion_point(class_scope:common.AuthenticationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr challenge_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AssetDenomination final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AssetDenomination) */ {
 public:
  inline AssetDenomination() : AssetDenomination(nullptr) {}
  ~AssetDenomination() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssetDenomination(
      ::google::protobuf::internal::ConstantInitialized);

  inline AssetDenomination(const AssetDenomination& from) : AssetDenomination(nullptr, from) {}
  inline AssetDenomination(AssetDenomination&& from) noexcept
      : AssetDenomination(nullptr, std::move(from)) {}
  inline AssetDenomination& operator=(const AssetDenomination& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssetDenomination& operator=(AssetDenomination&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssetDenomination& default_instance() {
    return *internal_default_instance();
  }
  static inline const AssetDenomination* internal_default_instance() {
    return reinterpret_cast<const AssetDenomination*>(
        &_AssetDenomination_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(AssetDenomination& a, AssetDenomination& b) { a.Swap(&b); }
  inline void Swap(AssetDenomination* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssetDenomination* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssetDenomination* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AssetDenomination>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssetDenomination& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssetDenomination& from) { AssetDenomination::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AssetDenomination* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AssetDenomination"; }

 protected:
  explicit AssetDenomination(::google::protobuf::Arena* arena);
  AssetDenomination(::google::protobuf::Arena* arena, const AssetDenomination& from);
  AssetDenomination(::google::protobuf::Arena* arena, AssetDenomination&& from) noexcept
      : AssetDenomination(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDenominationsFieldNumber = 1,
    kPrecisionFieldNumber = 2,
  };
  // repeated int64 denominations = 1;
  int denominations_size() const;
  private:
  int _internal_denominations_size() const;

  public:
  void clear_denominations() ;
  ::int64_t denominations(int index) const;
  void set_denominations(int index, ::int64_t value);
  void add_denominations(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& denominations() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_denominations();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_denominations() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_denominations();

  public:
  // uint32 precision = 2;
  void clear_precision() ;
  ::uint32_t precision() const;
  void set_precision(::uint32_t value);

  private:
  ::uint32_t _internal_precision() const;
  void _internal_set_precision(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:common.AssetDenomination)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AssetDenomination_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AssetDenomination& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> denominations_;
    mutable ::google::protobuf::internal::CachedSize _denominations_cached_byte_size_;
    ::uint32_t precision_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AssetAuthority final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AssetAuthority) */ {
 public:
  inline AssetAuthority() : AssetAuthority(nullptr) {}
  ~AssetAuthority() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssetAuthority(
      ::google::protobuf::internal::ConstantInitialized);

  inline AssetAuthority(const AssetAuthority& from) : AssetAuthority(nullptr, from) {}
  inline AssetAuthority(AssetAuthority&& from) noexcept
      : AssetAuthority(nullptr, std::move(from)) {}
  inline AssetAuthority& operator=(const AssetAuthority& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssetAuthority& operator=(AssetAuthority&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssetAuthority& default_instance() {
    return *internal_default_instance();
  }
  static inline const AssetAuthority* internal_default_instance() {
    return reinterpret_cast<const AssetAuthority*>(
        &_AssetAuthority_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(AssetAuthority& a, AssetAuthority& b) { a.Swap(&b); }
  inline void Swap(AssetAuthority* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssetAuthority* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssetAuthority* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AssetAuthority>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssetAuthority& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssetAuthority& from) { AssetAuthority::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AssetAuthority* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AssetAuthority"; }

 protected:
  explicit AssetAuthority(::google::protobuf::Arena* arena);
  AssetAuthority(::google::protobuf::Arena* arena, const AssetAuthority& from);
  AssetAuthority(::google::protobuf::Arena* arena, AssetAuthority&& from) noexcept
      : AssetAuthority(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVerifierFieldNumber = 1,
    kUrlFieldNumber = 2,
  };
  // string verifier = 1;
  void clear_verifier() ;
  const std::string& verifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifier(Arg_&& arg, Args_... args);
  std::string* mutable_verifier();
  PROTOBUF_NODISCARD std::string* release_verifier();
  void set_allocated_verifier(std::string* value);

  private:
  const std::string& _internal_verifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifier(
      const std::string& value);
  std::string* _internal_mutable_verifier();

  public:
  // string url = 2;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:common.AssetAuthority)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AssetAuthority_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AssetAuthority& from_msg);
    ::google::protobuf::internal::ArenaStringPtr verifier_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Amount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.Amount) */ {
 public:
  inline Amount() : Amount(nullptr) {}
  ~Amount() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Amount(
      ::google::protobuf::internal::ConstantInitialized);

  inline Amount(const Amount& from) : Amount(nullptr, from) {}
  inline Amount(Amount&& from) noexcept
      : Amount(nullptr, std::move(from)) {}
  inline Amount& operator=(const Amount& from) {
    CopyFrom(from);
    return *this;
  }
  inline Amount& operator=(Amount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Amount& default_instance() {
    return *internal_default_instance();
  }
  static inline const Amount* internal_default_instance() {
    return reinterpret_cast<const Amount*>(
        &_Amount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Amount& a, Amount& b) { a.Swap(&b); }
  inline void Swap(Amount* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Amount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Amount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Amount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Amount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Amount& from) { Amount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Amount* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.Amount"; }

 protected:
  explicit Amount(::google::protobuf::Arena* arena);
  Amount(::google::protobuf::Arena* arena, const Amount& from);
  Amount(::google::protobuf::Arena* arena, Amount&& from) noexcept
      : Amount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyCodeFieldNumber = 1,
    kAmountFieldNumber = 2,
    kDecimalsFieldNumber = 3,
  };
  // string currency_code = 1;
  void clear_currency_code() ;
  const std::string& currency_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency_code(Arg_&& arg, Args_... args);
  std::string* mutable_currency_code();
  PROTOBUF_NODISCARD std::string* release_currency_code();
  void set_allocated_currency_code(std::string* value);

  private:
  const std::string& _internal_currency_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency_code(
      const std::string& value);
  std::string* _internal_mutable_currency_code();

  public:
  // int64 amount = 2;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // uint32 decimals = 3;
  void clear_decimals() ;
  ::uint32_t decimals() const;
  void set_decimals(::uint32_t value);

  private:
  ::uint32_t _internal_decimals() const;
  void _internal_set_decimals(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:common.Amount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Amount_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Amount& from_msg);
    ::google::protobuf::internal::ArenaStringPtr currency_code_;
    ::int64_t amount_;
    ::uint32_t decimals_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class StartFundsChangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.StartFundsChangeRequest) */ {
 public:
  inline StartFundsChangeRequest() : StartFundsChangeRequest(nullptr) {}
  ~StartFundsChangeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartFundsChangeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartFundsChangeRequest(const StartFundsChangeRequest& from) : StartFundsChangeRequest(nullptr, from) {}
  inline StartFundsChangeRequest(StartFundsChangeRequest&& from) noexcept
      : StartFundsChangeRequest(nullptr, std::move(from)) {}
  inline StartFundsChangeRequest& operator=(const StartFundsChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartFundsChangeRequest& operator=(StartFundsChangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartFundsChangeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartFundsChangeRequest* internal_default_instance() {
    return reinterpret_cast<const StartFundsChangeRequest*>(
        &_StartFundsChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(StartFundsChangeRequest& a, StartFundsChangeRequest& b) { a.Swap(&b); }
  inline void Swap(StartFundsChangeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartFundsChangeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartFundsChangeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StartFundsChangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartFundsChangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartFundsChangeRequest& from) { StartFundsChangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartFundsChangeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.StartFundsChangeRequest"; }

 protected:
  explicit StartFundsChangeRequest(::google::protobuf::Arena* arena);
  StartFundsChangeRequest(::google::protobuf::Arena* arena, const StartFundsChangeRequest& from);
  StartFundsChangeRequest(::google::protobuf::Arena* arena, StartFundsChangeRequest&& from) noexcept
      : StartFundsChangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPromissoryFieldNumber = 2,
    kUserReferenceFieldNumber = 3,
    kAmountFieldNumber = 1,
  };
  // string promissory = 2;
  void clear_promissory() ;
  const std::string& promissory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_promissory(Arg_&& arg, Args_... args);
  std::string* mutable_promissory();
  PROTOBUF_NODISCARD std::string* release_promissory();
  void set_allocated_promissory(std::string* value);

  private:
  const std::string& _internal_promissory() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_promissory(
      const std::string& value);
  std::string* _internal_mutable_promissory();

  public:
  // string user_reference = 3;
  void clear_user_reference() ;
  const std::string& user_reference() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_reference(Arg_&& arg, Args_... args);
  std::string* mutable_user_reference();
  PROTOBUF_NODISCARD std::string* release_user_reference();
  void set_allocated_user_reference(std::string* value);

  private:
  const std::string& _internal_user_reference() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_reference(
      const std::string& value);
  std::string* _internal_mutable_user_reference();

  public:
  // .common.Amount amount = 1;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:common.StartFundsChangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StartFundsChangeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartFundsChangeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr promissory_;
    ::google::protobuf::internal::ArenaStringPtr user_reference_;
    ::common::Amount* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class SortBy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.SortBy) */ {
 public:
  inline SortBy() : SortBy(nullptr) {}
  ~SortBy() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SortBy(
      ::google::protobuf::internal::ConstantInitialized);

  inline SortBy(const SortBy& from) : SortBy(nullptr, from) {}
  inline SortBy(SortBy&& from) noexcept
      : SortBy(nullptr, std::move(from)) {}
  inline SortBy& operator=(const SortBy& from) {
    CopyFrom(from);
    return *this;
  }
  inline SortBy& operator=(SortBy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SortBy& default_instance() {
    return *internal_default_instance();
  }
  static inline const SortBy* internal_default_instance() {
    return reinterpret_cast<const SortBy*>(
        &_SortBy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(SortBy& a, SortBy& b) { a.Swap(&b); }
  inline void Swap(SortBy* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SortBy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SortBy* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SortBy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SortBy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SortBy& from) { SortBy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SortBy* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.SortBy"; }

 protected:
  explicit SortBy(::google::protobuf::Arena* arena);
  SortBy(::google::protobuf::Arena* arena, const SortBy& from);
  SortBy(::google::protobuf::Arena* arena, SortBy&& from) noexcept
      : SortBy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .common.SortItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::common::SortItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::common::SortItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::SortItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::common::SortItem>* _internal_mutable_items();
  public:
  const ::common::SortItem& items(int index) const;
  ::common::SortItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::common::SortItem>& items() const;
  // @@protoc_insertion_point(class_scope:common.SortBy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SortBy_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SortBy& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::SortItem > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Role_IssuePermissions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.Role.IssuePermissions) */ {
 public:
  inline Role_IssuePermissions() : Role_IssuePermissions(nullptr) {}
  ~Role_IssuePermissions() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Role_IssuePermissions(
      ::google::protobuf::internal::ConstantInitialized);

  inline Role_IssuePermissions(const Role_IssuePermissions& from) : Role_IssuePermissions(nullptr, from) {}
  inline Role_IssuePermissions(Role_IssuePermissions&& from) noexcept
      : Role_IssuePermissions(nullptr, std::move(from)) {}
  inline Role_IssuePermissions& operator=(const Role_IssuePermissions& from) {
    CopyFrom(from);
    return *this;
  }
  inline Role_IssuePermissions& operator=(Role_IssuePermissions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Role_IssuePermissions& default_instance() {
    return *internal_default_instance();
  }
  static inline const Role_IssuePermissions* internal_default_instance() {
    return reinterpret_cast<const Role_IssuePermissions*>(
        &_Role_IssuePermissions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Role_IssuePermissions& a, Role_IssuePermissions& b) { a.Swap(&b); }
  inline void Swap(Role_IssuePermissions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Role_IssuePermissions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Role_IssuePermissions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Role_IssuePermissions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Role_IssuePermissions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Role_IssuePermissions& from) { Role_IssuePermissions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Role_IssuePermissions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.Role.IssuePermissions"; }

 protected:
  explicit Role_IssuePermissions(::google::protobuf::Arena* arena);
  Role_IssuePermissions(::google::protobuf::Arena* arena, const Role_IssuePermissions& from);
  Role_IssuePermissions(::google::protobuf::Arena* arena, Role_IssuePermissions&& from) noexcept
      : Role_IssuePermissions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInnerFieldNumber = 2,
  };
  // repeated .common.Amount inner = 2;
  int inner_size() const;
  private:
  int _internal_inner_size() const;

  public:
  void clear_inner() ;
  ::common::Amount* mutable_inner(int index);
  ::google::protobuf::RepeatedPtrField<::common::Amount>* mutable_inner();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Amount>& _internal_inner() const;
  ::google::protobuf::RepeatedPtrField<::common::Amount>* _internal_mutable_inner();
  public:
  const ::common::Amount& inner(int index) const;
  ::common::Amount* add_inner();
  const ::google::protobuf::RepeatedPtrField<::common::Amount>& inner() const;
  // @@protoc_insertion_point(class_scope:common.Role.IssuePermissions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Role_IssuePermissions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Role_IssuePermissions& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::Amount > inner_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class ManyVerifierConnection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.ManyVerifierConnection) */ {
 public:
  inline ManyVerifierConnection() : ManyVerifierConnection(nullptr) {}
  ~ManyVerifierConnection() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ManyVerifierConnection(
      ::google::protobuf::internal::ConstantInitialized);

  inline ManyVerifierConnection(const ManyVerifierConnection& from) : ManyVerifierConnection(nullptr, from) {}
  inline ManyVerifierConnection(ManyVerifierConnection&& from) noexcept
      : ManyVerifierConnection(nullptr, std::move(from)) {}
  inline ManyVerifierConnection& operator=(const ManyVerifierConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManyVerifierConnection& operator=(ManyVerifierConnection&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManyVerifierConnection& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManyVerifierConnection* internal_default_instance() {
    return reinterpret_cast<const ManyVerifierConnection*>(
        &_ManyVerifierConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ManyVerifierConnection& a, ManyVerifierConnection& b) { a.Swap(&b); }
  inline void Swap(ManyVerifierConnection* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManyVerifierConnection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManyVerifierConnection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ManyVerifierConnection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManyVerifierConnection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ManyVerifierConnection& from) { ManyVerifierConnection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ManyVerifierConnection* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.ManyVerifierConnection"; }

 protected:
  explicit ManyVerifierConnection(::google::protobuf::Arena* arena);
  ManyVerifierConnection(::google::protobuf::Arena* arena, const ManyVerifierConnection& from);
  ManyVerifierConnection(::google::protobuf::Arena* arena, ManyVerifierConnection&& from) noexcept
      : ManyVerifierConnection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssociatedFieldNumber = 2,
  };
  // repeated .common.DynamicVerifier associated = 2;
  int associated_size() const;
  private:
  int _internal_associated_size() const;

  public:
  void clear_associated() ;
  ::common::DynamicVerifier* mutable_associated(int index);
  ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>* mutable_associated();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>& _internal_associated() const;
  ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>* _internal_mutable_associated();
  public:
  const ::common::DynamicVerifier& associated(int index) const;
  ::common::DynamicVerifier* add_associated();
  const ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>& associated() const;
  // @@protoc_insertion_point(class_scope:common.ManyVerifierConnection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ManyVerifierConnection_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ManyVerifierConnection& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::DynamicVerifier > associated_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetVerifierResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.GetVerifierResponse) */ {
 public:
  inline GetVerifierResponse() : GetVerifierResponse(nullptr) {}
  ~GetVerifierResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVerifierResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVerifierResponse(const GetVerifierResponse& from) : GetVerifierResponse(nullptr, from) {}
  inline GetVerifierResponse(GetVerifierResponse&& from) noexcept
      : GetVerifierResponse(nullptr, std::move(from)) {}
  inline GetVerifierResponse& operator=(const GetVerifierResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVerifierResponse& operator=(GetVerifierResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVerifierResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVerifierResponse* internal_default_instance() {
    return reinterpret_cast<const GetVerifierResponse*>(
        &_GetVerifierResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetVerifierResponse& a, GetVerifierResponse& b) { a.Swap(&b); }
  inline void Swap(GetVerifierResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVerifierResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVerifierResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetVerifierResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVerifierResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVerifierResponse& from) { GetVerifierResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVerifierResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.GetVerifierResponse"; }

 protected:
  explicit GetVerifierResponse(::google::protobuf::Arena* arena);
  GetVerifierResponse(::google::protobuf::Arena* arena, const GetVerifierResponse& from);
  GetVerifierResponse(::google::protobuf::Arena* arena, GetVerifierResponse&& from) noexcept
      : GetVerifierResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMultibaseFieldNumber = 2,
    kBytesFieldNumber = 1,
  };
  // string multibase = 2;
  void clear_multibase() ;
  const std::string& multibase() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_multibase(Arg_&& arg, Args_... args);
  std::string* mutable_multibase();
  PROTOBUF_NODISCARD std::string* release_multibase();
  void set_allocated_multibase(std::string* value);

  private:
  const std::string& _internal_multibase() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_multibase(
      const std::string& value);
  std::string* _internal_mutable_multibase();

  public:
  // .common.DynamicVerifier bytes = 1;
  bool has_bytes() const;
  void clear_bytes() ;
  const ::common::DynamicVerifier& bytes() const;
  PROTOBUF_NODISCARD ::common::DynamicVerifier* release_bytes();
  ::common::DynamicVerifier* mutable_bytes();
  void set_allocated_bytes(::common::DynamicVerifier* value);
  void unsafe_arena_set_allocated_bytes(::common::DynamicVerifier* value);
  ::common::DynamicVerifier* unsafe_arena_release_bytes();

  private:
  const ::common::DynamicVerifier& _internal_bytes() const;
  ::common::DynamicVerifier* _internal_mutable_bytes();

  public:
  // @@protoc_insertion_point(class_scope:common.GetVerifierResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetVerifierResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVerifierResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr multibase_;
    ::common::DynamicVerifier* bytes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Filter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.Filter) */ {
 public:
  inline Filter() : Filter(nullptr) {}
  ~Filter() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Filter(
      ::google::protobuf::internal::ConstantInitialized);

  inline Filter(const Filter& from) : Filter(nullptr, from) {}
  inline Filter(Filter&& from) noexcept
      : Filter(nullptr, std::move(from)) {}
  inline Filter& operator=(const Filter& from) {
    CopyFrom(from);
    return *this;
  }
  inline Filter& operator=(Filter&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Filter& default_instance() {
    return *internal_default_instance();
  }
  static inline const Filter* internal_default_instance() {
    return reinterpret_cast<const Filter*>(
        &_Filter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Filter& a, Filter& b) { a.Swap(&b); }
  inline void Swap(Filter* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Filter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Filter* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Filter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Filter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Filter& from) { Filter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Filter* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.Filter"; }

 protected:
  explicit Filter(::google::protobuf::Arena* arena);
  Filter(::google::protobuf::Arena* arena, const Filter& from);
  Filter(::google::protobuf::Arena* arena, Filter&& from) noexcept
      : Filter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFiltersFieldNumber = 1,
    kOperatorFieldNumber = 2,
  };
  // repeated .common.FilterItem filters = 1;
  int filters_size() const;
  private:
  int _internal_filters_size() const;

  public:
  void clear_filters() ;
  ::common::FilterItem* mutable_filters(int index);
  ::google::protobuf::RepeatedPtrField<::common::FilterItem>* mutable_filters();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::FilterItem>& _internal_filters() const;
  ::google::protobuf::RepeatedPtrField<::common::FilterItem>* _internal_mutable_filters();
  public:
  const ::common::FilterItem& filters(int index) const;
  ::common::FilterItem* add_filters();
  const ::google::protobuf::RepeatedPtrField<::common::FilterItem>& filters() const;
  // .common.LogicalOperator operator = 2;
  void clear_operator_() ;
  ::common::LogicalOperator operator_() const;
  void set_operator_(::common::LogicalOperator value);

  private:
  ::common::LogicalOperator _internal_operator_() const;
  void _internal_set_operator_(::common::LogicalOperator value);

  public:
  // @@protoc_insertion_point(class_scope:common.Filter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Filter_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Filter& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::FilterItem > filters_;
    int operator__;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Distribution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.Distribution) */ {
 public:
  inline Distribution() : Distribution(nullptr) {}
  ~Distribution() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Distribution(
      ::google::protobuf::internal::ConstantInitialized);

  inline Distribution(const Distribution& from) : Distribution(nullptr, from) {}
  inline Distribution(Distribution&& from) noexcept
      : Distribution(nullptr, std::move(from)) {}
  inline Distribution& operator=(const Distribution& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution& operator=(Distribution&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution* internal_default_instance() {
    return reinterpret_cast<const Distribution*>(
        &_Distribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Distribution& a, Distribution& b) { a.Swap(&b); }
  inline void Swap(Distribution* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Distribution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Distribution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Distribution& from) { Distribution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Distribution* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.Distribution"; }

 protected:
  explicit Distribution(::google::protobuf::Arena* arena);
  Distribution(::google::protobuf::Arena* arena, const Distribution& from);
  Distribution(::google::protobuf::Arena* arena, Distribution&& from) noexcept
      : Distribution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // map<int64, int32> value = 1;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  const ::google::protobuf::Map<::int64_t, ::int32_t>& value() const;
  ::google::protobuf::Map<::int64_t, ::int32_t>* mutable_value();

  private:
  const ::google::protobuf::Map<::int64_t, ::int32_t>& _internal_value() const;
  ::google::protobuf::Map<::int64_t, ::int32_t>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:common.Distribution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Distribution_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Distribution& from_msg);
    ::google::protobuf::internal::MapField<Distribution_ValueEntry_DoNotUse, ::int64_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AuthenticationSignature final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AuthenticationSignature) */ {
 public:
  inline AuthenticationSignature() : AuthenticationSignature(nullptr) {}
  ~AuthenticationSignature() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticationSignature(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticationSignature(const AuthenticationSignature& from) : AuthenticationSignature(nullptr, from) {}
  inline AuthenticationSignature(AuthenticationSignature&& from) noexcept
      : AuthenticationSignature(nullptr, std::move(from)) {}
  inline AuthenticationSignature& operator=(const AuthenticationSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticationSignature& operator=(AuthenticationSignature&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticationSignature& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticationSignature* internal_default_instance() {
    return reinterpret_cast<const AuthenticationSignature*>(
        &_AuthenticationSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(AuthenticationSignature& a, AuthenticationSignature& b) { a.Swap(&b); }
  inline void Swap(AuthenticationSignature* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticationSignature* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticationSignature* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticationSignature>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticationSignature& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticationSignature& from) { AuthenticationSignature::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticationSignature* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AuthenticationSignature"; }

 protected:
  explicit AuthenticationSignature(::google::protobuf::Arena* arena);
  AuthenticationSignature(::google::protobuf::Arena* arena, const AuthenticationSignature& from);
  AuthenticationSignature(::google::protobuf::Arena* arena, AuthenticationSignature&& from) noexcept
      : AuthenticationSignature(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 2,
    kVerifierFieldNumber = 1,
  };
  // bytes signature = 2;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // .common.DynamicVerifier verifier = 1;
  bool has_verifier() const;
  void clear_verifier() ;
  const ::common::DynamicVerifier& verifier() const;
  PROTOBUF_NODISCARD ::common::DynamicVerifier* release_verifier();
  ::common::DynamicVerifier* mutable_verifier();
  void set_allocated_verifier(::common::DynamicVerifier* value);
  void unsafe_arena_set_allocated_verifier(::common::DynamicVerifier* value);
  ::common::DynamicVerifier* unsafe_arena_release_verifier();

  private:
  const ::common::DynamicVerifier& _internal_verifier() const;
  ::common::DynamicVerifier* _internal_mutable_verifier();

  public:
  // @@protoc_insertion_point(class_scope:common.AuthenticationSignature)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticationSignature_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticationSignature& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::common::DynamicVerifier* verifier_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AuthenticationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AuthenticationRequest) */ {
 public:
  inline AuthenticationRequest() : AuthenticationRequest(nullptr) {}
  ~AuthenticationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticationRequest(const AuthenticationRequest& from) : AuthenticationRequest(nullptr, from) {}
  inline AuthenticationRequest(AuthenticationRequest&& from) noexcept
      : AuthenticationRequest(nullptr, std::move(from)) {}
  inline AuthenticationRequest& operator=(const AuthenticationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticationRequest& operator=(AuthenticationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticationRequest* internal_default_instance() {
    return reinterpret_cast<const AuthenticationRequest*>(
        &_AuthenticationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AuthenticationRequest& a, AuthenticationRequest& b) { a.Swap(&b); }
  inline void Swap(AuthenticationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticationRequest& from) { AuthenticationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AuthenticationRequest"; }

 protected:
  explicit AuthenticationRequest(::google::protobuf::Arena* arena);
  AuthenticationRequest(::google::protobuf::Arena* arena, const AuthenticationRequest& from);
  AuthenticationRequest(::google::protobuf::Arena* arena, AuthenticationRequest&& from) noexcept
      : AuthenticationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectionIdFieldNumber = 2,
    kVerifierFieldNumber = 1,
  };
  // string connection_id = 2;
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // .common.DynamicVerifier verifier = 1;
  bool has_verifier() const;
  void clear_verifier() ;
  const ::common::DynamicVerifier& verifier() const;
  PROTOBUF_NODISCARD ::common::DynamicVerifier* release_verifier();
  ::common::DynamicVerifier* mutable_verifier();
  void set_allocated_verifier(::common::DynamicVerifier* value);
  void unsafe_arena_set_allocated_verifier(::common::DynamicVerifier* value);
  ::common::DynamicVerifier* unsafe_arena_release_verifier();

  private:
  const ::common::DynamicVerifier& _internal_verifier() const;
  ::common::DynamicVerifier* _internal_mutable_verifier();

  public:
  // @@protoc_insertion_point(class_scope:common.AuthenticationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::common::DynamicVerifier* verifier_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class AssociatedVerifierConnection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.AssociatedVerifierConnection) */ {
 public:
  inline AssociatedVerifierConnection() : AssociatedVerifierConnection(nullptr) {}
  ~AssociatedVerifierConnection() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssociatedVerifierConnection(
      ::google::protobuf::internal::ConstantInitialized);

  inline AssociatedVerifierConnection(const AssociatedVerifierConnection& from) : AssociatedVerifierConnection(nullptr, from) {}
  inline AssociatedVerifierConnection(AssociatedVerifierConnection&& from) noexcept
      : AssociatedVerifierConnection(nullptr, std::move(from)) {}
  inline AssociatedVerifierConnection& operator=(const AssociatedVerifierConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssociatedVerifierConnection& operator=(AssociatedVerifierConnection&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssociatedVerifierConnection& default_instance() {
    return *internal_default_instance();
  }
  static inline const AssociatedVerifierConnection* internal_default_instance() {
    return reinterpret_cast<const AssociatedVerifierConnection*>(
        &_AssociatedVerifierConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(AssociatedVerifierConnection& a, AssociatedVerifierConnection& b) { a.Swap(&b); }
  inline void Swap(AssociatedVerifierConnection* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssociatedVerifierConnection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssociatedVerifierConnection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AssociatedVerifierConnection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssociatedVerifierConnection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssociatedVerifierConnection& from) { AssociatedVerifierConnection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AssociatedVerifierConnection* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.AssociatedVerifierConnection"; }

 protected:
  explicit AssociatedVerifierConnection(::google::protobuf::Arena* arena);
  AssociatedVerifierConnection(::google::protobuf::Arena* arena, const AssociatedVerifierConnection& from);
  AssociatedVerifierConnection(::google::protobuf::Arena* arena, AssociatedVerifierConnection&& from) noexcept
      : AssociatedVerifierConnection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrimaryVerifierFieldNumber = 1,
    kAssociatedVerifierFieldNumber = 2,
  };
  // .common.DynamicVerifier primary_verifier = 1;
  bool has_primary_verifier() const;
  void clear_primary_verifier() ;
  const ::common::DynamicVerifier& primary_verifier() const;
  PROTOBUF_NODISCARD ::common::DynamicVerifier* release_primary_verifier();
  ::common::DynamicVerifier* mutable_primary_verifier();
  void set_allocated_primary_verifier(::common::DynamicVerifier* value);
  void unsafe_arena_set_allocated_primary_verifier(::common::DynamicVerifier* value);
  ::common::DynamicVerifier* unsafe_arena_release_primary_verifier();

  private:
  const ::common::DynamicVerifier& _internal_primary_verifier() const;
  ::common::DynamicVerifier* _internal_mutable_primary_verifier();

  public:
  // .common.DynamicVerifier associated_verifier = 2;
  bool has_associated_verifier() const;
  void clear_associated_verifier() ;
  const ::common::DynamicVerifier& associated_verifier() const;
  PROTOBUF_NODISCARD ::common::DynamicVerifier* release_associated_verifier();
  ::common::DynamicVerifier* mutable_associated_verifier();
  void set_allocated_associated_verifier(::common::DynamicVerifier* value);
  void unsafe_arena_set_allocated_associated_verifier(::common::DynamicVerifier* value);
  ::common::DynamicVerifier* unsafe_arena_release_associated_verifier();

  private:
  const ::common::DynamicVerifier& _internal_associated_verifier() const;
  ::common::DynamicVerifier* _internal_mutable_associated_verifier();

  public:
  // @@protoc_insertion_point(class_scope:common.AssociatedVerifierConnection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AssociatedVerifierConnection_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AssociatedVerifierConnection& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::common::DynamicVerifier* primary_verifier_;
    ::common::DynamicVerifier* associated_verifier_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class Role final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.Role) */ {
 public:
  inline Role() : Role(nullptr) {}
  ~Role() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Role(
      ::google::protobuf::internal::ConstantInitialized);

  inline Role(const Role& from) : Role(nullptr, from) {}
  inline Role(Role&& from) noexcept
      : Role(nullptr, std::move(from)) {}
  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }
  inline Role& operator=(Role&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Role& default_instance() {
    return *internal_default_instance();
  }
  enum RoleEnumCase {
    kAuthorized = 3,
    kIssuePermissions = 4,
    ROLE_ENUM_NOT_SET = 0,
  };
  static inline const Role* internal_default_instance() {
    return reinterpret_cast<const Role*>(
        &_Role_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Role& a, Role& b) { a.Swap(&b); }
  inline void Swap(Role* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Role* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Role* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Role>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Role& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Role& from) { Role::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Role* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.Role"; }

 protected:
  explicit Role(::google::protobuf::Arena* arena);
  Role(::google::protobuf::Arena* arena, const Role& from);
  Role(::google::protobuf::Arena* arena, Role&& from) noexcept
      : Role(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using IssuePermissions = Role_IssuePermissions;

  // accessors -------------------------------------------------------
  enum : int {
    kVerifierFieldNumber = 1,
    kAuthorizedFieldNumber = 3,
    kIssuePermissionsFieldNumber = 4,
  };
  // string verifier = 1;
  void clear_verifier() ;
  const std::string& verifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifier(Arg_&& arg, Args_... args);
  std::string* mutable_verifier();
  PROTOBUF_NODISCARD std::string* release_verifier();
  void set_allocated_verifier(std::string* value);

  private:
  const std::string& _internal_verifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifier(
      const std::string& value);
  std::string* _internal_mutable_verifier();

  public:
  // bool authorized = 3;
  bool has_authorized() const;
  void clear_authorized() ;
  bool authorized() const;
  void set_authorized(bool value);

  private:
  bool _internal_authorized() const;
  void _internal_set_authorized(bool value);

  public:
  // .common.Role.IssuePermissions issue_permissions = 4;
  bool has_issue_permissions() const;
  private:
  bool _internal_has_issue_permissions() const;

  public:
  void clear_issue_permissions() ;
  const ::common::Role_IssuePermissions& issue_permissions() const;
  PROTOBUF_NODISCARD ::common::Role_IssuePermissions* release_issue_permissions();
  ::common::Role_IssuePermissions* mutable_issue_permissions();
  void set_allocated_issue_permissions(::common::Role_IssuePermissions* value);
  void unsafe_arena_set_allocated_issue_permissions(::common::Role_IssuePermissions* value);
  ::common::Role_IssuePermissions* unsafe_arena_release_issue_permissions();

  private:
  const ::common::Role_IssuePermissions& _internal_issue_permissions() const;
  ::common::Role_IssuePermissions* _internal_mutable_issue_permissions();

  public:
  void clear_role_enum();
  RoleEnumCase role_enum_case() const;
  // @@protoc_insertion_point(class_scope:common.Role)
 private:
  class _Internal;
  void set_has_authorized();
  void set_has_issue_permissions();
  inline bool has_role_enum() const;
  inline void clear_has_role_enum();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 1,
      28, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Role_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Role& from_msg);
    ::google::protobuf::internal::ArenaStringPtr verifier_;
    union RoleEnumUnion {
      constexpr RoleEnumUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      bool authorized_;
      ::common::Role_IssuePermissions* issue_permissions_;
    } role_enum_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class ConnectionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common.ConnectionRequest) */ {
 public:
  inline ConnectionRequest() : ConnectionRequest(nullptr) {}
  ~ConnectionRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionRequest(const ConnectionRequest& from) : ConnectionRequest(nullptr, from) {}
  inline ConnectionRequest(ConnectionRequest&& from) noexcept
      : ConnectionRequest(nullptr, std::move(from)) {}
  inline ConnectionRequest& operator=(const ConnectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionRequest& operator=(ConnectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionRequest& default_instance() {
    return *internal_default_instance();
  }
  enum RequestTypeCase {
    kOne = 1,
    kManyVerifier = 2,
    kManyUetr = 3,
    REQUEST_TYPE_NOT_SET = 0,
  };
  static inline const ConnectionRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectionRequest*>(
        &_ConnectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ConnectionRequest& a, ConnectionRequest& b) { a.Swap(&b); }
  inline void Swap(ConnectionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ConnectionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectionRequest& from) { ConnectionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConnectionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "common.ConnectionRequest"; }

 protected:
  explicit ConnectionRequest(::google::protobuf::Arena* arena);
  ConnectionRequest(::google::protobuf::Arena* arena, const ConnectionRequest& from);
  ConnectionRequest(::google::protobuf::Arena* arena, ConnectionRequest&& from) noexcept
      : ConnectionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectionIdFieldNumber = 5,
    kSignatureFieldNumber = 4,
    kOneFieldNumber = 1,
    kManyVerifierFieldNumber = 2,
    kManyUetrFieldNumber = 3,
  };
  // string connection_id = 5;
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // .common.AuthenticationSignature signature = 4;
  bool has_signature() const;
  void clear_signature() ;
  const ::common::AuthenticationSignature& signature() const;
  PROTOBUF_NODISCARD ::common::AuthenticationSignature* release_signature();
  ::common::AuthenticationSignature* mutable_signature();
  void set_allocated_signature(::common::AuthenticationSignature* value);
  void unsafe_arena_set_allocated_signature(::common::AuthenticationSignature* value);
  ::common::AuthenticationSignature* unsafe_arena_release_signature();

  private:
  const ::common::AuthenticationSignature& _internal_signature() const;
  ::common::AuthenticationSignature* _internal_mutable_signature();

  public:
  // .common.OneConnection one = 1;
  bool has_one() const;
  private:
  bool _internal_has_one() const;

  public:
  void clear_one() ;
  const ::common::OneConnection& one() const;
  PROTOBUF_NODISCARD ::common::OneConnection* release_one();
  ::common::OneConnection* mutable_one();
  void set_allocated_one(::common::OneConnection* value);
  void unsafe_arena_set_allocated_one(::common::OneConnection* value);
  ::common::OneConnection* unsafe_arena_release_one();

  private:
  const ::common::OneConnection& _internal_one() const;
  ::common::OneConnection* _internal_mutable_one();

  public:
  // .common.ManyVerifierConnection many_verifier = 2;
  bool has_many_verifier() const;
  private:
  bool _internal_has_many_verifier() const;

  public:
  void clear_many_verifier() ;
  const ::common::ManyVerifierConnection& many_verifier() const;
  PROTOBUF_NODISCARD ::common::ManyVerifierConnection* release_many_verifier();
  ::common::ManyVerifierConnection* mutable_many_verifier();
  void set_allocated_many_verifier(::common::ManyVerifierConnection* value);
  void unsafe_arena_set_allocated_many_verifier(::common::ManyVerifierConnection* value);
  ::common::ManyVerifierConnection* unsafe_arena_release_many_verifier();

  private:
  const ::common::ManyVerifierConnection& _internal_many_verifier() const;
  ::common::ManyVerifierConnection* _internal_mutable_many_verifier();

  public:
  // .common.ManyUetrConnection many_uetr = 3;
  bool has_many_uetr() const;
  private:
  bool _internal_has_many_uetr() const;

  public:
  void clear_many_uetr() ;
  const ::common::ManyUetrConnection& many_uetr() const;
  PROTOBUF_NODISCARD ::common::ManyUetrConnection* release_many_uetr();
  ::common::ManyUetrConnection* mutable_many_uetr();
  void set_allocated_many_uetr(::common::ManyUetrConnection* value);
  void unsafe_arena_set_allocated_many_uetr(::common::ManyUetrConnection* value);
  ::common::ManyUetrConnection* unsafe_arena_release_many_uetr();

  private:
  const ::common::ManyUetrConnection& _internal_many_uetr() const;
  ::common::ManyUetrConnection* _internal_mutable_many_uetr();

  public:
  void clear_request_type();
  RequestTypeCase request_type_case() const;
  // @@protoc_insertion_point(class_scope:common.ConnectionRequest)
 private:
  class _Internal;
  void set_has_one();
  void set_has_many_verifier();
  void set_has_many_uetr();
  inline bool has_request_type() const;
  inline void clear_has_request_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 5, 4,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::common::AuthenticationSignature* signature_;
    union RequestTypeUnion {
      constexpr RequestTypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::common::OneConnection* one_;
      ::common::ManyVerifierConnection* many_verifier_;
      ::common::ManyUetrConnection* many_uetr_;
    } request_type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DynamicVerifier

// .common.SignatureSystem signature_system = 1;
inline void DynamicVerifier::clear_signature_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_system_ = 0;
}
inline ::common::SignatureSystem DynamicVerifier::signature_system() const {
  // @@protoc_insertion_point(field_get:common.DynamicVerifier.signature_system)
  return _internal_signature_system();
}
inline void DynamicVerifier::set_signature_system(::common::SignatureSystem value) {
  _internal_set_signature_system(value);
  // @@protoc_insertion_point(field_set:common.DynamicVerifier.signature_system)
}
inline ::common::SignatureSystem DynamicVerifier::_internal_signature_system() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::common::SignatureSystem>(_impl_.signature_system_);
}
inline void DynamicVerifier::_internal_set_signature_system(::common::SignatureSystem value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_system_ = value;
}

// bytes verifier = 2;
inline void DynamicVerifier::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.ClearToEmpty();
}
inline const std::string& DynamicVerifier::verifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.DynamicVerifier.verifier)
  return _internal_verifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DynamicVerifier::set_verifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.DynamicVerifier.verifier)
}
inline std::string* DynamicVerifier::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:common.DynamicVerifier.verifier)
  return _s;
}
inline const std::string& DynamicVerifier::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifier_.Get();
}
inline void DynamicVerifier::_internal_set_verifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(value, GetArena());
}
inline std::string* DynamicVerifier::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifier_.Mutable( GetArena());
}
inline std::string* DynamicVerifier::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.DynamicVerifier.verifier)
  return _impl_.verifier_.Release();
}
inline void DynamicVerifier::set_allocated_verifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.verifier_.IsDefault()) {
          _impl_.verifier_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.DynamicVerifier.verifier)
}

// -------------------------------------------------------------------

// Amount

// string currency_code = 1;
inline void Amount::clear_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.ClearToEmpty();
}
inline const std::string& Amount::currency_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Amount.currency_code)
  return _internal_currency_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Amount::set_currency_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.Amount.currency_code)
}
inline std::string* Amount::mutable_currency_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency_code();
  // @@protoc_insertion_point(field_mutable:common.Amount.currency_code)
  return _s;
}
inline const std::string& Amount::_internal_currency_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_code_.Get();
}
inline void Amount::_internal_set_currency_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(value, GetArena());
}
inline std::string* Amount::_internal_mutable_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_code_.Mutable( GetArena());
}
inline std::string* Amount::release_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.Amount.currency_code)
  return _impl_.currency_code_.Release();
}
inline void Amount::set_allocated_currency_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_code_.IsDefault()) {
          _impl_.currency_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.Amount.currency_code)
}

// int64 amount = 2;
inline void Amount::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t Amount::amount() const {
  // @@protoc_insertion_point(field_get:common.Amount.amount)
  return _internal_amount();
}
inline void Amount::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:common.Amount.amount)
}
inline ::int64_t Amount::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void Amount::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// uint32 decimals = 3;
inline void Amount::clear_decimals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decimals_ = 0u;
}
inline ::uint32_t Amount::decimals() const {
  // @@protoc_insertion_point(field_get:common.Amount.decimals)
  return _internal_decimals();
}
inline void Amount::set_decimals(::uint32_t value) {
  _internal_set_decimals(value);
  // @@protoc_insertion_point(field_set:common.Amount.decimals)
}
inline ::uint32_t Amount::_internal_decimals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decimals_;
}
inline void Amount::_internal_set_decimals(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decimals_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Distribution

// map<int64, int32> value = 1;
inline int Distribution::_internal_value_size() const {
  return _internal_value().size();
}
inline int Distribution::value_size() const {
  return _internal_value_size();
}
inline void Distribution::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int32_t>& Distribution::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int32_t>& Distribution::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:common.Distribution.value)
  return _internal_value();
}
inline ::google::protobuf::Map<::int64_t, ::int32_t>* Distribution::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int32_t>* Distribution::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:common.Distribution.value)
  return _internal_mutable_value();
}

// -------------------------------------------------------------------

// AuthenticationRequest

// .common.DynamicVerifier verifier = 1;
inline bool AuthenticationRequest::has_verifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.verifier_ != nullptr);
  return value;
}
inline void AuthenticationRequest::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.verifier_ != nullptr) _impl_.verifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::common::DynamicVerifier& AuthenticationRequest::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::DynamicVerifier* p = _impl_.verifier_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::DynamicVerifier&>(::common::_DynamicVerifier_default_instance_);
}
inline const ::common::DynamicVerifier& AuthenticationRequest::verifier() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AuthenticationRequest.verifier)
  return _internal_verifier();
}
inline void AuthenticationRequest::unsafe_arena_set_allocated_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.verifier_);
  }
  _impl_.verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.AuthenticationRequest.verifier)
}
inline ::common::DynamicVerifier* AuthenticationRequest::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* released = _impl_.verifier_;
  _impl_.verifier_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::DynamicVerifier* AuthenticationRequest::unsafe_arena_release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AuthenticationRequest.verifier)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* temp = _impl_.verifier_;
  _impl_.verifier_ = nullptr;
  return temp;
}
inline ::common::DynamicVerifier* AuthenticationRequest::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.verifier_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::DynamicVerifier>(GetArena());
    _impl_.verifier_ = reinterpret_cast<::common::DynamicVerifier*>(p);
  }
  return _impl_.verifier_;
}
inline ::common::DynamicVerifier* AuthenticationRequest::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::DynamicVerifier* _msg = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:common.AuthenticationRequest.verifier)
  return _msg;
}
inline void AuthenticationRequest::set_allocated_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.verifier_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.AuthenticationRequest.verifier)
}

// string connection_id = 2;
inline void AuthenticationRequest::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& AuthenticationRequest::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AuthenticationRequest.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticationRequest::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.AuthenticationRequest.connection_id)
}
inline std::string* AuthenticationRequest::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:common.AuthenticationRequest.connection_id)
  return _s;
}
inline const std::string& AuthenticationRequest::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void AuthenticationRequest::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* AuthenticationRequest::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* AuthenticationRequest::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AuthenticationRequest.connection_id)
  return _impl_.connection_id_.Release();
}
inline void AuthenticationRequest::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.connection_id_.IsDefault()) {
          _impl_.connection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.AuthenticationRequest.connection_id)
}

// -------------------------------------------------------------------

// AuthenticationResponse

// bytes challenge = 1;
inline void AuthenticationResponse::clear_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_.ClearToEmpty();
}
inline const std::string& AuthenticationResponse::challenge() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AuthenticationResponse.challenge)
  return _internal_challenge();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticationResponse::set_challenge(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.AuthenticationResponse.challenge)
}
inline std::string* AuthenticationResponse::mutable_challenge() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_challenge();
  // @@protoc_insertion_point(field_mutable:common.AuthenticationResponse.challenge)
  return _s;
}
inline const std::string& AuthenticationResponse::_internal_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_.Get();
}
inline void AuthenticationResponse::_internal_set_challenge(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_.Set(value, GetArena());
}
inline std::string* AuthenticationResponse::_internal_mutable_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.challenge_.Mutable( GetArena());
}
inline std::string* AuthenticationResponse::release_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AuthenticationResponse.challenge)
  return _impl_.challenge_.Release();
}
inline void AuthenticationResponse::set_allocated_challenge(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.challenge_.IsDefault()) {
          _impl_.challenge_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.AuthenticationResponse.challenge)
}

// -------------------------------------------------------------------

// OneConnection

// -------------------------------------------------------------------

// ManyVerifierConnection

// repeated .common.DynamicVerifier associated = 2;
inline int ManyVerifierConnection::_internal_associated_size() const {
  return _internal_associated().size();
}
inline int ManyVerifierConnection::associated_size() const {
  return _internal_associated_size();
}
inline void ManyVerifierConnection::clear_associated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.associated_.Clear();
}
inline ::common::DynamicVerifier* ManyVerifierConnection::mutable_associated(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:common.ManyVerifierConnection.associated)
  return _internal_mutable_associated()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>* ManyVerifierConnection::mutable_associated()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common.ManyVerifierConnection.associated)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_associated();
}
inline const ::common::DynamicVerifier& ManyVerifierConnection::associated(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ManyVerifierConnection.associated)
  return _internal_associated().Get(index);
}
inline ::common::DynamicVerifier* ManyVerifierConnection::add_associated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::DynamicVerifier* _add = _internal_mutable_associated()->Add();
  // @@protoc_insertion_point(field_add:common.ManyVerifierConnection.associated)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>& ManyVerifierConnection::associated() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common.ManyVerifierConnection.associated)
  return _internal_associated();
}
inline const ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>&
ManyVerifierConnection::_internal_associated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.associated_;
}
inline ::google::protobuf::RepeatedPtrField<::common::DynamicVerifier>*
ManyVerifierConnection::_internal_mutable_associated() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.associated_;
}

// -------------------------------------------------------------------

// ManyUetrConnection

// repeated string associated = 3;
inline int ManyUetrConnection::_internal_associated_size() const {
  return _internal_associated().size();
}
inline int ManyUetrConnection::associated_size() const {
  return _internal_associated_size();
}
inline void ManyUetrConnection::clear_associated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.associated_.Clear();
}
inline std::string* ManyUetrConnection::add_associated()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_associated()->Add();
  // @@protoc_insertion_point(field_add_mutable:common.ManyUetrConnection.associated)
  return _s;
}
inline const std::string& ManyUetrConnection::associated(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ManyUetrConnection.associated)
  return _internal_associated().Get(index);
}
inline std::string* ManyUetrConnection::mutable_associated(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:common.ManyUetrConnection.associated)
  return _internal_mutable_associated()->Mutable(index);
}
inline void ManyUetrConnection::set_associated(int index, const std::string& value) {
  _internal_mutable_associated()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::set_associated(int index, std::string&& value) {
  _internal_mutable_associated()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::set_associated(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_associated()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::set_associated(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_associated()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::set_associated(int index, absl::string_view value) {
  _internal_mutable_associated()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::add_associated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_associated()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::add_associated(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_associated()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::add_associated(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_associated()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::add_associated(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_associated()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:common.ManyUetrConnection.associated)
}
inline void ManyUetrConnection::add_associated(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_associated()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:common.ManyUetrConnection.associated)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ManyUetrConnection::associated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common.ManyUetrConnection.associated)
  return _internal_associated();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ManyUetrConnection::mutable_associated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common.ManyUetrConnection.associated)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_associated();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ManyUetrConnection::_internal_associated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.associated_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ManyUetrConnection::_internal_mutable_associated() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.associated_;
}

// -------------------------------------------------------------------

// AssociatedVerifierConnection

// .common.DynamicVerifier primary_verifier = 1;
inline bool AssociatedVerifierConnection::has_primary_verifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.primary_verifier_ != nullptr);
  return value;
}
inline void AssociatedVerifierConnection::clear_primary_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.primary_verifier_ != nullptr) _impl_.primary_verifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::common::DynamicVerifier& AssociatedVerifierConnection::_internal_primary_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::DynamicVerifier* p = _impl_.primary_verifier_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::DynamicVerifier&>(::common::_DynamicVerifier_default_instance_);
}
inline const ::common::DynamicVerifier& AssociatedVerifierConnection::primary_verifier() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AssociatedVerifierConnection.primary_verifier)
  return _internal_primary_verifier();
}
inline void AssociatedVerifierConnection::unsafe_arena_set_allocated_primary_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.primary_verifier_);
  }
  _impl_.primary_verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.AssociatedVerifierConnection.primary_verifier)
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::release_primary_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* released = _impl_.primary_verifier_;
  _impl_.primary_verifier_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::unsafe_arena_release_primary_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AssociatedVerifierConnection.primary_verifier)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* temp = _impl_.primary_verifier_;
  _impl_.primary_verifier_ = nullptr;
  return temp;
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::_internal_mutable_primary_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.primary_verifier_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::DynamicVerifier>(GetArena());
    _impl_.primary_verifier_ = reinterpret_cast<::common::DynamicVerifier*>(p);
  }
  return _impl_.primary_verifier_;
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::mutable_primary_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::DynamicVerifier* _msg = _internal_mutable_primary_verifier();
  // @@protoc_insertion_point(field_mutable:common.AssociatedVerifierConnection.primary_verifier)
  return _msg;
}
inline void AssociatedVerifierConnection::set_allocated_primary_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.primary_verifier_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.primary_verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.AssociatedVerifierConnection.primary_verifier)
}

// .common.DynamicVerifier associated_verifier = 2;
inline bool AssociatedVerifierConnection::has_associated_verifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.associated_verifier_ != nullptr);
  return value;
}
inline void AssociatedVerifierConnection::clear_associated_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.associated_verifier_ != nullptr) _impl_.associated_verifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::common::DynamicVerifier& AssociatedVerifierConnection::_internal_associated_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::DynamicVerifier* p = _impl_.associated_verifier_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::DynamicVerifier&>(::common::_DynamicVerifier_default_instance_);
}
inline const ::common::DynamicVerifier& AssociatedVerifierConnection::associated_verifier() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AssociatedVerifierConnection.associated_verifier)
  return _internal_associated_verifier();
}
inline void AssociatedVerifierConnection::unsafe_arena_set_allocated_associated_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.associated_verifier_);
  }
  _impl_.associated_verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.AssociatedVerifierConnection.associated_verifier)
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::release_associated_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::DynamicVerifier* released = _impl_.associated_verifier_;
  _impl_.associated_verifier_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::unsafe_arena_release_associated_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AssociatedVerifierConnection.associated_verifier)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::DynamicVerifier* temp = _impl_.associated_verifier_;
  _impl_.associated_verifier_ = nullptr;
  return temp;
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::_internal_mutable_associated_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.associated_verifier_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::DynamicVerifier>(GetArena());
    _impl_.associated_verifier_ = reinterpret_cast<::common::DynamicVerifier*>(p);
  }
  return _impl_.associated_verifier_;
}
inline ::common::DynamicVerifier* AssociatedVerifierConnection::mutable_associated_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::DynamicVerifier* _msg = _internal_mutable_associated_verifier();
  // @@protoc_insertion_point(field_mutable:common.AssociatedVerifierConnection.associated_verifier)
  return _msg;
}
inline void AssociatedVerifierConnection::set_allocated_associated_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.associated_verifier_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.associated_verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.AssociatedVerifierConnection.associated_verifier)
}

// -------------------------------------------------------------------

// ConnectionRequest

// .common.OneConnection one = 1;
inline bool ConnectionRequest::has_one() const {
  return request_type_case() == kOne;
}
inline bool ConnectionRequest::_internal_has_one() const {
  return request_type_case() == kOne;
}
inline void ConnectionRequest::set_has_one() {
  _impl_._oneof_case_[0] = kOne;
}
inline void ConnectionRequest::clear_one() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kOne) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.one_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.one_);
    }
    clear_has_request_type();
  }
}
inline ::common::OneConnection* ConnectionRequest::release_one() {
  // @@protoc_insertion_point(field_release:common.ConnectionRequest.one)
  if (request_type_case() == kOne) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.one_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.one_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::common::OneConnection& ConnectionRequest::_internal_one() const {
  return request_type_case() == kOne ? *_impl_.request_type_.one_ : reinterpret_cast<::common::OneConnection&>(::common::_OneConnection_default_instance_);
}
inline const ::common::OneConnection& ConnectionRequest::one() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ConnectionRequest.one)
  return _internal_one();
}
inline ::common::OneConnection* ConnectionRequest::unsafe_arena_release_one() {
  // @@protoc_insertion_point(field_unsafe_arena_release:common.ConnectionRequest.one)
  if (request_type_case() == kOne) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.one_;
    _impl_.request_type_.one_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConnectionRequest::unsafe_arena_set_allocated_one(::common::OneConnection* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_one();
    _impl_.request_type_.one_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.ConnectionRequest.one)
}
inline ::common::OneConnection* ConnectionRequest::_internal_mutable_one() {
  if (request_type_case() != kOne) {
    clear_request_type();
    set_has_one();
    _impl_.request_type_.one_ =
        ::google::protobuf::Message::DefaultConstruct<::common::OneConnection>(GetArena());
  }
  return _impl_.request_type_.one_;
}
inline ::common::OneConnection* ConnectionRequest::mutable_one() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::common::OneConnection* _msg = _internal_mutable_one();
  // @@protoc_insertion_point(field_mutable:common.ConnectionRequest.one)
  return _msg;
}

// .common.ManyVerifierConnection many_verifier = 2;
inline bool ConnectionRequest::has_many_verifier() const {
  return request_type_case() == kManyVerifier;
}
inline bool ConnectionRequest::_internal_has_many_verifier() const {
  return request_type_case() == kManyVerifier;
}
inline void ConnectionRequest::set_has_many_verifier() {
  _impl_._oneof_case_[0] = kManyVerifier;
}
inline void ConnectionRequest::clear_many_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kManyVerifier) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.many_verifier_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.many_verifier_);
    }
    clear_has_request_type();
  }
}
inline ::common::ManyVerifierConnection* ConnectionRequest::release_many_verifier() {
  // @@protoc_insertion_point(field_release:common.ConnectionRequest.many_verifier)
  if (request_type_case() == kManyVerifier) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.many_verifier_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.many_verifier_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::common::ManyVerifierConnection& ConnectionRequest::_internal_many_verifier() const {
  return request_type_case() == kManyVerifier ? *_impl_.request_type_.many_verifier_ : reinterpret_cast<::common::ManyVerifierConnection&>(::common::_ManyVerifierConnection_default_instance_);
}
inline const ::common::ManyVerifierConnection& ConnectionRequest::many_verifier() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ConnectionRequest.many_verifier)
  return _internal_many_verifier();
}
inline ::common::ManyVerifierConnection* ConnectionRequest::unsafe_arena_release_many_verifier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:common.ConnectionRequest.many_verifier)
  if (request_type_case() == kManyVerifier) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.many_verifier_;
    _impl_.request_type_.many_verifier_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConnectionRequest::unsafe_arena_set_allocated_many_verifier(::common::ManyVerifierConnection* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_many_verifier();
    _impl_.request_type_.many_verifier_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.ConnectionRequest.many_verifier)
}
inline ::common::ManyVerifierConnection* ConnectionRequest::_internal_mutable_many_verifier() {
  if (request_type_case() != kManyVerifier) {
    clear_request_type();
    set_has_many_verifier();
    _impl_.request_type_.many_verifier_ =
        ::google::protobuf::Message::DefaultConstruct<::common::ManyVerifierConnection>(GetArena());
  }
  return _impl_.request_type_.many_verifier_;
}
inline ::common::ManyVerifierConnection* ConnectionRequest::mutable_many_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::common::ManyVerifierConnection* _msg = _internal_mutable_many_verifier();
  // @@protoc_insertion_point(field_mutable:common.ConnectionRequest.many_verifier)
  return _msg;
}

// .common.ManyUetrConnection many_uetr = 3;
inline bool ConnectionRequest::has_many_uetr() const {
  return request_type_case() == kManyUetr;
}
inline bool ConnectionRequest::_internal_has_many_uetr() const {
  return request_type_case() == kManyUetr;
}
inline void ConnectionRequest::set_has_many_uetr() {
  _impl_._oneof_case_[0] = kManyUetr;
}
inline void ConnectionRequest::clear_many_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kManyUetr) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.many_uetr_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.many_uetr_);
    }
    clear_has_request_type();
  }
}
inline ::common::ManyUetrConnection* ConnectionRequest::release_many_uetr() {
  // @@protoc_insertion_point(field_release:common.ConnectionRequest.many_uetr)
  if (request_type_case() == kManyUetr) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.many_uetr_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.many_uetr_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::common::ManyUetrConnection& ConnectionRequest::_internal_many_uetr() const {
  return request_type_case() == kManyUetr ? *_impl_.request_type_.many_uetr_ : reinterpret_cast<::common::ManyUetrConnection&>(::common::_ManyUetrConnection_default_instance_);
}
inline const ::common::ManyUetrConnection& ConnectionRequest::many_uetr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ConnectionRequest.many_uetr)
  return _internal_many_uetr();
}
inline ::common::ManyUetrConnection* ConnectionRequest::unsafe_arena_release_many_uetr() {
  // @@protoc_insertion_point(field_unsafe_arena_release:common.ConnectionRequest.many_uetr)
  if (request_type_case() == kManyUetr) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.many_uetr_;
    _impl_.request_type_.many_uetr_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConnectionRequest::unsafe_arena_set_allocated_many_uetr(::common::ManyUetrConnection* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_many_uetr();
    _impl_.request_type_.many_uetr_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.ConnectionRequest.many_uetr)
}
inline ::common::ManyUetrConnection* ConnectionRequest::_internal_mutable_many_uetr() {
  if (request_type_case() != kManyUetr) {
    clear_request_type();
    set_has_many_uetr();
    _impl_.request_type_.many_uetr_ =
        ::google::protobuf::Message::DefaultConstruct<::common::ManyUetrConnection>(GetArena());
  }
  return _impl_.request_type_.many_uetr_;
}
inline ::common::ManyUetrConnection* ConnectionRequest::mutable_many_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::common::ManyUetrConnection* _msg = _internal_mutable_many_uetr();
  // @@protoc_insertion_point(field_mutable:common.ConnectionRequest.many_uetr)
  return _msg;
}

// .common.AuthenticationSignature signature = 4;
inline bool ConnectionRequest::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.signature_ != nullptr);
  return value;
}
inline void ConnectionRequest::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::common::AuthenticationSignature& ConnectionRequest::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::AuthenticationSignature* p = _impl_.signature_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::AuthenticationSignature&>(::common::_AuthenticationSignature_default_instance_);
}
inline const ::common::AuthenticationSignature& ConnectionRequest::signature() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ConnectionRequest.signature)
  return _internal_signature();
}
inline void ConnectionRequest::unsafe_arena_set_allocated_signature(::common::AuthenticationSignature* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signature_);
  }
  _impl_.signature_ = reinterpret_cast<::common::AuthenticationSignature*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.ConnectionRequest.signature)
}
inline ::common::AuthenticationSignature* ConnectionRequest::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::AuthenticationSignature* released = _impl_.signature_;
  _impl_.signature_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::AuthenticationSignature* ConnectionRequest::unsafe_arena_release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.ConnectionRequest.signature)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::AuthenticationSignature* temp = _impl_.signature_;
  _impl_.signature_ = nullptr;
  return temp;
}
inline ::common::AuthenticationSignature* ConnectionRequest::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::AuthenticationSignature>(GetArena());
    _impl_.signature_ = reinterpret_cast<::common::AuthenticationSignature*>(p);
  }
  return _impl_.signature_;
}
inline ::common::AuthenticationSignature* ConnectionRequest::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::AuthenticationSignature* _msg = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:common.ConnectionRequest.signature)
  return _msg;
}
inline void ConnectionRequest::set_allocated_signature(::common::AuthenticationSignature* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.signature_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.signature_ = reinterpret_cast<::common::AuthenticationSignature*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.ConnectionRequest.signature)
}

// string connection_id = 5;
inline void ConnectionRequest::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& ConnectionRequest::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.ConnectionRequest.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectionRequest::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.ConnectionRequest.connection_id)
}
inline std::string* ConnectionRequest::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:common.ConnectionRequest.connection_id)
  return _s;
}
inline const std::string& ConnectionRequest::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void ConnectionRequest::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* ConnectionRequest::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* ConnectionRequest::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.ConnectionRequest.connection_id)
  return _impl_.connection_id_.Release();
}
inline void ConnectionRequest::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.connection_id_.IsDefault()) {
          _impl_.connection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.ConnectionRequest.connection_id)
}

inline bool ConnectionRequest::has_request_type() const {
  return request_type_case() != REQUEST_TYPE_NOT_SET;
}
inline void ConnectionRequest::clear_has_request_type() {
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}
inline ConnectionRequest::RequestTypeCase ConnectionRequest::request_type_case() const {
  return ConnectionRequest::RequestTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// AuthenticationSignature

// .common.DynamicVerifier verifier = 1;
inline bool AuthenticationSignature::has_verifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.verifier_ != nullptr);
  return value;
}
inline void AuthenticationSignature::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.verifier_ != nullptr) _impl_.verifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::common::DynamicVerifier& AuthenticationSignature::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::DynamicVerifier* p = _impl_.verifier_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::DynamicVerifier&>(::common::_DynamicVerifier_default_instance_);
}
inline const ::common::DynamicVerifier& AuthenticationSignature::verifier() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AuthenticationSignature.verifier)
  return _internal_verifier();
}
inline void AuthenticationSignature::unsafe_arena_set_allocated_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.verifier_);
  }
  _impl_.verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.AuthenticationSignature.verifier)
}
inline ::common::DynamicVerifier* AuthenticationSignature::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* released = _impl_.verifier_;
  _impl_.verifier_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::DynamicVerifier* AuthenticationSignature::unsafe_arena_release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AuthenticationSignature.verifier)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* temp = _impl_.verifier_;
  _impl_.verifier_ = nullptr;
  return temp;
}
inline ::common::DynamicVerifier* AuthenticationSignature::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.verifier_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::DynamicVerifier>(GetArena());
    _impl_.verifier_ = reinterpret_cast<::common::DynamicVerifier*>(p);
  }
  return _impl_.verifier_;
}
inline ::common::DynamicVerifier* AuthenticationSignature::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::DynamicVerifier* _msg = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:common.AuthenticationSignature.verifier)
  return _msg;
}
inline void AuthenticationSignature::set_allocated_verifier(::common::DynamicVerifier* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.verifier_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.verifier_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.AuthenticationSignature.verifier)
}

// bytes signature = 2;
inline void AuthenticationSignature::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& AuthenticationSignature::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AuthenticationSignature.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticationSignature::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.AuthenticationSignature.signature)
}
inline std::string* AuthenticationSignature::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:common.AuthenticationSignature.signature)
  return _s;
}
inline const std::string& AuthenticationSignature::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void AuthenticationSignature::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* AuthenticationSignature::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* AuthenticationSignature::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AuthenticationSignature.signature)
  return _impl_.signature_.Release();
}
inline void AuthenticationSignature::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.AuthenticationSignature.signature)
}

// -------------------------------------------------------------------

// AuthorizedSignatureResponse

// bytes promissory_file = 1;
inline void AuthorizedSignatureResponse::clear_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.ClearToEmpty();
}
inline const std::string& AuthorizedSignatureResponse::promissory_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AuthorizedSignatureResponse.promissory_file)
  return _internal_promissory_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthorizedSignatureResponse::set_promissory_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.AuthorizedSignatureResponse.promissory_file)
}
inline std::string* AuthorizedSignatureResponse::mutable_promissory_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_promissory_file();
  // @@protoc_insertion_point(field_mutable:common.AuthorizedSignatureResponse.promissory_file)
  return _s;
}
inline const std::string& AuthorizedSignatureResponse::_internal_promissory_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.promissory_file_.Get();
}
inline void AuthorizedSignatureResponse::_internal_set_promissory_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.Set(value, GetArena());
}
inline std::string* AuthorizedSignatureResponse::_internal_mutable_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.promissory_file_.Mutable( GetArena());
}
inline std::string* AuthorizedSignatureResponse::release_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AuthorizedSignatureResponse.promissory_file)
  return _impl_.promissory_file_.Release();
}
inline void AuthorizedSignatureResponse::set_allocated_promissory_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.promissory_file_.IsDefault()) {
          _impl_.promissory_file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.AuthorizedSignatureResponse.promissory_file)
}

// -------------------------------------------------------------------

// Media

// string mime_type = 1;
inline void Media::clear_mime_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mime_type_.ClearToEmpty();
}
inline const std::string& Media::mime_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Media.mime_type)
  return _internal_mime_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Media::set_mime_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mime_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.Media.mime_type)
}
inline std::string* Media::mutable_mime_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mime_type();
  // @@protoc_insertion_point(field_mutable:common.Media.mime_type)
  return _s;
}
inline const std::string& Media::_internal_mime_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mime_type_.Get();
}
inline void Media::_internal_set_mime_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mime_type_.Set(value, GetArena());
}
inline std::string* Media::_internal_mutable_mime_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mime_type_.Mutable( GetArena());
}
inline std::string* Media::release_mime_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.Media.mime_type)
  return _impl_.mime_type_.Release();
}
inline void Media::set_allocated_mime_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mime_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mime_type_.IsDefault()) {
          _impl_.mime_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.Media.mime_type)
}

// bytes data = 2;
inline void Media::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Media::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Media.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Media::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.Media.data)
}
inline std::string* Media::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:common.Media.data)
  return _s;
}
inline const std::string& Media::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Media::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Media::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Media::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.Media.data)
  return _impl_.data_.Release();
}
inline void Media::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.Media.data)
}

// -------------------------------------------------------------------

// Role_IssuePermissions

// repeated .common.Amount inner = 2;
inline int Role_IssuePermissions::_internal_inner_size() const {
  return _internal_inner().size();
}
inline int Role_IssuePermissions::inner_size() const {
  return _internal_inner_size();
}
inline void Role_IssuePermissions::clear_inner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inner_.Clear();
}
inline ::common::Amount* Role_IssuePermissions::mutable_inner(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:common.Role.IssuePermissions.inner)
  return _internal_mutable_inner()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Amount>* Role_IssuePermissions::mutable_inner()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common.Role.IssuePermissions.inner)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inner();
}
inline const ::common::Amount& Role_IssuePermissions::inner(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Role.IssuePermissions.inner)
  return _internal_inner().Get(index);
}
inline ::common::Amount* Role_IssuePermissions::add_inner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Amount* _add = _internal_mutable_inner()->Add();
  // @@protoc_insertion_point(field_add:common.Role.IssuePermissions.inner)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Amount>& Role_IssuePermissions::inner() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common.Role.IssuePermissions.inner)
  return _internal_inner();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Amount>&
Role_IssuePermissions::_internal_inner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inner_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Amount>*
Role_IssuePermissions::_internal_mutable_inner() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inner_;
}

// -------------------------------------------------------------------

// Role

// string verifier = 1;
inline void Role::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.ClearToEmpty();
}
inline const std::string& Role::verifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Role.verifier)
  return _internal_verifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Role::set_verifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.Role.verifier)
}
inline std::string* Role::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:common.Role.verifier)
  return _s;
}
inline const std::string& Role::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifier_.Get();
}
inline void Role::_internal_set_verifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(value, GetArena());
}
inline std::string* Role::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifier_.Mutable( GetArena());
}
inline std::string* Role::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.Role.verifier)
  return _impl_.verifier_.Release();
}
inline void Role::set_allocated_verifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.verifier_.IsDefault()) {
          _impl_.verifier_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.Role.verifier)
}

// bool authorized = 3;
inline bool Role::has_authorized() const {
  return role_enum_case() == kAuthorized;
}
inline void Role::set_has_authorized() {
  _impl_._oneof_case_[0] = kAuthorized;
}
inline void Role::clear_authorized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (role_enum_case() == kAuthorized) {
    _impl_.role_enum_.authorized_ = false;
    clear_has_role_enum();
  }
}
inline bool Role::authorized() const {
  // @@protoc_insertion_point(field_get:common.Role.authorized)
  return _internal_authorized();
}
inline void Role::set_authorized(bool value) {
  if (role_enum_case() != kAuthorized) {
    clear_role_enum();
    set_has_authorized();
  }
  _impl_.role_enum_.authorized_ = value;
  // @@protoc_insertion_point(field_set:common.Role.authorized)
}
inline bool Role::_internal_authorized() const {
  if (role_enum_case() == kAuthorized) {
    return _impl_.role_enum_.authorized_;
  }
  return false;
}

// .common.Role.IssuePermissions issue_permissions = 4;
inline bool Role::has_issue_permissions() const {
  return role_enum_case() == kIssuePermissions;
}
inline bool Role::_internal_has_issue_permissions() const {
  return role_enum_case() == kIssuePermissions;
}
inline void Role::set_has_issue_permissions() {
  _impl_._oneof_case_[0] = kIssuePermissions;
}
inline void Role::clear_issue_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (role_enum_case() == kIssuePermissions) {
    if (GetArena() == nullptr) {
      delete _impl_.role_enum_.issue_permissions_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.role_enum_.issue_permissions_);
    }
    clear_has_role_enum();
  }
}
inline ::common::Role_IssuePermissions* Role::release_issue_permissions() {
  // @@protoc_insertion_point(field_release:common.Role.issue_permissions)
  if (role_enum_case() == kIssuePermissions) {
    clear_has_role_enum();
    auto* temp = _impl_.role_enum_.issue_permissions_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.role_enum_.issue_permissions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::common::Role_IssuePermissions& Role::_internal_issue_permissions() const {
  return role_enum_case() == kIssuePermissions ? *_impl_.role_enum_.issue_permissions_ : reinterpret_cast<::common::Role_IssuePermissions&>(::common::_Role_IssuePermissions_default_instance_);
}
inline const ::common::Role_IssuePermissions& Role::issue_permissions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Role.issue_permissions)
  return _internal_issue_permissions();
}
inline ::common::Role_IssuePermissions* Role::unsafe_arena_release_issue_permissions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:common.Role.issue_permissions)
  if (role_enum_case() == kIssuePermissions) {
    clear_has_role_enum();
    auto* temp = _impl_.role_enum_.issue_permissions_;
    _impl_.role_enum_.issue_permissions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Role::unsafe_arena_set_allocated_issue_permissions(::common::Role_IssuePermissions* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_role_enum();
  if (value) {
    set_has_issue_permissions();
    _impl_.role_enum_.issue_permissions_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.Role.issue_permissions)
}
inline ::common::Role_IssuePermissions* Role::_internal_mutable_issue_permissions() {
  if (role_enum_case() != kIssuePermissions) {
    clear_role_enum();
    set_has_issue_permissions();
    _impl_.role_enum_.issue_permissions_ =
        ::google::protobuf::Message::DefaultConstruct<::common::Role_IssuePermissions>(GetArena());
  }
  return _impl_.role_enum_.issue_permissions_;
}
inline ::common::Role_IssuePermissions* Role::mutable_issue_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::common::Role_IssuePermissions* _msg = _internal_mutable_issue_permissions();
  // @@protoc_insertion_point(field_mutable:common.Role.issue_permissions)
  return _msg;
}

inline bool Role::has_role_enum() const {
  return role_enum_case() != ROLE_ENUM_NOT_SET;
}
inline void Role::clear_has_role_enum() {
  _impl_._oneof_case_[0] = ROLE_ENUM_NOT_SET;
}
inline Role::RoleEnumCase Role::role_enum_case() const {
  return Role::RoleEnumCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetVerifierRequest

// -------------------------------------------------------------------

// GetVerifierResponse

// .common.DynamicVerifier bytes = 1;
inline bool GetVerifierResponse::has_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bytes_ != nullptr);
  return value;
}
inline void GetVerifierResponse::clear_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bytes_ != nullptr) _impl_.bytes_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::common::DynamicVerifier& GetVerifierResponse::_internal_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::DynamicVerifier* p = _impl_.bytes_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::DynamicVerifier&>(::common::_DynamicVerifier_default_instance_);
}
inline const ::common::DynamicVerifier& GetVerifierResponse::bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.GetVerifierResponse.bytes)
  return _internal_bytes();
}
inline void GetVerifierResponse::unsafe_arena_set_allocated_bytes(::common::DynamicVerifier* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bytes_);
  }
  _impl_.bytes_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.GetVerifierResponse.bytes)
}
inline ::common::DynamicVerifier* GetVerifierResponse::release_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* released = _impl_.bytes_;
  _impl_.bytes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::DynamicVerifier* GetVerifierResponse::unsafe_arena_release_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.GetVerifierResponse.bytes)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::DynamicVerifier* temp = _impl_.bytes_;
  _impl_.bytes_ = nullptr;
  return temp;
}
inline ::common::DynamicVerifier* GetVerifierResponse::_internal_mutable_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bytes_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::DynamicVerifier>(GetArena());
    _impl_.bytes_ = reinterpret_cast<::common::DynamicVerifier*>(p);
  }
  return _impl_.bytes_;
}
inline ::common::DynamicVerifier* GetVerifierResponse::mutable_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::DynamicVerifier* _msg = _internal_mutable_bytes();
  // @@protoc_insertion_point(field_mutable:common.GetVerifierResponse.bytes)
  return _msg;
}
inline void GetVerifierResponse::set_allocated_bytes(::common::DynamicVerifier* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bytes_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bytes_ = reinterpret_cast<::common::DynamicVerifier*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.GetVerifierResponse.bytes)
}

// string multibase = 2;
inline void GetVerifierResponse::clear_multibase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multibase_.ClearToEmpty();
}
inline const std::string& GetVerifierResponse::multibase() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.GetVerifierResponse.multibase)
  return _internal_multibase();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVerifierResponse::set_multibase(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multibase_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.GetVerifierResponse.multibase)
}
inline std::string* GetVerifierResponse::mutable_multibase() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_multibase();
  // @@protoc_insertion_point(field_mutable:common.GetVerifierResponse.multibase)
  return _s;
}
inline const std::string& GetVerifierResponse::_internal_multibase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.multibase_.Get();
}
inline void GetVerifierResponse::_internal_set_multibase(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multibase_.Set(value, GetArena());
}
inline std::string* GetVerifierResponse::_internal_mutable_multibase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.multibase_.Mutable( GetArena());
}
inline std::string* GetVerifierResponse::release_multibase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.GetVerifierResponse.multibase)
  return _impl_.multibase_.Release();
}
inline void GetVerifierResponse::set_allocated_multibase(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multibase_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.multibase_.IsDefault()) {
          _impl_.multibase_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.GetVerifierResponse.multibase)
}

// -------------------------------------------------------------------

// GetServiceTypeRequest

// -------------------------------------------------------------------

// GetServiceTypeResponse

// .common.ServiceType service_type = 1;
inline void GetServiceTypeResponse::clear_service_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_type_ = 0;
}
inline ::common::ServiceType GetServiceTypeResponse::service_type() const {
  // @@protoc_insertion_point(field_get:common.GetServiceTypeResponse.service_type)
  return _internal_service_type();
}
inline void GetServiceTypeResponse::set_service_type(::common::ServiceType value) {
  _internal_set_service_type(value);
  // @@protoc_insertion_point(field_set:common.GetServiceTypeResponse.service_type)
}
inline ::common::ServiceType GetServiceTypeResponse::_internal_service_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::common::ServiceType>(_impl_.service_type_);
}
inline void GetServiceTypeResponse::_internal_set_service_type(::common::ServiceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_type_ = value;
}

// -------------------------------------------------------------------

// GetInstanceRequest

// -------------------------------------------------------------------

// GetInstanceResponse

// string instance_id = 1;
inline void GetInstanceResponse::clear_instance_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& GetInstanceResponse::instance_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.GetInstanceResponse.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInstanceResponse::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.GetInstanceResponse.instance_id)
}
inline std::string* GetInstanceResponse::mutable_instance_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:common.GetInstanceResponse.instance_id)
  return _s;
}
inline const std::string& GetInstanceResponse::_internal_instance_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instance_id_.Get();
}
inline void GetInstanceResponse::_internal_set_instance_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_id_.Set(value, GetArena());
}
inline std::string* GetInstanceResponse::_internal_mutable_instance_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instance_id_.Mutable( GetArena());
}
inline std::string* GetInstanceResponse::release_instance_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.GetInstanceResponse.instance_id)
  return _impl_.instance_id_.Release();
}
inline void GetInstanceResponse::set_allocated_instance_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.GetInstanceResponse.instance_id)
}

// -------------------------------------------------------------------

// StartFundsChangeRequest

// .common.Amount amount = 1;
inline bool StartFundsChangeRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline void StartFundsChangeRequest::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::common::Amount& StartFundsChangeRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& StartFundsChangeRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.StartFundsChangeRequest.amount)
  return _internal_amount();
}
inline void StartFundsChangeRequest::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:common.StartFundsChangeRequest.amount)
}
inline ::common::Amount* StartFundsChangeRequest::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* StartFundsChangeRequest::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.StartFundsChangeRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* StartFundsChangeRequest::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* StartFundsChangeRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:common.StartFundsChangeRequest.amount)
  return _msg;
}
inline void StartFundsChangeRequest::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:common.StartFundsChangeRequest.amount)
}

// string promissory = 2;
inline void StartFundsChangeRequest::clear_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_.ClearToEmpty();
}
inline const std::string& StartFundsChangeRequest::promissory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.StartFundsChangeRequest.promissory)
  return _internal_promissory();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartFundsChangeRequest::set_promissory(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.StartFundsChangeRequest.promissory)
}
inline std::string* StartFundsChangeRequest::mutable_promissory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_promissory();
  // @@protoc_insertion_point(field_mutable:common.StartFundsChangeRequest.promissory)
  return _s;
}
inline const std::string& StartFundsChangeRequest::_internal_promissory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.promissory_.Get();
}
inline void StartFundsChangeRequest::_internal_set_promissory(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_.Set(value, GetArena());
}
inline std::string* StartFundsChangeRequest::_internal_mutable_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.promissory_.Mutable( GetArena());
}
inline std::string* StartFundsChangeRequest::release_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.StartFundsChangeRequest.promissory)
  return _impl_.promissory_.Release();
}
inline void StartFundsChangeRequest::set_allocated_promissory(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.promissory_.IsDefault()) {
          _impl_.promissory_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.StartFundsChangeRequest.promissory)
}

// string user_reference = 3;
inline void StartFundsChangeRequest::clear_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.ClearToEmpty();
}
inline const std::string& StartFundsChangeRequest::user_reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.StartFundsChangeRequest.user_reference)
  return _internal_user_reference();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartFundsChangeRequest::set_user_reference(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.StartFundsChangeRequest.user_reference)
}
inline std::string* StartFundsChangeRequest::mutable_user_reference() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_reference();
  // @@protoc_insertion_point(field_mutable:common.StartFundsChangeRequest.user_reference)
  return _s;
}
inline const std::string& StartFundsChangeRequest::_internal_user_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_reference_.Get();
}
inline void StartFundsChangeRequest::_internal_set_user_reference(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.Set(value, GetArena());
}
inline std::string* StartFundsChangeRequest::_internal_mutable_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_reference_.Mutable( GetArena());
}
inline std::string* StartFundsChangeRequest::release_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.StartFundsChangeRequest.user_reference)
  return _impl_.user_reference_.Release();
}
inline void StartFundsChangeRequest::set_allocated_user_reference(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_reference_.IsDefault()) {
          _impl_.user_reference_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.StartFundsChangeRequest.user_reference)
}

// -------------------------------------------------------------------

// StartFundsChangeResponse

// string uetr = 1;
inline void StartFundsChangeResponse::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& StartFundsChangeResponse::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.StartFundsChangeResponse.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartFundsChangeResponse::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.StartFundsChangeResponse.uetr)
}
inline std::string* StartFundsChangeResponse::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:common.StartFundsChangeResponse.uetr)
  return _s;
}
inline const std::string& StartFundsChangeResponse::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void StartFundsChangeResponse::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* StartFundsChangeResponse::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* StartFundsChangeResponse::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.StartFundsChangeResponse.uetr)
  return _impl_.uetr_.Release();
}
inline void StartFundsChangeResponse::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.StartFundsChangeResponse.uetr)
}

// -------------------------------------------------------------------

// FilterItem

// string field = 1;
inline void FilterItem::clear_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.ClearToEmpty();
}
inline const std::string& FilterItem::field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.FilterItem.field)
  return _internal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FilterItem::set_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.FilterItem.field)
}
inline std::string* FilterItem::mutable_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:common.FilterItem.field)
  return _s;
}
inline const std::string& FilterItem::_internal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_.Get();
}
inline void FilterItem::_internal_set_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(value, GetArena());
}
inline std::string* FilterItem::_internal_mutable_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_.Mutable( GetArena());
}
inline std::string* FilterItem::release_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.FilterItem.field)
  return _impl_.field_.Release();
}
inline void FilterItem::set_allocated_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.field_.IsDefault()) {
          _impl_.field_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.FilterItem.field)
}

// .common.FilterItem.FilterOperator operator = 2;
inline void FilterItem::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::common::FilterItem_FilterOperator FilterItem::operator_() const {
  // @@protoc_insertion_point(field_get:common.FilterItem.operator)
  return _internal_operator_();
}
inline void FilterItem::set_operator_(::common::FilterItem_FilterOperator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:common.FilterItem.operator)
}
inline ::common::FilterItem_FilterOperator FilterItem::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::common::FilterItem_FilterOperator>(_impl_.operator__);
}
inline void FilterItem::_internal_set_operator_(::common::FilterItem_FilterOperator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// string str_value = 3;
inline bool FilterItem::has_str_value() const {
  return value_case() == kStrValue;
}
inline void FilterItem::set_has_str_value() {
  _impl_._oneof_case_[0] = kStrValue;
}
inline void FilterItem::clear_str_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kStrValue) {
    _impl_.value_.str_value_.Destroy();
    clear_has_value();
  }
}
inline const std::string& FilterItem::str_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.FilterItem.str_value)
  return _internal_str_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FilterItem::set_str_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrValue) {
    clear_value();

    set_has_str_value();
    _impl_.value_.str_value_.InitDefault();
  }
  _impl_.value_.str_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.FilterItem.str_value)
}
inline std::string* FilterItem::mutable_str_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str_value();
  // @@protoc_insertion_point(field_mutable:common.FilterItem.str_value)
  return _s;
}
inline const std::string& FilterItem::_internal_str_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kStrValue) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.str_value_.Get();
}
inline void FilterItem::_internal_set_str_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrValue) {
    clear_value();

    set_has_str_value();
    _impl_.value_.str_value_.InitDefault();
  }
  _impl_.value_.str_value_.Set(value, GetArena());
}
inline std::string* FilterItem::_internal_mutable_str_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrValue) {
    clear_value();

    set_has_str_value();
    _impl_.value_.str_value_.InitDefault();
  }
  return _impl_.value_.str_value_.Mutable( GetArena());
}
inline std::string* FilterItem::release_str_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.FilterItem.str_value)
  if (value_case() != kStrValue) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.str_value_.Release();
}
inline void FilterItem::set_allocated_str_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_str_value();
    _impl_.value_.str_value_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:common.FilterItem.str_value)
}

// int64 int_value = 4;
inline bool FilterItem::has_int_value() const {
  return value_case() == kIntValue;
}
inline void FilterItem::set_has_int_value() {
  _impl_._oneof_case_[0] = kIntValue;
}
inline void FilterItem::clear_int_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kIntValue) {
    _impl_.value_.int_value_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t FilterItem::int_value() const {
  // @@protoc_insertion_point(field_get:common.FilterItem.int_value)
  return _internal_int_value();
}
inline void FilterItem::set_int_value(::int64_t value) {
  if (value_case() != kIntValue) {
    clear_value();
    set_has_int_value();
  }
  _impl_.value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:common.FilterItem.int_value)
}
inline ::int64_t FilterItem::_internal_int_value() const {
  if (value_case() == kIntValue) {
    return _impl_.value_.int_value_;
  }
  return ::int64_t{0};
}

// bool bool_value = 5;
inline bool FilterItem::has_bool_value() const {
  return value_case() == kBoolValue;
}
inline void FilterItem::set_has_bool_value() {
  _impl_._oneof_case_[0] = kBoolValue;
}
inline void FilterItem::clear_bool_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBoolValue) {
    _impl_.value_.bool_value_ = false;
    clear_has_value();
  }
}
inline bool FilterItem::bool_value() const {
  // @@protoc_insertion_point(field_get:common.FilterItem.bool_value)
  return _internal_bool_value();
}
inline void FilterItem::set_bool_value(bool value) {
  if (value_case() != kBoolValue) {
    clear_value();
    set_has_bool_value();
  }
  _impl_.value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:common.FilterItem.bool_value)
}
inline bool FilterItem::_internal_bool_value() const {
  if (value_case() == kBoolValue) {
    return _impl_.value_.bool_value_;
  }
  return false;
}

// string rfc3339_datetime_value = 6;
inline bool FilterItem::has_rfc3339_datetime_value() const {
  return value_case() == kRfc3339DatetimeValue;
}
inline void FilterItem::set_has_rfc3339_datetime_value() {
  _impl_._oneof_case_[0] = kRfc3339DatetimeValue;
}
inline void FilterItem::clear_rfc3339_datetime_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kRfc3339DatetimeValue) {
    _impl_.value_.rfc3339_datetime_value_.Destroy();
    clear_has_value();
  }
}
inline const std::string& FilterItem::rfc3339_datetime_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.FilterItem.rfc3339_datetime_value)
  return _internal_rfc3339_datetime_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FilterItem::set_rfc3339_datetime_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kRfc3339DatetimeValue) {
    clear_value();

    set_has_rfc3339_datetime_value();
    _impl_.value_.rfc3339_datetime_value_.InitDefault();
  }
  _impl_.value_.rfc3339_datetime_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.FilterItem.rfc3339_datetime_value)
}
inline std::string* FilterItem::mutable_rfc3339_datetime_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rfc3339_datetime_value();
  // @@protoc_insertion_point(field_mutable:common.FilterItem.rfc3339_datetime_value)
  return _s;
}
inline const std::string& FilterItem::_internal_rfc3339_datetime_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kRfc3339DatetimeValue) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.rfc3339_datetime_value_.Get();
}
inline void FilterItem::_internal_set_rfc3339_datetime_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kRfc3339DatetimeValue) {
    clear_value();

    set_has_rfc3339_datetime_value();
    _impl_.value_.rfc3339_datetime_value_.InitDefault();
  }
  _impl_.value_.rfc3339_datetime_value_.Set(value, GetArena());
}
inline std::string* FilterItem::_internal_mutable_rfc3339_datetime_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kRfc3339DatetimeValue) {
    clear_value();

    set_has_rfc3339_datetime_value();
    _impl_.value_.rfc3339_datetime_value_.InitDefault();
  }
  return _impl_.value_.rfc3339_datetime_value_.Mutable( GetArena());
}
inline std::string* FilterItem::release_rfc3339_datetime_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.FilterItem.rfc3339_datetime_value)
  if (value_case() != kRfc3339DatetimeValue) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.rfc3339_datetime_value_.Release();
}
inline void FilterItem::set_allocated_rfc3339_datetime_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_rfc3339_datetime_value();
    _impl_.value_.rfc3339_datetime_value_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:common.FilterItem.rfc3339_datetime_value)
}

// string uuid_value = 7;
inline bool FilterItem::has_uuid_value() const {
  return value_case() == kUuidValue;
}
inline void FilterItem::set_has_uuid_value() {
  _impl_._oneof_case_[0] = kUuidValue;
}
inline void FilterItem::clear_uuid_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kUuidValue) {
    _impl_.value_.uuid_value_.Destroy();
    clear_has_value();
  }
}
inline const std::string& FilterItem::uuid_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.FilterItem.uuid_value)
  return _internal_uuid_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FilterItem::set_uuid_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kUuidValue) {
    clear_value();

    set_has_uuid_value();
    _impl_.value_.uuid_value_.InitDefault();
  }
  _impl_.value_.uuid_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.FilterItem.uuid_value)
}
inline std::string* FilterItem::mutable_uuid_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid_value();
  // @@protoc_insertion_point(field_mutable:common.FilterItem.uuid_value)
  return _s;
}
inline const std::string& FilterItem::_internal_uuid_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kUuidValue) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.uuid_value_.Get();
}
inline void FilterItem::_internal_set_uuid_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kUuidValue) {
    clear_value();

    set_has_uuid_value();
    _impl_.value_.uuid_value_.InitDefault();
  }
  _impl_.value_.uuid_value_.Set(value, GetArena());
}
inline std::string* FilterItem::_internal_mutable_uuid_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kUuidValue) {
    clear_value();

    set_has_uuid_value();
    _impl_.value_.uuid_value_.InitDefault();
  }
  return _impl_.value_.uuid_value_.Mutable( GetArena());
}
inline std::string* FilterItem::release_uuid_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.FilterItem.uuid_value)
  if (value_case() != kUuidValue) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.uuid_value_.Release();
}
inline void FilterItem::set_allocated_uuid_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_uuid_value();
    _impl_.value_.uuid_value_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:common.FilterItem.uuid_value)
}

inline bool FilterItem::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void FilterItem::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline FilterItem::ValueCase FilterItem::value_case() const {
  return FilterItem::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Filter

// repeated .common.FilterItem filters = 1;
inline int Filter::_internal_filters_size() const {
  return _internal_filters().size();
}
inline int Filter::filters_size() const {
  return _internal_filters_size();
}
inline void Filter::clear_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filters_.Clear();
}
inline ::common::FilterItem* Filter::mutable_filters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:common.Filter.filters)
  return _internal_mutable_filters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::FilterItem>* Filter::mutable_filters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common.Filter.filters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_filters();
}
inline const ::common::FilterItem& Filter::filters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.Filter.filters)
  return _internal_filters().Get(index);
}
inline ::common::FilterItem* Filter::add_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::FilterItem* _add = _internal_mutable_filters()->Add();
  // @@protoc_insertion_point(field_add:common.Filter.filters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::FilterItem>& Filter::filters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common.Filter.filters)
  return _internal_filters();
}
inline const ::google::protobuf::RepeatedPtrField<::common::FilterItem>&
Filter::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filters_;
}
inline ::google::protobuf::RepeatedPtrField<::common::FilterItem>*
Filter::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.filters_;
}

// .common.LogicalOperator operator = 2;
inline void Filter::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::common::LogicalOperator Filter::operator_() const {
  // @@protoc_insertion_point(field_get:common.Filter.operator)
  return _internal_operator_();
}
inline void Filter::set_operator_(::common::LogicalOperator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:common.Filter.operator)
}
inline ::common::LogicalOperator Filter::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::common::LogicalOperator>(_impl_.operator__);
}
inline void Filter::_internal_set_operator_(::common::LogicalOperator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// -------------------------------------------------------------------

// SortItem

// string field = 1;
inline void SortItem::clear_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.ClearToEmpty();
}
inline const std::string& SortItem::field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.SortItem.field)
  return _internal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SortItem::set_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.SortItem.field)
}
inline std::string* SortItem::mutable_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:common.SortItem.field)
  return _s;
}
inline const std::string& SortItem::_internal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_.Get();
}
inline void SortItem::_internal_set_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(value, GetArena());
}
inline std::string* SortItem::_internal_mutable_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_.Mutable( GetArena());
}
inline std::string* SortItem::release_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.SortItem.field)
  return _impl_.field_.Release();
}
inline void SortItem::set_allocated_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.field_.IsDefault()) {
          _impl_.field_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.SortItem.field)
}

// .common.SortDirection direction = 2;
inline void SortItem::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::common::SortDirection SortItem::direction() const {
  // @@protoc_insertion_point(field_get:common.SortItem.direction)
  return _internal_direction();
}
inline void SortItem::set_direction(::common::SortDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:common.SortItem.direction)
}
inline ::common::SortDirection SortItem::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::common::SortDirection>(_impl_.direction_);
}
inline void SortItem::_internal_set_direction(::common::SortDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// SortBy

// repeated .common.SortItem items = 1;
inline int SortBy::_internal_items_size() const {
  return _internal_items().size();
}
inline int SortBy::items_size() const {
  return _internal_items_size();
}
inline void SortBy::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::common::SortItem* SortBy::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:common.SortBy.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::SortItem>* SortBy::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common.SortBy.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::common::SortItem& SortBy::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.SortBy.items)
  return _internal_items().Get(index);
}
inline ::common::SortItem* SortBy::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::SortItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:common.SortBy.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::SortItem>& SortBy::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common.SortBy.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::common::SortItem>&
SortBy::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::common::SortItem>*
SortBy::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// AssetAuthority

// string verifier = 1;
inline void AssetAuthority::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.ClearToEmpty();
}
inline const std::string& AssetAuthority::verifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AssetAuthority.verifier)
  return _internal_verifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssetAuthority::set_verifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.AssetAuthority.verifier)
}
inline std::string* AssetAuthority::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:common.AssetAuthority.verifier)
  return _s;
}
inline const std::string& AssetAuthority::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifier_.Get();
}
inline void AssetAuthority::_internal_set_verifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(value, GetArena());
}
inline std::string* AssetAuthority::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifier_.Mutable( GetArena());
}
inline std::string* AssetAuthority::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AssetAuthority.verifier)
  return _impl_.verifier_.Release();
}
inline void AssetAuthority::set_allocated_verifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.verifier_.IsDefault()) {
          _impl_.verifier_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.AssetAuthority.verifier)
}

// string url = 2;
inline void AssetAuthority::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& AssetAuthority::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:common.AssetAuthority.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssetAuthority::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:common.AssetAuthority.url)
}
inline std::string* AssetAuthority::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:common.AssetAuthority.url)
  return _s;
}
inline const std::string& AssetAuthority::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void AssetAuthority::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* AssetAuthority::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* AssetAuthority::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:common.AssetAuthority.url)
  return _impl_.url_.Release();
}
inline void AssetAuthority::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:common.AssetAuthority.url)
}

// -------------------------------------------------------------------

// AssetDenomination

// repeated int64 denominations = 1;
inline int AssetDenomination::_internal_denominations_size() const {
  return _internal_denominations().size();
}
inline int AssetDenomination::denominations_size() const {
  return _internal_denominations_size();
}
inline void AssetDenomination::clear_denominations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denominations_.Clear();
}
inline ::int64_t AssetDenomination::denominations(int index) const {
  // @@protoc_insertion_point(field_get:common.AssetDenomination.denominations)
  return _internal_denominations().Get(index);
}
inline void AssetDenomination::set_denominations(int index, ::int64_t value) {
  _internal_mutable_denominations()->Set(index, value);
  // @@protoc_insertion_point(field_set:common.AssetDenomination.denominations)
}
inline void AssetDenomination::add_denominations(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_denominations()->Add(value);
  // @@protoc_insertion_point(field_add:common.AssetDenomination.denominations)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& AssetDenomination::denominations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common.AssetDenomination.denominations)
  return _internal_denominations();
}
inline ::google::protobuf::RepeatedField<::int64_t>* AssetDenomination::mutable_denominations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common.AssetDenomination.denominations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_denominations();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
AssetDenomination::_internal_denominations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.denominations_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* AssetDenomination::_internal_mutable_denominations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.denominations_;
}

// uint32 precision = 2;
inline void AssetDenomination::clear_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = 0u;
}
inline ::uint32_t AssetDenomination::precision() const {
  // @@protoc_insertion_point(field_get:common.AssetDenomination.precision)
  return _internal_precision();
}
inline void AssetDenomination::set_precision(::uint32_t value) {
  _internal_set_precision(value);
  // @@protoc_insertion_point(field_set:common.AssetDenomination.precision)
}
inline ::uint32_t AssetDenomination::_internal_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.precision_;
}
inline void AssetDenomination::_internal_set_precision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace common


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::common::FilterItem_FilterOperator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::common::FilterItem_FilterOperator>() {
  return ::common::FilterItem_FilterOperator_descriptor();
}
template <>
struct is_proto_enum<::common::ServiceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::common::ServiceType>() {
  return ::common::ServiceType_descriptor();
}
template <>
struct is_proto_enum<::common::SignatureSystem> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::common::SignatureSystem>() {
  return ::common::SignatureSystem_descriptor();
}
template <>
struct is_proto_enum<::common::LogicalOperator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::common::LogicalOperator>() {
  return ::common::LogicalOperator_descriptor();
}
template <>
struct is_proto_enum<::common::SortDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::common::SortDirection>() {
  return ::common::SortDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fv1_2fcommon_2eproto_2epb_2eh
