// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: registry_api/v1/registry.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_registry_5fapi_2fv1_2fregistry_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_registry_5fapi_2fv1_2fregistry_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_registry_5fapi_2fv1_2fregistry_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_registry_5fapi_2fv1_2fregistry_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_registry_5fapi_2fv1_2fregistry_2eproto;
namespace registry_api {
namespace v1 {
class CreateCredentialIssuerRequest;
struct CreateCredentialIssuerRequestDefaultTypeInternal;
extern CreateCredentialIssuerRequestDefaultTypeInternal _CreateCredentialIssuerRequest_default_instance_;
class CreateCredentialIssuerResponse;
struct CreateCredentialIssuerResponseDefaultTypeInternal;
extern CreateCredentialIssuerResponseDefaultTypeInternal _CreateCredentialIssuerResponse_default_instance_;
class CreateRequest;
struct CreateRequestDefaultTypeInternal;
extern CreateRequestDefaultTypeInternal _CreateRequest_default_instance_;
class CreateResponse;
struct CreateResponseDefaultTypeInternal;
extern CreateResponseDefaultTypeInternal _CreateResponse_default_instance_;
class CreateStatusListEntryRequest;
struct CreateStatusListEntryRequestDefaultTypeInternal;
extern CreateStatusListEntryRequestDefaultTypeInternal _CreateStatusListEntryRequest_default_instance_;
class CreateStatusListEntryResponse;
struct CreateStatusListEntryResponseDefaultTypeInternal;
extern CreateStatusListEntryResponseDefaultTypeInternal _CreateStatusListEntryResponse_default_instance_;
class CredentialIssuer;
struct CredentialIssuerDefaultTypeInternal;
extern CredentialIssuerDefaultTypeInternal _CredentialIssuer_default_instance_;
class DidDocumentMetadata;
struct DidDocumentMetadataDefaultTypeInternal;
extern DidDocumentMetadataDefaultTypeInternal _DidDocumentMetadata_default_instance_;
class GetCredentialIssuerRequest;
struct GetCredentialIssuerRequestDefaultTypeInternal;
extern GetCredentialIssuerRequestDefaultTypeInternal _GetCredentialIssuerRequest_default_instance_;
class GetCredentialIssuerResponse;
struct GetCredentialIssuerResponseDefaultTypeInternal;
extern GetCredentialIssuerResponseDefaultTypeInternal _GetCredentialIssuerResponse_default_instance_;
class GetStatusListCredentialRequest;
struct GetStatusListCredentialRequestDefaultTypeInternal;
extern GetStatusListCredentialRequestDefaultTypeInternal _GetStatusListCredentialRequest_default_instance_;
class GetStatusListCredentialResponse;
struct GetStatusListCredentialResponseDefaultTypeInternal;
extern GetStatusListCredentialResponseDefaultTypeInternal _GetStatusListCredentialResponse_default_instance_;
class PostalAddress;
struct PostalAddressDefaultTypeInternal;
extern PostalAddressDefaultTypeInternal _PostalAddress_default_instance_;
class ResolutionMetadata;
struct ResolutionMetadataDefaultTypeInternal;
extern ResolutionMetadataDefaultTypeInternal _ResolutionMetadata_default_instance_;
class ResolutionMetadataDidUrl;
struct ResolutionMetadataDidUrlDefaultTypeInternal;
extern ResolutionMetadataDidUrlDefaultTypeInternal _ResolutionMetadataDidUrl_default_instance_;
class ResolutionOption;
struct ResolutionOptionDefaultTypeInternal;
extern ResolutionOptionDefaultTypeInternal _ResolutionOption_default_instance_;
class ResolveRepresentationRequest;
struct ResolveRepresentationRequestDefaultTypeInternal;
extern ResolveRepresentationRequestDefaultTypeInternal _ResolveRepresentationRequest_default_instance_;
class ResolveRepresentationResponse;
struct ResolveRepresentationResponseDefaultTypeInternal;
extern ResolveRepresentationResponseDefaultTypeInternal _ResolveRepresentationResponse_default_instance_;
class ResolveRequest;
struct ResolveRequestDefaultTypeInternal;
extern ResolveRequestDefaultTypeInternal _ResolveRequest_default_instance_;
class ResolveResponse;
struct ResolveResponseDefaultTypeInternal;
extern ResolveResponseDefaultTypeInternal _ResolveResponse_default_instance_;
class RevokeRequest;
struct RevokeRequestDefaultTypeInternal;
extern RevokeRequestDefaultTypeInternal _RevokeRequest_default_instance_;
class RevokeResponse;
struct RevokeResponseDefaultTypeInternal;
extern RevokeResponseDefaultTypeInternal _RevokeResponse_default_instance_;
class StatusListEntry;
struct StatusListEntryDefaultTypeInternal;
extern StatusListEntryDefaultTypeInternal _StatusListEntry_default_instance_;
class UpdateCredentialIssuerRequest;
struct UpdateCredentialIssuerRequestDefaultTypeInternal;
extern UpdateCredentialIssuerRequestDefaultTypeInternal _UpdateCredentialIssuerRequest_default_instance_;
class UpdateCredentialIssuerResponse;
struct UpdateCredentialIssuerResponseDefaultTypeInternal;
extern UpdateCredentialIssuerResponseDefaultTypeInternal _UpdateCredentialIssuerResponse_default_instance_;
class UpdateRequest;
struct UpdateRequestDefaultTypeInternal;
extern UpdateRequestDefaultTypeInternal _UpdateRequest_default_instance_;
class UpdateResponse;
struct UpdateResponseDefaultTypeInternal;
extern UpdateResponseDefaultTypeInternal _UpdateResponse_default_instance_;
class UpdateStatusListEntryRequest;
struct UpdateStatusListEntryRequestDefaultTypeInternal;
extern UpdateStatusListEntryRequestDefaultTypeInternal _UpdateStatusListEntryRequest_default_instance_;
class UpdateStatusListEntryResponse;
struct UpdateStatusListEntryResponseDefaultTypeInternal;
extern UpdateStatusListEntryResponseDefaultTypeInternal _UpdateStatusListEntryResponse_default_instance_;
}  // namespace v1
}  // namespace registry_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace registry_api {
namespace v1 {
enum ResolutionOptionAccept : int {
  RESOLUTION_OPTION_ACCEPT_UNSPECIFIED = 0,
  RESOLUTION_OPTION_ACCEPT_JSON_LD = 1,
  ResolutionOptionAccept_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ResolutionOptionAccept_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ResolutionOptionAccept_IsValid(int value);
extern const uint32_t ResolutionOptionAccept_internal_data_[];
constexpr ResolutionOptionAccept ResolutionOptionAccept_MIN = static_cast<ResolutionOptionAccept>(0);
constexpr ResolutionOptionAccept ResolutionOptionAccept_MAX = static_cast<ResolutionOptionAccept>(1);
constexpr int ResolutionOptionAccept_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
ResolutionOptionAccept_descriptor();
template <typename T>
const std::string& ResolutionOptionAccept_Name(T value) {
  static_assert(std::is_same<T, ResolutionOptionAccept>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResolutionOptionAccept_Name().");
  return ResolutionOptionAccept_Name(static_cast<ResolutionOptionAccept>(value));
}
template <>
inline const std::string& ResolutionOptionAccept_Name(ResolutionOptionAccept value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ResolutionOptionAccept_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ResolutionOptionAccept_Parse(absl::string_view name, ResolutionOptionAccept* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResolutionOptionAccept>(
      ResolutionOptionAccept_descriptor(), name, value);
}
enum IssuerStatus : int {
  ISSUER_STATUS_UNSPECIFIED = 0,
  ISSUER_STATUS_ACTIVE = 1,
  ISSUER_STATUS_SUSPENDED = 2,
  IssuerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  IssuerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool IssuerStatus_IsValid(int value);
extern const uint32_t IssuerStatus_internal_data_[];
constexpr IssuerStatus IssuerStatus_MIN = static_cast<IssuerStatus>(0);
constexpr IssuerStatus IssuerStatus_MAX = static_cast<IssuerStatus>(2);
constexpr int IssuerStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
IssuerStatus_descriptor();
template <typename T>
const std::string& IssuerStatus_Name(T value) {
  static_assert(std::is_same<T, IssuerStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to IssuerStatus_Name().");
  return IssuerStatus_Name(static_cast<IssuerStatus>(value));
}
template <>
inline const std::string& IssuerStatus_Name(IssuerStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<IssuerStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool IssuerStatus_Parse(absl::string_view name, IssuerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IssuerStatus>(
      IssuerStatus_descriptor(), name, value);
}
enum StatusPurpose : int {
  STATUS_PURPOSE_UNSPECIFIED = 0,
  STATUS_PURPOSE_REVOCATION = 1,
  STATUS_PURPOSE_SUSPENSION = 2,
  StatusPurpose_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StatusPurpose_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StatusPurpose_IsValid(int value);
extern const uint32_t StatusPurpose_internal_data_[];
constexpr StatusPurpose StatusPurpose_MIN = static_cast<StatusPurpose>(0);
constexpr StatusPurpose StatusPurpose_MAX = static_cast<StatusPurpose>(2);
constexpr int StatusPurpose_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
StatusPurpose_descriptor();
template <typename T>
const std::string& StatusPurpose_Name(T value) {
  static_assert(std::is_same<T, StatusPurpose>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StatusPurpose_Name().");
  return StatusPurpose_Name(static_cast<StatusPurpose>(value));
}
template <>
inline const std::string& StatusPurpose_Name(StatusPurpose value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StatusPurpose_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool StatusPurpose_Parse(absl::string_view name, StatusPurpose* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusPurpose>(
      StatusPurpose_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateStatusListEntryResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:registry_api.v1.UpdateStatusListEntryResponse) */ {
 public:
  inline UpdateStatusListEntryResponse() : UpdateStatusListEntryResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateStatusListEntryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateStatusListEntryResponse(const UpdateStatusListEntryResponse& from) : UpdateStatusListEntryResponse(nullptr, from) {}
  inline UpdateStatusListEntryResponse(UpdateStatusListEntryResponse&& from) noexcept
      : UpdateStatusListEntryResponse(nullptr, std::move(from)) {}
  inline UpdateStatusListEntryResponse& operator=(const UpdateStatusListEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateStatusListEntryResponse& operator=(UpdateStatusListEntryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateStatusListEntryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateStatusListEntryResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateStatusListEntryResponse*>(
        &_UpdateStatusListEntryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(UpdateStatusListEntryResponse& a, UpdateStatusListEntryResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateStatusListEntryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateStatusListEntryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateStatusListEntryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UpdateStatusListEntryResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateStatusListEntryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateStatusListEntryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.UpdateStatusListEntryResponse"; }

 protected:
  explicit UpdateStatusListEntryResponse(::google::protobuf::Arena* arena);
  UpdateStatusListEntryResponse(::google::protobuf::Arena* arena, const UpdateStatusListEntryResponse& from);
  UpdateStatusListEntryResponse(::google::protobuf::Arena* arena, UpdateStatusListEntryResponse&& from) noexcept
      : UpdateStatusListEntryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:registry_api.v1.UpdateStatusListEntryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateStatusListEntryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateStatusListEntryResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class UpdateStatusListEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.UpdateStatusListEntryRequest) */ {
 public:
  inline UpdateStatusListEntryRequest() : UpdateStatusListEntryRequest(nullptr) {}
  ~UpdateStatusListEntryRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateStatusListEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateStatusListEntryRequest(const UpdateStatusListEntryRequest& from) : UpdateStatusListEntryRequest(nullptr, from) {}
  inline UpdateStatusListEntryRequest(UpdateStatusListEntryRequest&& from) noexcept
      : UpdateStatusListEntryRequest(nullptr, std::move(from)) {}
  inline UpdateStatusListEntryRequest& operator=(const UpdateStatusListEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateStatusListEntryRequest& operator=(UpdateStatusListEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateStatusListEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateStatusListEntryRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateStatusListEntryRequest*>(
        &_UpdateStatusListEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(UpdateStatusListEntryRequest& a, UpdateStatusListEntryRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateStatusListEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateStatusListEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateStatusListEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateStatusListEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateStatusListEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateStatusListEntryRequest& from) { UpdateStatusListEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateStatusListEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.UpdateStatusListEntryRequest"; }

 protected:
  explicit UpdateStatusListEntryRequest(::google::protobuf::Arena* arena);
  UpdateStatusListEntryRequest(::google::protobuf::Arena* arena, const UpdateStatusListEntryRequest& from);
  UpdateStatusListEntryRequest(::google::protobuf::Arena* arena, UpdateStatusListEntryRequest&& from) noexcept
      : UpdateStatusListEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialIdFieldNumber = 1,
    kCredentialIssuerIdFieldNumber = 2,
    kCredentialTypeFieldNumber = 4,
    kStatusPurposeFieldNumber = 3,
    kStatusFieldNumber = 5,
  };
  // string credential_id = 1;
  void clear_credential_id() ;
  const std::string& credential_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_id(Arg_&& arg, Args_... args);
  std::string* mutable_credential_id();
  PROTOBUF_NODISCARD std::string* release_credential_id();
  void set_allocated_credential_id(std::string* value);

  private:
  const std::string& _internal_credential_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_id(
      const std::string& value);
  std::string* _internal_mutable_credential_id();

  public:
  // string credential_issuer_id = 2;
  void clear_credential_issuer_id() ;
  const std::string& credential_issuer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_issuer_id(Arg_&& arg, Args_... args);
  std::string* mutable_credential_issuer_id();
  PROTOBUF_NODISCARD std::string* release_credential_issuer_id();
  void set_allocated_credential_issuer_id(std::string* value);

  private:
  const std::string& _internal_credential_issuer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_issuer_id(
      const std::string& value);
  std::string* _internal_mutable_credential_issuer_id();

  public:
  // string credential_type = 4;
  void clear_credential_type() ;
  const std::string& credential_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_type(Arg_&& arg, Args_... args);
  std::string* mutable_credential_type();
  PROTOBUF_NODISCARD std::string* release_credential_type();
  void set_allocated_credential_type(std::string* value);

  private:
  const std::string& _internal_credential_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_type(
      const std::string& value);
  std::string* _internal_mutable_credential_type();

  public:
  // .registry_api.v1.StatusPurpose status_purpose = 3;
  void clear_status_purpose() ;
  ::registry_api::v1::StatusPurpose status_purpose() const;
  void set_status_purpose(::registry_api::v1::StatusPurpose value);

  private:
  ::registry_api::v1::StatusPurpose _internal_status_purpose() const;
  void _internal_set_status_purpose(::registry_api::v1::StatusPurpose value);

  public:
  // bool status = 5;
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.UpdateStatusListEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      101, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateStatusListEntryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateStatusListEntryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr credential_id_;
    ::google::protobuf::internal::ArenaStringPtr credential_issuer_id_;
    ::google::protobuf::internal::ArenaStringPtr credential_type_;
    int status_purpose_;
    bool status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class UpdateResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:registry_api.v1.UpdateResponse) */ {
 public:
  inline UpdateResponse() : UpdateResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateResponse(const UpdateResponse& from) : UpdateResponse(nullptr, from) {}
  inline UpdateResponse(UpdateResponse&& from) noexcept
      : UpdateResponse(nullptr, std::move(from)) {}
  inline UpdateResponse& operator=(const UpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateResponse& operator=(UpdateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateResponse*>(
        &_UpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UpdateResponse& a, UpdateResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UpdateResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.UpdateResponse"; }

 protected:
  explicit UpdateResponse(::google::protobuf::Arena* arena);
  UpdateResponse(::google::protobuf::Arena* arena, const UpdateResponse& from);
  UpdateResponse(::google::protobuf::Arena* arena, UpdateResponse&& from) noexcept
      : UpdateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:registry_api.v1.UpdateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class UpdateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.UpdateRequest) */ {
 public:
  inline UpdateRequest() : UpdateRequest(nullptr) {}
  ~UpdateRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateRequest(const UpdateRequest& from) : UpdateRequest(nullptr, from) {}
  inline UpdateRequest(UpdateRequest&& from) noexcept
      : UpdateRequest(nullptr, std::move(from)) {}
  inline UpdateRequest& operator=(const UpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRequest& operator=(UpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRequest*>(
        &_UpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(UpdateRequest& a, UpdateRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateRequest& from) { UpdateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.UpdateRequest"; }

 protected:
  explicit UpdateRequest(::google::protobuf::Arena* arena);
  UpdateRequest(::google::protobuf::Arena* arena, const UpdateRequest& from);
  UpdateRequest(::google::protobuf::Arena* arena, UpdateRequest&& from) noexcept
      : UpdateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kDocumentFieldNumber = 2,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // string document = 2;
  void clear_document() ;
  const std::string& document() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document(Arg_&& arg, Args_... args);
  std::string* mutable_document();
  PROTOBUF_NODISCARD std::string* release_document();
  void set_allocated_document(std::string* value);

  private:
  const std::string& _internal_document() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document(
      const std::string& value);
  std::string* _internal_mutable_document();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.UpdateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr document_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class UpdateCredentialIssuerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.UpdateCredentialIssuerResponse) */ {
 public:
  inline UpdateCredentialIssuerResponse() : UpdateCredentialIssuerResponse(nullptr) {}
  ~UpdateCredentialIssuerResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCredentialIssuerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateCredentialIssuerResponse(const UpdateCredentialIssuerResponse& from) : UpdateCredentialIssuerResponse(nullptr, from) {}
  inline UpdateCredentialIssuerResponse(UpdateCredentialIssuerResponse&& from) noexcept
      : UpdateCredentialIssuerResponse(nullptr, std::move(from)) {}
  inline UpdateCredentialIssuerResponse& operator=(const UpdateCredentialIssuerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCredentialIssuerResponse& operator=(UpdateCredentialIssuerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCredentialIssuerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCredentialIssuerResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateCredentialIssuerResponse*>(
        &_UpdateCredentialIssuerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(UpdateCredentialIssuerResponse& a, UpdateCredentialIssuerResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateCredentialIssuerResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCredentialIssuerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCredentialIssuerResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateCredentialIssuerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateCredentialIssuerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateCredentialIssuerResponse& from) { UpdateCredentialIssuerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateCredentialIssuerResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.UpdateCredentialIssuerResponse"; }

 protected:
  explicit UpdateCredentialIssuerResponse(::google::protobuf::Arena* arena);
  UpdateCredentialIssuerResponse(::google::protobuf::Arena* arena, const UpdateCredentialIssuerResponse& from);
  UpdateCredentialIssuerResponse(::google::protobuf::Arena* arena, UpdateCredentialIssuerResponse&& from) noexcept
      : UpdateCredentialIssuerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOkFieldNumber = 1,
  };
  // bool ok = 1;
  void clear_ok() ;
  bool ok() const;
  void set_ok(bool value);

  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.UpdateCredentialIssuerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateCredentialIssuerResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateCredentialIssuerResponse& from_msg);
    bool ok_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class StatusListEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.StatusListEntry) */ {
 public:
  inline StatusListEntry() : StatusListEntry(nullptr) {}
  ~StatusListEntry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusListEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusListEntry(const StatusListEntry& from) : StatusListEntry(nullptr, from) {}
  inline StatusListEntry(StatusListEntry&& from) noexcept
      : StatusListEntry(nullptr, std::move(from)) {}
  inline StatusListEntry& operator=(const StatusListEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusListEntry& operator=(StatusListEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusListEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusListEntry* internal_default_instance() {
    return reinterpret_cast<const StatusListEntry*>(
        &_StatusListEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(StatusListEntry& a, StatusListEntry& b) { a.Swap(&b); }
  inline void Swap(StatusListEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusListEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusListEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StatusListEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusListEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StatusListEntry& from) { StatusListEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StatusListEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.StatusListEntry"; }

 protected:
  explicit StatusListEntry(::google::protobuf::Arena* arena);
  StatusListEntry(::google::protobuf::Arena* arena, const StatusListEntry& from);
  StatusListEntry(::google::protobuf::Arena* arena, StatusListEntry&& from) noexcept
      : StatusListEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialIdFieldNumber = 1,
    kCredentialIssuerIdFieldNumber = 2,
    kCredentialTypeFieldNumber = 4,
    kStatusListCredentialIdFieldNumber = 6,
    kStatusListIndexFieldNumber = 5,
    kStatusPurposeFieldNumber = 3,
    kStatusFieldNumber = 7,
  };
  // string credential_id = 1;
  void clear_credential_id() ;
  const std::string& credential_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_id(Arg_&& arg, Args_... args);
  std::string* mutable_credential_id();
  PROTOBUF_NODISCARD std::string* release_credential_id();
  void set_allocated_credential_id(std::string* value);

  private:
  const std::string& _internal_credential_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_id(
      const std::string& value);
  std::string* _internal_mutable_credential_id();

  public:
  // string credential_issuer_id = 2;
  void clear_credential_issuer_id() ;
  const std::string& credential_issuer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_issuer_id(Arg_&& arg, Args_... args);
  std::string* mutable_credential_issuer_id();
  PROTOBUF_NODISCARD std::string* release_credential_issuer_id();
  void set_allocated_credential_issuer_id(std::string* value);

  private:
  const std::string& _internal_credential_issuer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_issuer_id(
      const std::string& value);
  std::string* _internal_mutable_credential_issuer_id();

  public:
  // string credential_type = 4;
  void clear_credential_type() ;
  const std::string& credential_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_type(Arg_&& arg, Args_... args);
  std::string* mutable_credential_type();
  PROTOBUF_NODISCARD std::string* release_credential_type();
  void set_allocated_credential_type(std::string* value);

  private:
  const std::string& _internal_credential_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_type(
      const std::string& value);
  std::string* _internal_mutable_credential_type();

  public:
  // string status_list_credential_id = 6;
  void clear_status_list_credential_id() ;
  const std::string& status_list_credential_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_list_credential_id(Arg_&& arg, Args_... args);
  std::string* mutable_status_list_credential_id();
  PROTOBUF_NODISCARD std::string* release_status_list_credential_id();
  void set_allocated_status_list_credential_id(std::string* value);

  private:
  const std::string& _internal_status_list_credential_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_list_credential_id(
      const std::string& value);
  std::string* _internal_mutable_status_list_credential_id();

  public:
  // int64 status_list_index = 5;
  void clear_status_list_index() ;
  ::int64_t status_list_index() const;
  void set_status_list_index(::int64_t value);

  private:
  ::int64_t _internal_status_list_index() const;
  void _internal_set_status_list_index(::int64_t value);

  public:
  // .registry_api.v1.StatusPurpose status_purpose = 3;
  void clear_status_purpose() ;
  ::registry_api::v1::StatusPurpose status_purpose() const;
  void set_status_purpose(::registry_api::v1::StatusPurpose value);

  private:
  ::registry_api::v1::StatusPurpose _internal_status_purpose() const;
  void _internal_set_status_purpose(::registry_api::v1::StatusPurpose value);

  public:
  // bool status = 7;
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.StatusListEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      113, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StatusListEntry_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusListEntry& from_msg);
    ::google::protobuf::internal::ArenaStringPtr credential_id_;
    ::google::protobuf::internal::ArenaStringPtr credential_issuer_id_;
    ::google::protobuf::internal::ArenaStringPtr credential_type_;
    ::google::protobuf::internal::ArenaStringPtr status_list_credential_id_;
    ::int64_t status_list_index_;
    int status_purpose_;
    bool status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class RevokeResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:registry_api.v1.RevokeResponse) */ {
 public:
  inline RevokeResponse() : RevokeResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RevokeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RevokeResponse(const RevokeResponse& from) : RevokeResponse(nullptr, from) {}
  inline RevokeResponse(RevokeResponse&& from) noexcept
      : RevokeResponse(nullptr, std::move(from)) {}
  inline RevokeResponse& operator=(const RevokeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevokeResponse& operator=(RevokeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RevokeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RevokeResponse* internal_default_instance() {
    return reinterpret_cast<const RevokeResponse*>(
        &_RevokeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(RevokeResponse& a, RevokeResponse& b) { a.Swap(&b); }
  inline void Swap(RevokeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RevokeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RevokeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RevokeResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RevokeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RevokeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.RevokeResponse"; }

 protected:
  explicit RevokeResponse(::google::protobuf::Arena* arena);
  RevokeResponse(::google::protobuf::Arena* arena, const RevokeResponse& from);
  RevokeResponse(::google::protobuf::Arena* arena, RevokeResponse&& from) noexcept
      : RevokeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:registry_api.v1.RevokeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RevokeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RevokeResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class RevokeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.RevokeRequest) */ {
 public:
  inline RevokeRequest() : RevokeRequest(nullptr) {}
  ~RevokeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RevokeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RevokeRequest(const RevokeRequest& from) : RevokeRequest(nullptr, from) {}
  inline RevokeRequest(RevokeRequest&& from) noexcept
      : RevokeRequest(nullptr, std::move(from)) {}
  inline RevokeRequest& operator=(const RevokeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevokeRequest& operator=(RevokeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RevokeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RevokeRequest* internal_default_instance() {
    return reinterpret_cast<const RevokeRequest*>(
        &_RevokeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(RevokeRequest& a, RevokeRequest& b) { a.Swap(&b); }
  inline void Swap(RevokeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RevokeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RevokeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RevokeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RevokeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RevokeRequest& from) { RevokeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RevokeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.RevokeRequest"; }

 protected:
  explicit RevokeRequest(::google::protobuf::Arena* arena);
  RevokeRequest(::google::protobuf::Arena* arena, const RevokeRequest& from);
  RevokeRequest(::google::protobuf::Arena* arena, RevokeRequest&& from) noexcept
      : RevokeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kDocumentFieldNumber = 2,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // string document = 2;
  void clear_document() ;
  const std::string& document() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document(Arg_&& arg, Args_... args);
  std::string* mutable_document();
  PROTOBUF_NODISCARD std::string* release_document();
  void set_allocated_document(std::string* value);

  private:
  const std::string& _internal_document() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document(
      const std::string& value);
  std::string* _internal_mutable_document();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.RevokeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RevokeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RevokeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr document_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolutionOption final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolutionOption) */ {
 public:
  inline ResolutionOption() : ResolutionOption(nullptr) {}
  ~ResolutionOption() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolutionOption(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolutionOption(const ResolutionOption& from) : ResolutionOption(nullptr, from) {}
  inline ResolutionOption(ResolutionOption&& from) noexcept
      : ResolutionOption(nullptr, std::move(from)) {}
  inline ResolutionOption& operator=(const ResolutionOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolutionOption& operator=(ResolutionOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolutionOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolutionOption* internal_default_instance() {
    return reinterpret_cast<const ResolutionOption*>(
        &_ResolutionOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ResolutionOption& a, ResolutionOption& b) { a.Swap(&b); }
  inline void Swap(ResolutionOption* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolutionOption* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolutionOption* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolutionOption>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolutionOption& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolutionOption& from) { ResolutionOption::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolutionOption* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolutionOption"; }

 protected:
  explicit ResolutionOption(::google::protobuf::Arena* arena);
  ResolutionOption(::google::protobuf::Arena* arena, const ResolutionOption& from);
  ResolutionOption(::google::protobuf::Arena* arena, ResolutionOption&& from) noexcept
      : ResolutionOption(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcceptFieldNumber = 1,
  };
  // .registry_api.v1.ResolutionOptionAccept accept = 1;
  void clear_accept() ;
  ::registry_api::v1::ResolutionOptionAccept accept() const;
  void set_accept(::registry_api::v1::ResolutionOptionAccept value);

  private:
  ::registry_api::v1::ResolutionOptionAccept _internal_accept() const;
  void _internal_set_accept(::registry_api::v1::ResolutionOptionAccept value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolutionOption)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolutionOption_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolutionOption& from_msg);
    int accept_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolutionMetadataDidUrl final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolutionMetadataDidUrl) */ {
 public:
  inline ResolutionMetadataDidUrl() : ResolutionMetadataDidUrl(nullptr) {}
  ~ResolutionMetadataDidUrl() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolutionMetadataDidUrl(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolutionMetadataDidUrl(const ResolutionMetadataDidUrl& from) : ResolutionMetadataDidUrl(nullptr, from) {}
  inline ResolutionMetadataDidUrl(ResolutionMetadataDidUrl&& from) noexcept
      : ResolutionMetadataDidUrl(nullptr, std::move(from)) {}
  inline ResolutionMetadataDidUrl& operator=(const ResolutionMetadataDidUrl& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolutionMetadataDidUrl& operator=(ResolutionMetadataDidUrl&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolutionMetadataDidUrl& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolutionMetadataDidUrl* internal_default_instance() {
    return reinterpret_cast<const ResolutionMetadataDidUrl*>(
        &_ResolutionMetadataDidUrl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ResolutionMetadataDidUrl& a, ResolutionMetadataDidUrl& b) { a.Swap(&b); }
  inline void Swap(ResolutionMetadataDidUrl* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolutionMetadataDidUrl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolutionMetadataDidUrl* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolutionMetadataDidUrl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolutionMetadataDidUrl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolutionMetadataDidUrl& from) { ResolutionMetadataDidUrl::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolutionMetadataDidUrl* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolutionMetadataDidUrl"; }

 protected:
  explicit ResolutionMetadataDidUrl(::google::protobuf::Arena* arena);
  ResolutionMetadataDidUrl(::google::protobuf::Arena* arena, const ResolutionMetadataDidUrl& from);
  ResolutionMetadataDidUrl(::google::protobuf::Arena* arena, ResolutionMetadataDidUrl&& from) noexcept
      : ResolutionMetadataDidUrl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kMethodNameFieldNumber = 2,
    kMethodSpecificIdFieldNumber = 3,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // string methodName = 2;
  void clear_methodname() ;
  const std::string& methodname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_methodname(Arg_&& arg, Args_... args);
  std::string* mutable_methodname();
  PROTOBUF_NODISCARD std::string* release_methodname();
  void set_allocated_methodname(std::string* value);

  private:
  const std::string& _internal_methodname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_methodname(
      const std::string& value);
  std::string* _internal_mutable_methodname();

  public:
  // string methodSpecificId = 3;
  void clear_methodspecificid() ;
  const std::string& methodspecificid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_methodspecificid(Arg_&& arg, Args_... args);
  std::string* mutable_methodspecificid();
  PROTOBUF_NODISCARD std::string* release_methodspecificid();
  void set_allocated_methodspecificid(std::string* value);

  private:
  const std::string& _internal_methodspecificid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_methodspecificid(
      const std::string& value);
  std::string* _internal_mutable_methodspecificid();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolutionMetadataDidUrl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      78, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolutionMetadataDidUrl_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolutionMetadataDidUrl& from_msg);
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr methodname_;
    ::google::protobuf::internal::ArenaStringPtr methodspecificid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class PostalAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.PostalAddress) */ {
 public:
  inline PostalAddress() : PostalAddress(nullptr) {}
  ~PostalAddress() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostalAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostalAddress(const PostalAddress& from) : PostalAddress(nullptr, from) {}
  inline PostalAddress(PostalAddress&& from) noexcept
      : PostalAddress(nullptr, std::move(from)) {}
  inline PostalAddress& operator=(const PostalAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostalAddress& operator=(PostalAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostalAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostalAddress* internal_default_instance() {
    return reinterpret_cast<const PostalAddress*>(
        &_PostalAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(PostalAddress& a, PostalAddress& b) { a.Swap(&b); }
  inline void Swap(PostalAddress* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostalAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostalAddress* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PostalAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostalAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostalAddress& from) { PostalAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PostalAddress* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.PostalAddress"; }

 protected:
  explicit PostalAddress(::google::protobuf::Arena* arena);
  PostalAddress(::google::protobuf::Arena* arena, const PostalAddress& from);
  PostalAddress(::google::protobuf::Arena* arena, PostalAddress&& from) noexcept
      : PostalAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountryFieldNumber = 1,
    kCityFieldNumber = 2,
    kStateFieldNumber = 3,
    kPostalCodeFieldNumber = 4,
    kStreetFieldNumber = 5,
  };
  // string country = 1;
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // string city = 2;
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // string state = 3;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // string postal_code = 4;
  void clear_postal_code() ;
  const std::string& postal_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_postal_code(Arg_&& arg, Args_... args);
  std::string* mutable_postal_code();
  PROTOBUF_NODISCARD std::string* release_postal_code();
  void set_allocated_postal_code(std::string* value);

  private:
  const std::string& _internal_postal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_postal_code(
      const std::string& value);
  std::string* _internal_mutable_postal_code();

  public:
  // string street = 5;
  void clear_street() ;
  const std::string& street() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_street(Arg_&& arg, Args_... args);
  std::string* mutable_street();
  PROTOBUF_NODISCARD std::string* release_street();
  void set_allocated_street(std::string* value);

  private:
  const std::string& _internal_street() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_street(
      const std::string& value);
  std::string* _internal_mutable_street();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.PostalAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PostalAddress_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostalAddress& from_msg);
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::google::protobuf::internal::ArenaStringPtr postal_code_;
    ::google::protobuf::internal::ArenaStringPtr street_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class GetStatusListCredentialResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.GetStatusListCredentialResponse) */ {
 public:
  inline GetStatusListCredentialResponse() : GetStatusListCredentialResponse(nullptr) {}
  ~GetStatusListCredentialResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatusListCredentialResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStatusListCredentialResponse(const GetStatusListCredentialResponse& from) : GetStatusListCredentialResponse(nullptr, from) {}
  inline GetStatusListCredentialResponse(GetStatusListCredentialResponse&& from) noexcept
      : GetStatusListCredentialResponse(nullptr, std::move(from)) {}
  inline GetStatusListCredentialResponse& operator=(const GetStatusListCredentialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusListCredentialResponse& operator=(GetStatusListCredentialResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusListCredentialResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusListCredentialResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatusListCredentialResponse*>(
        &_GetStatusListCredentialResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(GetStatusListCredentialResponse& a, GetStatusListCredentialResponse& b) { a.Swap(&b); }
  inline void Swap(GetStatusListCredentialResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusListCredentialResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatusListCredentialResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetStatusListCredentialResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatusListCredentialResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStatusListCredentialResponse& from) { GetStatusListCredentialResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatusListCredentialResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.GetStatusListCredentialResponse"; }

 protected:
  explicit GetStatusListCredentialResponse(::google::protobuf::Arena* arena);
  GetStatusListCredentialResponse(::google::protobuf::Arena* arena, const GetStatusListCredentialResponse& from);
  GetStatusListCredentialResponse(::google::protobuf::Arena* arena, GetStatusListCredentialResponse&& from) noexcept
      : GetStatusListCredentialResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusListCredentialFieldNumber = 1,
  };
  // string status_list_credential = 1;
  void clear_status_list_credential() ;
  const std::string& status_list_credential() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_list_credential(Arg_&& arg, Args_... args);
  std::string* mutable_status_list_credential();
  PROTOBUF_NODISCARD std::string* release_status_list_credential();
  void set_allocated_status_list_credential(std::string* value);

  private:
  const std::string& _internal_status_list_credential() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_list_credential(
      const std::string& value);
  std::string* _internal_mutable_status_list_credential();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.GetStatusListCredentialResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      78, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetStatusListCredentialResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStatusListCredentialResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_list_credential_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class GetStatusListCredentialRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.GetStatusListCredentialRequest) */ {
 public:
  inline GetStatusListCredentialRequest() : GetStatusListCredentialRequest(nullptr) {}
  ~GetStatusListCredentialRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatusListCredentialRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStatusListCredentialRequest(const GetStatusListCredentialRequest& from) : GetStatusListCredentialRequest(nullptr, from) {}
  inline GetStatusListCredentialRequest(GetStatusListCredentialRequest&& from) noexcept
      : GetStatusListCredentialRequest(nullptr, std::move(from)) {}
  inline GetStatusListCredentialRequest& operator=(const GetStatusListCredentialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusListCredentialRequest& operator=(GetStatusListCredentialRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusListCredentialRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusListCredentialRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatusListCredentialRequest*>(
        &_GetStatusListCredentialRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(GetStatusListCredentialRequest& a, GetStatusListCredentialRequest& b) { a.Swap(&b); }
  inline void Swap(GetStatusListCredentialRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusListCredentialRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatusListCredentialRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetStatusListCredentialRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatusListCredentialRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStatusListCredentialRequest& from) { GetStatusListCredentialRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatusListCredentialRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.GetStatusListCredentialRequest"; }

 protected:
  explicit GetStatusListCredentialRequest(::google::protobuf::Arena* arena);
  GetStatusListCredentialRequest(::google::protobuf::Arena* arena, const GetStatusListCredentialRequest& from);
  GetStatusListCredentialRequest(::google::protobuf::Arena* arena, GetStatusListCredentialRequest&& from) noexcept
      : GetStatusListCredentialRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusListCredentialIdFieldNumber = 1,
  };
  // string status_list_credential_id = 1;
  void clear_status_list_credential_id() ;
  const std::string& status_list_credential_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_list_credential_id(Arg_&& arg, Args_... args);
  std::string* mutable_status_list_credential_id();
  PROTOBUF_NODISCARD std::string* release_status_list_credential_id();
  void set_allocated_status_list_credential_id(std::string* value);

  private:
  const std::string& _internal_status_list_credential_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_list_credential_id(
      const std::string& value);
  std::string* _internal_mutable_status_list_credential_id();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.GetStatusListCredentialRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      80, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetStatusListCredentialRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStatusListCredentialRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_list_credential_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class GetCredentialIssuerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.GetCredentialIssuerRequest) */ {
 public:
  inline GetCredentialIssuerRequest() : GetCredentialIssuerRequest(nullptr) {}
  ~GetCredentialIssuerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCredentialIssuerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCredentialIssuerRequest(const GetCredentialIssuerRequest& from) : GetCredentialIssuerRequest(nullptr, from) {}
  inline GetCredentialIssuerRequest(GetCredentialIssuerRequest&& from) noexcept
      : GetCredentialIssuerRequest(nullptr, std::move(from)) {}
  inline GetCredentialIssuerRequest& operator=(const GetCredentialIssuerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCredentialIssuerRequest& operator=(GetCredentialIssuerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCredentialIssuerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCredentialIssuerRequest* internal_default_instance() {
    return reinterpret_cast<const GetCredentialIssuerRequest*>(
        &_GetCredentialIssuerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetCredentialIssuerRequest& a, GetCredentialIssuerRequest& b) { a.Swap(&b); }
  inline void Swap(GetCredentialIssuerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCredentialIssuerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCredentialIssuerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetCredentialIssuerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCredentialIssuerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCredentialIssuerRequest& from) { GetCredentialIssuerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCredentialIssuerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.GetCredentialIssuerRequest"; }

 protected:
  explicit GetCredentialIssuerRequest(::google::protobuf::Arena* arena);
  GetCredentialIssuerRequest(::google::protobuf::Arena* arena, const GetCredentialIssuerRequest& from);
  GetCredentialIssuerRequest(::google::protobuf::Arena* arena, GetCredentialIssuerRequest&& from) noexcept
      : GetCredentialIssuerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIssuerDidFieldNumber = 1,
  };
  // string issuer_did = 1;
  void clear_issuer_did() ;
  const std::string& issuer_did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer_did(Arg_&& arg, Args_... args);
  std::string* mutable_issuer_did();
  PROTOBUF_NODISCARD std::string* release_issuer_did();
  void set_allocated_issuer_did(std::string* value);

  private:
  const std::string& _internal_issuer_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer_did(
      const std::string& value);
  std::string* _internal_mutable_issuer_did();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.GetCredentialIssuerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetCredentialIssuerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCredentialIssuerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr issuer_did_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CreateStatusListEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.CreateStatusListEntryRequest) */ {
 public:
  inline CreateStatusListEntryRequest() : CreateStatusListEntryRequest(nullptr) {}
  ~CreateStatusListEntryRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateStatusListEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateStatusListEntryRequest(const CreateStatusListEntryRequest& from) : CreateStatusListEntryRequest(nullptr, from) {}
  inline CreateStatusListEntryRequest(CreateStatusListEntryRequest&& from) noexcept
      : CreateStatusListEntryRequest(nullptr, std::move(from)) {}
  inline CreateStatusListEntryRequest& operator=(const CreateStatusListEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateStatusListEntryRequest& operator=(CreateStatusListEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateStatusListEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateStatusListEntryRequest* internal_default_instance() {
    return reinterpret_cast<const CreateStatusListEntryRequest*>(
        &_CreateStatusListEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CreateStatusListEntryRequest& a, CreateStatusListEntryRequest& b) { a.Swap(&b); }
  inline void Swap(CreateStatusListEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateStatusListEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateStatusListEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateStatusListEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateStatusListEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateStatusListEntryRequest& from) { CreateStatusListEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateStatusListEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CreateStatusListEntryRequest"; }

 protected:
  explicit CreateStatusListEntryRequest(::google::protobuf::Arena* arena);
  CreateStatusListEntryRequest(::google::protobuf::Arena* arena, const CreateStatusListEntryRequest& from);
  CreateStatusListEntryRequest(::google::protobuf::Arena* arena, CreateStatusListEntryRequest&& from) noexcept
      : CreateStatusListEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialIdFieldNumber = 1,
    kCredentialIssuerIdFieldNumber = 2,
    kCredentialTypeFieldNumber = 4,
    kStatusPurposeFieldNumber = 3,
    kStatusFieldNumber = 5,
  };
  // string credential_id = 1;
  void clear_credential_id() ;
  const std::string& credential_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_id(Arg_&& arg, Args_... args);
  std::string* mutable_credential_id();
  PROTOBUF_NODISCARD std::string* release_credential_id();
  void set_allocated_credential_id(std::string* value);

  private:
  const std::string& _internal_credential_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_id(
      const std::string& value);
  std::string* _internal_mutable_credential_id();

  public:
  // string credential_issuer_id = 2;
  void clear_credential_issuer_id() ;
  const std::string& credential_issuer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_issuer_id(Arg_&& arg, Args_... args);
  std::string* mutable_credential_issuer_id();
  PROTOBUF_NODISCARD std::string* release_credential_issuer_id();
  void set_allocated_credential_issuer_id(std::string* value);

  private:
  const std::string& _internal_credential_issuer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_issuer_id(
      const std::string& value);
  std::string* _internal_mutable_credential_issuer_id();

  public:
  // string credential_type = 4;
  void clear_credential_type() ;
  const std::string& credential_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_type(Arg_&& arg, Args_... args);
  std::string* mutable_credential_type();
  PROTOBUF_NODISCARD std::string* release_credential_type();
  void set_allocated_credential_type(std::string* value);

  private:
  const std::string& _internal_credential_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_type(
      const std::string& value);
  std::string* _internal_mutable_credential_type();

  public:
  // .registry_api.v1.StatusPurpose status_purpose = 3;
  void clear_status_purpose() ;
  ::registry_api::v1::StatusPurpose status_purpose() const;
  void set_status_purpose(::registry_api::v1::StatusPurpose value);

  private:
  ::registry_api::v1::StatusPurpose _internal_status_purpose() const;
  void _internal_set_status_purpose(::registry_api::v1::StatusPurpose value);

  public:
  // bool status = 5;
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.CreateStatusListEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      101, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateStatusListEntryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateStatusListEntryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr credential_id_;
    ::google::protobuf::internal::ArenaStringPtr credential_issuer_id_;
    ::google::protobuf::internal::ArenaStringPtr credential_type_;
    int status_purpose_;
    bool status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CreateResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:registry_api.v1.CreateResponse) */ {
 public:
  inline CreateResponse() : CreateResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateResponse(const CreateResponse& from) : CreateResponse(nullptr, from) {}
  inline CreateResponse(CreateResponse&& from) noexcept
      : CreateResponse(nullptr, std::move(from)) {}
  inline CreateResponse& operator=(const CreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateResponse& operator=(CreateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateResponse* internal_default_instance() {
    return reinterpret_cast<const CreateResponse*>(
        &_CreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateResponse& a, CreateResponse& b) { a.Swap(&b); }
  inline void Swap(CreateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CreateResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CreateResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CreateResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CreateResponse"; }

 protected:
  explicit CreateResponse(::google::protobuf::Arena* arena);
  CreateResponse(::google::protobuf::Arena* arena, const CreateResponse& from);
  CreateResponse(::google::protobuf::Arena* arena, CreateResponse&& from) noexcept
      : CreateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:registry_api.v1.CreateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CreateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.CreateRequest) */ {
 public:
  inline CreateRequest() : CreateRequest(nullptr) {}
  ~CreateRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateRequest(const CreateRequest& from) : CreateRequest(nullptr, from) {}
  inline CreateRequest(CreateRequest&& from) noexcept
      : CreateRequest(nullptr, std::move(from)) {}
  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRequest& operator=(CreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateRequest* internal_default_instance() {
    return reinterpret_cast<const CreateRequest*>(
        &_CreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateRequest& a, CreateRequest& b) { a.Swap(&b); }
  inline void Swap(CreateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRequest& from) { CreateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CreateRequest"; }

 protected:
  explicit CreateRequest(::google::protobuf::Arena* arena);
  CreateRequest(::google::protobuf::Arena* arena, const CreateRequest& from);
  CreateRequest(::google::protobuf::Arena* arena, CreateRequest&& from) noexcept
      : CreateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kDocumentFieldNumber = 2,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // string document = 2;
  void clear_document() ;
  const std::string& document() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document(Arg_&& arg, Args_... args);
  std::string* mutable_document();
  PROTOBUF_NODISCARD std::string* release_document();
  void set_allocated_document(std::string* value);

  private:
  const std::string& _internal_document() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document(
      const std::string& value);
  std::string* _internal_mutable_document();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.CreateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr document_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CreateCredentialIssuerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.CreateCredentialIssuerResponse) */ {
 public:
  inline CreateCredentialIssuerResponse() : CreateCredentialIssuerResponse(nullptr) {}
  ~CreateCredentialIssuerResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCredentialIssuerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCredentialIssuerResponse(const CreateCredentialIssuerResponse& from) : CreateCredentialIssuerResponse(nullptr, from) {}
  inline CreateCredentialIssuerResponse(CreateCredentialIssuerResponse&& from) noexcept
      : CreateCredentialIssuerResponse(nullptr, std::move(from)) {}
  inline CreateCredentialIssuerResponse& operator=(const CreateCredentialIssuerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCredentialIssuerResponse& operator=(CreateCredentialIssuerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCredentialIssuerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCredentialIssuerResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCredentialIssuerResponse*>(
        &_CreateCredentialIssuerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CreateCredentialIssuerResponse& a, CreateCredentialIssuerResponse& b) { a.Swap(&b); }
  inline void Swap(CreateCredentialIssuerResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCredentialIssuerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCredentialIssuerResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateCredentialIssuerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCredentialIssuerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCredentialIssuerResponse& from) { CreateCredentialIssuerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateCredentialIssuerResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CreateCredentialIssuerResponse"; }

 protected:
  explicit CreateCredentialIssuerResponse(::google::protobuf::Arena* arena);
  CreateCredentialIssuerResponse(::google::protobuf::Arena* arena, const CreateCredentialIssuerResponse& from);
  CreateCredentialIssuerResponse(::google::protobuf::Arena* arena, CreateCredentialIssuerResponse&& from) noexcept
      : CreateCredentialIssuerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOkFieldNumber = 1,
  };
  // bool ok = 1;
  void clear_ok() ;
  bool ok() const;
  void set_ok(bool value);

  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.CreateCredentialIssuerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateCredentialIssuerResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCredentialIssuerResponse& from_msg);
    bool ok_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolveRequest) */ {
 public:
  inline ResolveRequest() : ResolveRequest(nullptr) {}
  ~ResolveRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolveRequest(const ResolveRequest& from) : ResolveRequest(nullptr, from) {}
  inline ResolveRequest(ResolveRequest&& from) noexcept
      : ResolveRequest(nullptr, std::move(from)) {}
  inline ResolveRequest& operator=(const ResolveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolveRequest& operator=(ResolveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolveRequest* internal_default_instance() {
    return reinterpret_cast<const ResolveRequest*>(
        &_ResolveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ResolveRequest& a, ResolveRequest& b) { a.Swap(&b); }
  inline void Swap(ResolveRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolveRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolveRequest& from) { ResolveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolveRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolveRequest"; }

 protected:
  explicit ResolveRequest(::google::protobuf::Arena* arena);
  ResolveRequest(::google::protobuf::Arena* arena, const ResolveRequest& from);
  ResolveRequest(::google::protobuf::Arena* arena, ResolveRequest&& from) noexcept
      : ResolveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kResolutionOptionFieldNumber = 2,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // .registry_api.v1.ResolutionOption resolutionOption = 2;
  bool has_resolutionoption() const;
  void clear_resolutionoption() ;
  const ::registry_api::v1::ResolutionOption& resolutionoption() const;
  PROTOBUF_NODISCARD ::registry_api::v1::ResolutionOption* release_resolutionoption();
  ::registry_api::v1::ResolutionOption* mutable_resolutionoption();
  void set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value);
  void unsafe_arena_set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value);
  ::registry_api::v1::ResolutionOption* unsafe_arena_release_resolutionoption();

  private:
  const ::registry_api::v1::ResolutionOption& _internal_resolutionoption() const;
  ::registry_api::v1::ResolutionOption* _internal_mutable_resolutionoption();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolveRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolveRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::registry_api::v1::ResolutionOption* resolutionoption_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolveRepresentationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolveRepresentationRequest) */ {
 public:
  inline ResolveRepresentationRequest() : ResolveRepresentationRequest(nullptr) {}
  ~ResolveRepresentationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolveRepresentationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolveRepresentationRequest(const ResolveRepresentationRequest& from) : ResolveRepresentationRequest(nullptr, from) {}
  inline ResolveRepresentationRequest(ResolveRepresentationRequest&& from) noexcept
      : ResolveRepresentationRequest(nullptr, std::move(from)) {}
  inline ResolveRepresentationRequest& operator=(const ResolveRepresentationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolveRepresentationRequest& operator=(ResolveRepresentationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolveRepresentationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolveRepresentationRequest* internal_default_instance() {
    return reinterpret_cast<const ResolveRepresentationRequest*>(
        &_ResolveRepresentationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ResolveRepresentationRequest& a, ResolveRepresentationRequest& b) { a.Swap(&b); }
  inline void Swap(ResolveRepresentationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolveRepresentationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolveRepresentationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolveRepresentationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolveRepresentationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolveRepresentationRequest& from) { ResolveRepresentationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolveRepresentationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolveRepresentationRequest"; }

 protected:
  explicit ResolveRepresentationRequest(::google::protobuf::Arena* arena);
  ResolveRepresentationRequest(::google::protobuf::Arena* arena, const ResolveRepresentationRequest& from);
  ResolveRepresentationRequest(::google::protobuf::Arena* arena, ResolveRepresentationRequest&& from) noexcept
      : ResolveRepresentationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kResolutionOptionFieldNumber = 2,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // .registry_api.v1.ResolutionOption resolutionOption = 2;
  bool has_resolutionoption() const;
  void clear_resolutionoption() ;
  const ::registry_api::v1::ResolutionOption& resolutionoption() const;
  PROTOBUF_NODISCARD ::registry_api::v1::ResolutionOption* release_resolutionoption();
  ::registry_api::v1::ResolutionOption* mutable_resolutionoption();
  void set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value);
  void unsafe_arena_set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value);
  ::registry_api::v1::ResolutionOption* unsafe_arena_release_resolutionoption();

  private:
  const ::registry_api::v1::ResolutionOption& _internal_resolutionoption() const;
  ::registry_api::v1::ResolutionOption* _internal_mutable_resolutionoption();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolveRepresentationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolveRepresentationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolveRepresentationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::registry_api::v1::ResolutionOption* resolutionoption_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolutionMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolutionMetadata) */ {
 public:
  inline ResolutionMetadata() : ResolutionMetadata(nullptr) {}
  ~ResolutionMetadata() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolutionMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolutionMetadata(const ResolutionMetadata& from) : ResolutionMetadata(nullptr, from) {}
  inline ResolutionMetadata(ResolutionMetadata&& from) noexcept
      : ResolutionMetadata(nullptr, std::move(from)) {}
  inline ResolutionMetadata& operator=(const ResolutionMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolutionMetadata& operator=(ResolutionMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolutionMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolutionMetadata* internal_default_instance() {
    return reinterpret_cast<const ResolutionMetadata*>(
        &_ResolutionMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ResolutionMetadata& a, ResolutionMetadata& b) { a.Swap(&b); }
  inline void Swap(ResolutionMetadata* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolutionMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolutionMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolutionMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolutionMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolutionMetadata& from) { ResolutionMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolutionMetadata* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolutionMetadata"; }

 protected:
  explicit ResolutionMetadata(::google::protobuf::Arena* arena);
  ResolutionMetadata(::google::protobuf::Arena* arena, const ResolutionMetadata& from);
  ResolutionMetadata(::google::protobuf::Arena* arena, ResolutionMetadata&& from) noexcept
      : ResolutionMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentTypeFieldNumber = 1,
    kErrorFieldNumber = 4,
    kDidUrlFieldNumber = 3,
    kDurationFieldNumber = 2,
  };
  // optional string contentType = 1;
  bool has_contenttype() const;
  void clear_contenttype() ;
  const std::string& contenttype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contenttype(Arg_&& arg, Args_... args);
  std::string* mutable_contenttype();
  PROTOBUF_NODISCARD std::string* release_contenttype();
  void set_allocated_contenttype(std::string* value);

  private:
  const std::string& _internal_contenttype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contenttype(
      const std::string& value);
  std::string* _internal_mutable_contenttype();

  public:
  // optional string error = 4;
  bool has_error() const;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // optional .registry_api.v1.ResolutionMetadataDidUrl didUrl = 3;
  bool has_didurl() const;
  void clear_didurl() ;
  const ::registry_api::v1::ResolutionMetadataDidUrl& didurl() const;
  PROTOBUF_NODISCARD ::registry_api::v1::ResolutionMetadataDidUrl* release_didurl();
  ::registry_api::v1::ResolutionMetadataDidUrl* mutable_didurl();
  void set_allocated_didurl(::registry_api::v1::ResolutionMetadataDidUrl* value);
  void unsafe_arena_set_allocated_didurl(::registry_api::v1::ResolutionMetadataDidUrl* value);
  ::registry_api::v1::ResolutionMetadataDidUrl* unsafe_arena_release_didurl();

  private:
  const ::registry_api::v1::ResolutionMetadataDidUrl& _internal_didurl() const;
  ::registry_api::v1::ResolutionMetadataDidUrl* _internal_mutable_didurl();

  public:
  // optional int64 duration = 2;
  bool has_duration() const;
  void clear_duration() ;
  ::int64_t duration() const;
  void set_duration(::int64_t value);

  private:
  ::int64_t _internal_duration() const;
  void _internal_set_duration(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolutionMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolutionMetadata_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolutionMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr contenttype_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::registry_api::v1::ResolutionMetadataDidUrl* didurl_;
    ::int64_t duration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class DidDocumentMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.DidDocumentMetadata) */ {
 public:
  inline DidDocumentMetadata() : DidDocumentMetadata(nullptr) {}
  ~DidDocumentMetadata() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DidDocumentMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline DidDocumentMetadata(const DidDocumentMetadata& from) : DidDocumentMetadata(nullptr, from) {}
  inline DidDocumentMetadata(DidDocumentMetadata&& from) noexcept
      : DidDocumentMetadata(nullptr, std::move(from)) {}
  inline DidDocumentMetadata& operator=(const DidDocumentMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DidDocumentMetadata& operator=(DidDocumentMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DidDocumentMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const DidDocumentMetadata* internal_default_instance() {
    return reinterpret_cast<const DidDocumentMetadata*>(
        &_DidDocumentMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DidDocumentMetadata& a, DidDocumentMetadata& b) { a.Swap(&b); }
  inline void Swap(DidDocumentMetadata* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DidDocumentMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DidDocumentMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DidDocumentMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DidDocumentMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DidDocumentMetadata& from) { DidDocumentMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DidDocumentMetadata* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.DidDocumentMetadata"; }

 protected:
  explicit DidDocumentMetadata(::google::protobuf::Arena* arena);
  DidDocumentMetadata(::google::protobuf::Arena* arena, const DidDocumentMetadata& from);
  DidDocumentMetadata(::google::protobuf::Arena* arena, DidDocumentMetadata&& from) noexcept
      : DidDocumentMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedFieldNumber = 1,
    kUpdatedFieldNumber = 2,
  };
  // .google.protobuf.Timestamp created = 1;
  bool has_created() const;
  void clear_created() ;
  const ::google::protobuf::Timestamp& created() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created();
  ::google::protobuf::Timestamp* mutable_created();
  void set_allocated_created(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created();

  private:
  const ::google::protobuf::Timestamp& _internal_created() const;
  ::google::protobuf::Timestamp* _internal_mutable_created();

  public:
  // .google.protobuf.Timestamp updated = 2;
  bool has_updated() const;
  void clear_updated() ;
  const ::google::protobuf::Timestamp& updated() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated();
  ::google::protobuf::Timestamp* mutable_updated();
  void set_allocated_updated(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated();

  private:
  const ::google::protobuf::Timestamp& _internal_updated() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.DidDocumentMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DidDocumentMetadata_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DidDocumentMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* created_;
    ::google::protobuf::Timestamp* updated_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CredentialIssuer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.CredentialIssuer) */ {
 public:
  inline CredentialIssuer() : CredentialIssuer(nullptr) {}
  ~CredentialIssuer() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CredentialIssuer(
      ::google::protobuf::internal::ConstantInitialized);

  inline CredentialIssuer(const CredentialIssuer& from) : CredentialIssuer(nullptr, from) {}
  inline CredentialIssuer(CredentialIssuer&& from) noexcept
      : CredentialIssuer(nullptr, std::move(from)) {}
  inline CredentialIssuer& operator=(const CredentialIssuer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CredentialIssuer& operator=(CredentialIssuer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CredentialIssuer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CredentialIssuer* internal_default_instance() {
    return reinterpret_cast<const CredentialIssuer*>(
        &_CredentialIssuer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CredentialIssuer& a, CredentialIssuer& b) { a.Swap(&b); }
  inline void Swap(CredentialIssuer* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CredentialIssuer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CredentialIssuer* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CredentialIssuer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CredentialIssuer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CredentialIssuer& from) { CredentialIssuer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CredentialIssuer* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CredentialIssuer"; }

 protected:
  explicit CredentialIssuer(::google::protobuf::Arena* arena);
  CredentialIssuer(::google::protobuf::Arena* arena, const CredentialIssuer& from);
  CredentialIssuer(::google::protobuf::Arena* arena, CredentialIssuer&& from) noexcept
      : CredentialIssuer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIssuerDidFieldNumber = 1,
    kIssuerNameFieldNumber = 2,
    kEmailFieldNumber = 3,
    kWebsiteFieldNumber = 4,
    kPostalAddressFieldNumber = 5,
    kMetadataFieldNumber = 7,
    kStatusFieldNumber = 6,
  };
  // string issuer_did = 1;
  void clear_issuer_did() ;
  const std::string& issuer_did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer_did(Arg_&& arg, Args_... args);
  std::string* mutable_issuer_did();
  PROTOBUF_NODISCARD std::string* release_issuer_did();
  void set_allocated_issuer_did(std::string* value);

  private:
  const std::string& _internal_issuer_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer_did(
      const std::string& value);
  std::string* _internal_mutable_issuer_did();

  public:
  // string issuer_name = 2;
  void clear_issuer_name() ;
  const std::string& issuer_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer_name(Arg_&& arg, Args_... args);
  std::string* mutable_issuer_name();
  PROTOBUF_NODISCARD std::string* release_issuer_name();
  void set_allocated_issuer_name(std::string* value);

  private:
  const std::string& _internal_issuer_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer_name(
      const std::string& value);
  std::string* _internal_mutable_issuer_name();

  public:
  // string email = 3;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string website = 4;
  void clear_website() ;
  const std::string& website() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_website(Arg_&& arg, Args_... args);
  std::string* mutable_website();
  PROTOBUF_NODISCARD std::string* release_website();
  void set_allocated_website(std::string* value);

  private:
  const std::string& _internal_website() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_website(
      const std::string& value);
  std::string* _internal_mutable_website();

  public:
  // .registry_api.v1.PostalAddress postal_address = 5;
  bool has_postal_address() const;
  void clear_postal_address() ;
  const ::registry_api::v1::PostalAddress& postal_address() const;
  PROTOBUF_NODISCARD ::registry_api::v1::PostalAddress* release_postal_address();
  ::registry_api::v1::PostalAddress* mutable_postal_address();
  void set_allocated_postal_address(::registry_api::v1::PostalAddress* value);
  void unsafe_arena_set_allocated_postal_address(::registry_api::v1::PostalAddress* value);
  ::registry_api::v1::PostalAddress* unsafe_arena_release_postal_address();

  private:
  const ::registry_api::v1::PostalAddress& _internal_postal_address() const;
  ::registry_api::v1::PostalAddress* _internal_mutable_postal_address();

  public:
  // .google.protobuf.Struct metadata = 7;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::google::protobuf::Struct& metadata() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_metadata();
  ::google::protobuf::Struct* mutable_metadata();
  void set_allocated_metadata(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_metadata(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_metadata();

  private:
  const ::google::protobuf::Struct& _internal_metadata() const;
  ::google::protobuf::Struct* _internal_mutable_metadata();

  public:
  // .registry_api.v1.IssuerStatus status = 6;
  void clear_status() ;
  ::registry_api::v1::IssuerStatus status() const;
  void set_status(::registry_api::v1::IssuerStatus value);

  private:
  ::registry_api::v1::IssuerStatus _internal_status() const;
  void _internal_set_status(::registry_api::v1::IssuerStatus value);

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.CredentialIssuer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CredentialIssuer_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CredentialIssuer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr issuer_did_;
    ::google::protobuf::internal::ArenaStringPtr issuer_name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr website_;
    ::registry_api::v1::PostalAddress* postal_address_;
    ::google::protobuf::Struct* metadata_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CreateStatusListEntryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.CreateStatusListEntryResponse) */ {
 public:
  inline CreateStatusListEntryResponse() : CreateStatusListEntryResponse(nullptr) {}
  ~CreateStatusListEntryResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateStatusListEntryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateStatusListEntryResponse(const CreateStatusListEntryResponse& from) : CreateStatusListEntryResponse(nullptr, from) {}
  inline CreateStatusListEntryResponse(CreateStatusListEntryResponse&& from) noexcept
      : CreateStatusListEntryResponse(nullptr, std::move(from)) {}
  inline CreateStatusListEntryResponse& operator=(const CreateStatusListEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateStatusListEntryResponse& operator=(CreateStatusListEntryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateStatusListEntryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateStatusListEntryResponse* internal_default_instance() {
    return reinterpret_cast<const CreateStatusListEntryResponse*>(
        &_CreateStatusListEntryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CreateStatusListEntryResponse& a, CreateStatusListEntryResponse& b) { a.Swap(&b); }
  inline void Swap(CreateStatusListEntryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateStatusListEntryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateStatusListEntryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateStatusListEntryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateStatusListEntryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateStatusListEntryResponse& from) { CreateStatusListEntryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateStatusListEntryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CreateStatusListEntryResponse"; }

 protected:
  explicit CreateStatusListEntryResponse(::google::protobuf::Arena* arena);
  CreateStatusListEntryResponse(::google::protobuf::Arena* arena, const CreateStatusListEntryResponse& from);
  CreateStatusListEntryResponse(::google::protobuf::Arena* arena, CreateStatusListEntryResponse&& from) noexcept
      : CreateStatusListEntryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusListEntryFieldNumber = 1,
  };
  // .registry_api.v1.StatusListEntry status_list_entry = 1;
  bool has_status_list_entry() const;
  void clear_status_list_entry() ;
  const ::registry_api::v1::StatusListEntry& status_list_entry() const;
  PROTOBUF_NODISCARD ::registry_api::v1::StatusListEntry* release_status_list_entry();
  ::registry_api::v1::StatusListEntry* mutable_status_list_entry();
  void set_allocated_status_list_entry(::registry_api::v1::StatusListEntry* value);
  void unsafe_arena_set_allocated_status_list_entry(::registry_api::v1::StatusListEntry* value);
  ::registry_api::v1::StatusListEntry* unsafe_arena_release_status_list_entry();

  private:
  const ::registry_api::v1::StatusListEntry& _internal_status_list_entry() const;
  ::registry_api::v1::StatusListEntry* _internal_mutable_status_list_entry();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.CreateStatusListEntryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateStatusListEntryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateStatusListEntryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::registry_api::v1::StatusListEntry* status_list_entry_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class UpdateCredentialIssuerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.UpdateCredentialIssuerRequest) */ {
 public:
  inline UpdateCredentialIssuerRequest() : UpdateCredentialIssuerRequest(nullptr) {}
  ~UpdateCredentialIssuerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCredentialIssuerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateCredentialIssuerRequest(const UpdateCredentialIssuerRequest& from) : UpdateCredentialIssuerRequest(nullptr, from) {}
  inline UpdateCredentialIssuerRequest(UpdateCredentialIssuerRequest&& from) noexcept
      : UpdateCredentialIssuerRequest(nullptr, std::move(from)) {}
  inline UpdateCredentialIssuerRequest& operator=(const UpdateCredentialIssuerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCredentialIssuerRequest& operator=(UpdateCredentialIssuerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCredentialIssuerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCredentialIssuerRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCredentialIssuerRequest*>(
        &_UpdateCredentialIssuerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(UpdateCredentialIssuerRequest& a, UpdateCredentialIssuerRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateCredentialIssuerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCredentialIssuerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCredentialIssuerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateCredentialIssuerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateCredentialIssuerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateCredentialIssuerRequest& from) { UpdateCredentialIssuerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateCredentialIssuerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.UpdateCredentialIssuerRequest"; }

 protected:
  explicit UpdateCredentialIssuerRequest(::google::protobuf::Arena* arena);
  UpdateCredentialIssuerRequest(::google::protobuf::Arena* arena, const UpdateCredentialIssuerRequest& from);
  UpdateCredentialIssuerRequest(::google::protobuf::Arena* arena, UpdateCredentialIssuerRequest&& from) noexcept
      : UpdateCredentialIssuerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialIssuerFieldNumber = 1,
  };
  // .registry_api.v1.CredentialIssuer credential_issuer = 1;
  bool has_credential_issuer() const;
  void clear_credential_issuer() ;
  const ::registry_api::v1::CredentialIssuer& credential_issuer() const;
  PROTOBUF_NODISCARD ::registry_api::v1::CredentialIssuer* release_credential_issuer();
  ::registry_api::v1::CredentialIssuer* mutable_credential_issuer();
  void set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value);
  void unsafe_arena_set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value);
  ::registry_api::v1::CredentialIssuer* unsafe_arena_release_credential_issuer();

  private:
  const ::registry_api::v1::CredentialIssuer& _internal_credential_issuer() const;
  ::registry_api::v1::CredentialIssuer* _internal_mutable_credential_issuer();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.UpdateCredentialIssuerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateCredentialIssuerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateCredentialIssuerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::registry_api::v1::CredentialIssuer* credential_issuer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolveResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolveResponse) */ {
 public:
  inline ResolveResponse() : ResolveResponse(nullptr) {}
  ~ResolveResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolveResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolveResponse(const ResolveResponse& from) : ResolveResponse(nullptr, from) {}
  inline ResolveResponse(ResolveResponse&& from) noexcept
      : ResolveResponse(nullptr, std::move(from)) {}
  inline ResolveResponse& operator=(const ResolveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolveResponse& operator=(ResolveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolveResponse* internal_default_instance() {
    return reinterpret_cast<const ResolveResponse*>(
        &_ResolveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ResolveResponse& a, ResolveResponse& b) { a.Swap(&b); }
  inline void Swap(ResolveResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolveResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolveResponse& from) { ResolveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolveResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolveResponse"; }

 protected:
  explicit ResolveResponse(::google::protobuf::Arena* arena);
  ResolveResponse(::google::protobuf::Arena* arena, const ResolveResponse& from);
  ResolveResponse(::google::protobuf::Arena* arena, ResolveResponse&& from) noexcept
      : ResolveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidResolutionMetadataFieldNumber = 1,
    kDidDocumentFieldNumber = 2,
    kDidDocumentMetadataFieldNumber = 3,
  };
  // .registry_api.v1.ResolutionMetadata didResolutionMetadata = 1;
  bool has_didresolutionmetadata() const;
  void clear_didresolutionmetadata() ;
  const ::registry_api::v1::ResolutionMetadata& didresolutionmetadata() const;
  PROTOBUF_NODISCARD ::registry_api::v1::ResolutionMetadata* release_didresolutionmetadata();
  ::registry_api::v1::ResolutionMetadata* mutable_didresolutionmetadata();
  void set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value);
  void unsafe_arena_set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value);
  ::registry_api::v1::ResolutionMetadata* unsafe_arena_release_didresolutionmetadata();

  private:
  const ::registry_api::v1::ResolutionMetadata& _internal_didresolutionmetadata() const;
  ::registry_api::v1::ResolutionMetadata* _internal_mutable_didresolutionmetadata();

  public:
  // .google.protobuf.Struct didDocument = 2;
  bool has_diddocument() const;
  void clear_diddocument() ;
  const ::google::protobuf::Struct& diddocument() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_diddocument();
  ::google::protobuf::Struct* mutable_diddocument();
  void set_allocated_diddocument(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_diddocument(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_diddocument();

  private:
  const ::google::protobuf::Struct& _internal_diddocument() const;
  ::google::protobuf::Struct* _internal_mutable_diddocument();

  public:
  // .registry_api.v1.DidDocumentMetadata didDocumentMetadata = 3;
  bool has_diddocumentmetadata() const;
  void clear_diddocumentmetadata() ;
  const ::registry_api::v1::DidDocumentMetadata& diddocumentmetadata() const;
  PROTOBUF_NODISCARD ::registry_api::v1::DidDocumentMetadata* release_diddocumentmetadata();
  ::registry_api::v1::DidDocumentMetadata* mutable_diddocumentmetadata();
  void set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value);
  void unsafe_arena_set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value);
  ::registry_api::v1::DidDocumentMetadata* unsafe_arena_release_diddocumentmetadata();

  private:
  const ::registry_api::v1::DidDocumentMetadata& _internal_diddocumentmetadata() const;
  ::registry_api::v1::DidDocumentMetadata* _internal_mutable_diddocumentmetadata();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolveResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolveResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::registry_api::v1::ResolutionMetadata* didresolutionmetadata_;
    ::google::protobuf::Struct* diddocument_;
    ::registry_api::v1::DidDocumentMetadata* diddocumentmetadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class ResolveRepresentationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.ResolveRepresentationResponse) */ {
 public:
  inline ResolveRepresentationResponse() : ResolveRepresentationResponse(nullptr) {}
  ~ResolveRepresentationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolveRepresentationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResolveRepresentationResponse(const ResolveRepresentationResponse& from) : ResolveRepresentationResponse(nullptr, from) {}
  inline ResolveRepresentationResponse(ResolveRepresentationResponse&& from) noexcept
      : ResolveRepresentationResponse(nullptr, std::move(from)) {}
  inline ResolveRepresentationResponse& operator=(const ResolveRepresentationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolveRepresentationResponse& operator=(ResolveRepresentationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolveRepresentationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResolveRepresentationResponse* internal_default_instance() {
    return reinterpret_cast<const ResolveRepresentationResponse*>(
        &_ResolveRepresentationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ResolveRepresentationResponse& a, ResolveRepresentationResponse& b) { a.Swap(&b); }
  inline void Swap(ResolveRepresentationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolveRepresentationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolveRepresentationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResolveRepresentationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolveRepresentationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolveRepresentationResponse& from) { ResolveRepresentationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResolveRepresentationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.ResolveRepresentationResponse"; }

 protected:
  explicit ResolveRepresentationResponse(::google::protobuf::Arena* arena);
  ResolveRepresentationResponse(::google::protobuf::Arena* arena, const ResolveRepresentationResponse& from);
  ResolveRepresentationResponse(::google::protobuf::Arena* arena, ResolveRepresentationResponse&& from) noexcept
      : ResolveRepresentationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidDocumentStreamFieldNumber = 1,
    kDidResolutionMetadataFieldNumber = 2,
    kDidDocumentMetadataFieldNumber = 3,
  };
  // string didDocumentStream = 1;
  void clear_diddocumentstream() ;
  const std::string& diddocumentstream() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_diddocumentstream(Arg_&& arg, Args_... args);
  std::string* mutable_diddocumentstream();
  PROTOBUF_NODISCARD std::string* release_diddocumentstream();
  void set_allocated_diddocumentstream(std::string* value);

  private:
  const std::string& _internal_diddocumentstream() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_diddocumentstream(
      const std::string& value);
  std::string* _internal_mutable_diddocumentstream();

  public:
  // .registry_api.v1.ResolutionMetadata didResolutionMetadata = 2;
  bool has_didresolutionmetadata() const;
  void clear_didresolutionmetadata() ;
  const ::registry_api::v1::ResolutionMetadata& didresolutionmetadata() const;
  PROTOBUF_NODISCARD ::registry_api::v1::ResolutionMetadata* release_didresolutionmetadata();
  ::registry_api::v1::ResolutionMetadata* mutable_didresolutionmetadata();
  void set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value);
  void unsafe_arena_set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value);
  ::registry_api::v1::ResolutionMetadata* unsafe_arena_release_didresolutionmetadata();

  private:
  const ::registry_api::v1::ResolutionMetadata& _internal_didresolutionmetadata() const;
  ::registry_api::v1::ResolutionMetadata* _internal_mutable_didresolutionmetadata();

  public:
  // .registry_api.v1.DidDocumentMetadata didDocumentMetadata = 3;
  bool has_diddocumentmetadata() const;
  void clear_diddocumentmetadata() ;
  const ::registry_api::v1::DidDocumentMetadata& diddocumentmetadata() const;
  PROTOBUF_NODISCARD ::registry_api::v1::DidDocumentMetadata* release_diddocumentmetadata();
  ::registry_api::v1::DidDocumentMetadata* mutable_diddocumentmetadata();
  void set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value);
  void unsafe_arena_set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value);
  ::registry_api::v1::DidDocumentMetadata* unsafe_arena_release_diddocumentmetadata();

  private:
  const ::registry_api::v1::DidDocumentMetadata& _internal_diddocumentmetadata() const;
  ::registry_api::v1::DidDocumentMetadata* _internal_mutable_diddocumentmetadata();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.ResolveRepresentationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResolveRepresentationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResolveRepresentationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr diddocumentstream_;
    ::registry_api::v1::ResolutionMetadata* didresolutionmetadata_;
    ::registry_api::v1::DidDocumentMetadata* diddocumentmetadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class GetCredentialIssuerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.GetCredentialIssuerResponse) */ {
 public:
  inline GetCredentialIssuerResponse() : GetCredentialIssuerResponse(nullptr) {}
  ~GetCredentialIssuerResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCredentialIssuerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCredentialIssuerResponse(const GetCredentialIssuerResponse& from) : GetCredentialIssuerResponse(nullptr, from) {}
  inline GetCredentialIssuerResponse(GetCredentialIssuerResponse&& from) noexcept
      : GetCredentialIssuerResponse(nullptr, std::move(from)) {}
  inline GetCredentialIssuerResponse& operator=(const GetCredentialIssuerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCredentialIssuerResponse& operator=(GetCredentialIssuerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCredentialIssuerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCredentialIssuerResponse* internal_default_instance() {
    return reinterpret_cast<const GetCredentialIssuerResponse*>(
        &_GetCredentialIssuerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetCredentialIssuerResponse& a, GetCredentialIssuerResponse& b) { a.Swap(&b); }
  inline void Swap(GetCredentialIssuerResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCredentialIssuerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCredentialIssuerResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetCredentialIssuerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCredentialIssuerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCredentialIssuerResponse& from) { GetCredentialIssuerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCredentialIssuerResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.GetCredentialIssuerResponse"; }

 protected:
  explicit GetCredentialIssuerResponse(::google::protobuf::Arena* arena);
  GetCredentialIssuerResponse(::google::protobuf::Arena* arena, const GetCredentialIssuerResponse& from);
  GetCredentialIssuerResponse(::google::protobuf::Arena* arena, GetCredentialIssuerResponse&& from) noexcept
      : GetCredentialIssuerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialIssuerFieldNumber = 1,
  };
  // .registry_api.v1.CredentialIssuer credential_issuer = 1;
  bool has_credential_issuer() const;
  void clear_credential_issuer() ;
  const ::registry_api::v1::CredentialIssuer& credential_issuer() const;
  PROTOBUF_NODISCARD ::registry_api::v1::CredentialIssuer* release_credential_issuer();
  ::registry_api::v1::CredentialIssuer* mutable_credential_issuer();
  void set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value);
  void unsafe_arena_set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value);
  ::registry_api::v1::CredentialIssuer* unsafe_arena_release_credential_issuer();

  private:
  const ::registry_api::v1::CredentialIssuer& _internal_credential_issuer() const;
  ::registry_api::v1::CredentialIssuer* _internal_mutable_credential_issuer();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.GetCredentialIssuerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetCredentialIssuerResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCredentialIssuerResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::registry_api::v1::CredentialIssuer* credential_issuer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class CreateCredentialIssuerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:registry_api.v1.CreateCredentialIssuerRequest) */ {
 public:
  inline CreateCredentialIssuerRequest() : CreateCredentialIssuerRequest(nullptr) {}
  ~CreateCredentialIssuerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCredentialIssuerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCredentialIssuerRequest(const CreateCredentialIssuerRequest& from) : CreateCredentialIssuerRequest(nullptr, from) {}
  inline CreateCredentialIssuerRequest(CreateCredentialIssuerRequest&& from) noexcept
      : CreateCredentialIssuerRequest(nullptr, std::move(from)) {}
  inline CreateCredentialIssuerRequest& operator=(const CreateCredentialIssuerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCredentialIssuerRequest& operator=(CreateCredentialIssuerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCredentialIssuerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCredentialIssuerRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCredentialIssuerRequest*>(
        &_CreateCredentialIssuerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CreateCredentialIssuerRequest& a, CreateCredentialIssuerRequest& b) { a.Swap(&b); }
  inline void Swap(CreateCredentialIssuerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCredentialIssuerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCredentialIssuerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateCredentialIssuerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCredentialIssuerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCredentialIssuerRequest& from) { CreateCredentialIssuerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateCredentialIssuerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "registry_api.v1.CreateCredentialIssuerRequest"; }

 protected:
  explicit CreateCredentialIssuerRequest(::google::protobuf::Arena* arena);
  CreateCredentialIssuerRequest(::google::protobuf::Arena* arena, const CreateCredentialIssuerRequest& from);
  CreateCredentialIssuerRequest(::google::protobuf::Arena* arena, CreateCredentialIssuerRequest&& from) noexcept
      : CreateCredentialIssuerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialIssuerFieldNumber = 1,
  };
  // .registry_api.v1.CredentialIssuer credential_issuer = 1;
  bool has_credential_issuer() const;
  void clear_credential_issuer() ;
  const ::registry_api::v1::CredentialIssuer& credential_issuer() const;
  PROTOBUF_NODISCARD ::registry_api::v1::CredentialIssuer* release_credential_issuer();
  ::registry_api::v1::CredentialIssuer* mutable_credential_issuer();
  void set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value);
  void unsafe_arena_set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value);
  ::registry_api::v1::CredentialIssuer* unsafe_arena_release_credential_issuer();

  private:
  const ::registry_api::v1::CredentialIssuer& _internal_credential_issuer() const;
  ::registry_api::v1::CredentialIssuer* _internal_mutable_credential_issuer();

  public:
  // @@protoc_insertion_point(class_scope:registry_api.v1.CreateCredentialIssuerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateCredentialIssuerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCredentialIssuerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::registry_api::v1::CredentialIssuer* credential_issuer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registry_5fapi_2fv1_2fregistry_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateRequest

// string did = 1;
inline void CreateRequest::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& CreateRequest::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateRequest.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateRequest::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateRequest.did)
}
inline std::string* CreateRequest::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateRequest.did)
  return _s;
}
inline const std::string& CreateRequest::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void CreateRequest::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* CreateRequest::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* CreateRequest::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateRequest.did)
  return _impl_.did_.Release();
}
inline void CreateRequest::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateRequest.did)
}

// string document = 2;
inline void CreateRequest::clear_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.ClearToEmpty();
}
inline const std::string& CreateRequest::document() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateRequest.document)
  return _internal_document();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateRequest::set_document(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateRequest.document)
}
inline std::string* CreateRequest::mutable_document() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateRequest.document)
  return _s;
}
inline const std::string& CreateRequest::_internal_document() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_.Get();
}
inline void CreateRequest::_internal_set_document(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.Set(value, GetArena());
}
inline std::string* CreateRequest::_internal_mutable_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.document_.Mutable( GetArena());
}
inline std::string* CreateRequest::release_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateRequest.document)
  return _impl_.document_.Release();
}
inline void CreateRequest::set_allocated_document(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.document_.IsDefault()) {
          _impl_.document_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateRequest.document)
}

// -------------------------------------------------------------------

// CreateResponse

// -------------------------------------------------------------------

// ResolveRequest

// string did = 1;
inline void ResolveRequest::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& ResolveRequest::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRequest.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolveRequest::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolveRequest.did)
}
inline std::string* ResolveRequest::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRequest.did)
  return _s;
}
inline const std::string& ResolveRequest::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void ResolveRequest::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* ResolveRequest::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* ResolveRequest::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRequest.did)
  return _impl_.did_.Release();
}
inline void ResolveRequest::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRequest.did)
}

// .registry_api.v1.ResolutionOption resolutionOption = 2;
inline bool ResolveRequest::has_resolutionoption() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolutionoption_ != nullptr);
  return value;
}
inline void ResolveRequest::clear_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolutionoption_ != nullptr) _impl_.resolutionoption_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::ResolutionOption& ResolveRequest::_internal_resolutionoption() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::ResolutionOption* p = _impl_.resolutionoption_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::ResolutionOption&>(::registry_api::v1::_ResolutionOption_default_instance_);
}
inline const ::registry_api::v1::ResolutionOption& ResolveRequest::resolutionoption() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRequest.resolutionOption)
  return _internal_resolutionoption();
}
inline void ResolveRequest::unsafe_arena_set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolutionoption_);
  }
  _impl_.resolutionoption_ = reinterpret_cast<::registry_api::v1::ResolutionOption*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveRequest.resolutionOption)
}
inline ::registry_api::v1::ResolutionOption* ResolveRequest::release_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionOption* released = _impl_.resolutionoption_;
  _impl_.resolutionoption_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::ResolutionOption* ResolveRequest::unsafe_arena_release_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRequest.resolutionOption)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionOption* temp = _impl_.resolutionoption_;
  _impl_.resolutionoption_ = nullptr;
  return temp;
}
inline ::registry_api::v1::ResolutionOption* ResolveRequest::_internal_mutable_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolutionoption_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::ResolutionOption>(GetArena());
    _impl_.resolutionoption_ = reinterpret_cast<::registry_api::v1::ResolutionOption*>(p);
  }
  return _impl_.resolutionoption_;
}
inline ::registry_api::v1::ResolutionOption* ResolveRequest::mutable_resolutionoption() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::ResolutionOption* _msg = _internal_mutable_resolutionoption();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRequest.resolutionOption)
  return _msg;
}
inline void ResolveRequest::set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resolutionoption_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resolutionoption_ = reinterpret_cast<::registry_api::v1::ResolutionOption*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRequest.resolutionOption)
}

// -------------------------------------------------------------------

// ResolveRepresentationRequest

// string did = 1;
inline void ResolveRepresentationRequest::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& ResolveRepresentationRequest::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRepresentationRequest.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolveRepresentationRequest::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolveRepresentationRequest.did)
}
inline std::string* ResolveRepresentationRequest::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRepresentationRequest.did)
  return _s;
}
inline const std::string& ResolveRepresentationRequest::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void ResolveRepresentationRequest::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* ResolveRepresentationRequest::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* ResolveRepresentationRequest::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRepresentationRequest.did)
  return _impl_.did_.Release();
}
inline void ResolveRepresentationRequest::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRepresentationRequest.did)
}

// .registry_api.v1.ResolutionOption resolutionOption = 2;
inline bool ResolveRepresentationRequest::has_resolutionoption() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolutionoption_ != nullptr);
  return value;
}
inline void ResolveRepresentationRequest::clear_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolutionoption_ != nullptr) _impl_.resolutionoption_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::ResolutionOption& ResolveRepresentationRequest::_internal_resolutionoption() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::ResolutionOption* p = _impl_.resolutionoption_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::ResolutionOption&>(::registry_api::v1::_ResolutionOption_default_instance_);
}
inline const ::registry_api::v1::ResolutionOption& ResolveRepresentationRequest::resolutionoption() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRepresentationRequest.resolutionOption)
  return _internal_resolutionoption();
}
inline void ResolveRepresentationRequest::unsafe_arena_set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolutionoption_);
  }
  _impl_.resolutionoption_ = reinterpret_cast<::registry_api::v1::ResolutionOption*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveRepresentationRequest.resolutionOption)
}
inline ::registry_api::v1::ResolutionOption* ResolveRepresentationRequest::release_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionOption* released = _impl_.resolutionoption_;
  _impl_.resolutionoption_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::ResolutionOption* ResolveRepresentationRequest::unsafe_arena_release_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRepresentationRequest.resolutionOption)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionOption* temp = _impl_.resolutionoption_;
  _impl_.resolutionoption_ = nullptr;
  return temp;
}
inline ::registry_api::v1::ResolutionOption* ResolveRepresentationRequest::_internal_mutable_resolutionoption() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolutionoption_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::ResolutionOption>(GetArena());
    _impl_.resolutionoption_ = reinterpret_cast<::registry_api::v1::ResolutionOption*>(p);
  }
  return _impl_.resolutionoption_;
}
inline ::registry_api::v1::ResolutionOption* ResolveRepresentationRequest::mutable_resolutionoption() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::ResolutionOption* _msg = _internal_mutable_resolutionoption();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRepresentationRequest.resolutionOption)
  return _msg;
}
inline void ResolveRepresentationRequest::set_allocated_resolutionoption(::registry_api::v1::ResolutionOption* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resolutionoption_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resolutionoption_ = reinterpret_cast<::registry_api::v1::ResolutionOption*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRepresentationRequest.resolutionOption)
}

// -------------------------------------------------------------------

// ResolutionOption

// .registry_api.v1.ResolutionOptionAccept accept = 1;
inline void ResolutionOption::clear_accept() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_ = 0;
}
inline ::registry_api::v1::ResolutionOptionAccept ResolutionOption::accept() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionOption.accept)
  return _internal_accept();
}
inline void ResolutionOption::set_accept(::registry_api::v1::ResolutionOptionAccept value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionOption.accept)
}
inline ::registry_api::v1::ResolutionOptionAccept ResolutionOption::_internal_accept() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::registry_api::v1::ResolutionOptionAccept>(_impl_.accept_);
}
inline void ResolutionOption::_internal_set_accept(::registry_api::v1::ResolutionOptionAccept value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_ = value;
}

// -------------------------------------------------------------------

// DidDocumentMetadata

// .google.protobuf.Timestamp created = 1;
inline bool DidDocumentMetadata::has_created() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DidDocumentMetadata::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DidDocumentMetadata::created() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.DidDocumentMetadata.created)
  return _internal_created();
}
inline void DidDocumentMetadata::unsafe_arena_set_allocated_created(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_);
  }
  _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.DidDocumentMetadata.created)
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_;
  _impl_.created_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::unsafe_arena_release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.DidDocumentMetadata.created)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_;
  _impl_.created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::_internal_mutable_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_;
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::mutable_created() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.DidDocumentMetadata.created)
  return _msg;
}
inline void DidDocumentMetadata::set_allocated_created(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.DidDocumentMetadata.created)
}

// .google.protobuf.Timestamp updated = 2;
inline bool DidDocumentMetadata::has_updated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DidDocumentMetadata::_internal_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.updated_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DidDocumentMetadata::updated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.DidDocumentMetadata.updated)
  return _internal_updated();
}
inline void DidDocumentMetadata::unsafe_arena_set_allocated_updated(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_);
  }
  _impl_.updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.DidDocumentMetadata.updated)
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::release_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_;
  _impl_.updated_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::unsafe_arena_release_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.DidDocumentMetadata.updated)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_;
  _impl_.updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::_internal_mutable_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_;
}
inline ::google::protobuf::Timestamp* DidDocumentMetadata::mutable_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.DidDocumentMetadata.updated)
  return _msg;
}
inline void DidDocumentMetadata::set_allocated_updated(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.DidDocumentMetadata.updated)
}

// -------------------------------------------------------------------

// ResolveResponse

// .registry_api.v1.ResolutionMetadata didResolutionMetadata = 1;
inline bool ResolveResponse::has_didresolutionmetadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.didresolutionmetadata_ != nullptr);
  return value;
}
inline void ResolveResponse::clear_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.didresolutionmetadata_ != nullptr) _impl_.didresolutionmetadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::ResolutionMetadata& ResolveResponse::_internal_didresolutionmetadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::ResolutionMetadata* p = _impl_.didresolutionmetadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::ResolutionMetadata&>(::registry_api::v1::_ResolutionMetadata_default_instance_);
}
inline const ::registry_api::v1::ResolutionMetadata& ResolveResponse::didresolutionmetadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveResponse.didResolutionMetadata)
  return _internal_didresolutionmetadata();
}
inline void ResolveResponse::unsafe_arena_set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.didresolutionmetadata_);
  }
  _impl_.didresolutionmetadata_ = reinterpret_cast<::registry_api::v1::ResolutionMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveResponse.didResolutionMetadata)
}
inline ::registry_api::v1::ResolutionMetadata* ResolveResponse::release_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionMetadata* released = _impl_.didresolutionmetadata_;
  _impl_.didresolutionmetadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::ResolutionMetadata* ResolveResponse::unsafe_arena_release_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveResponse.didResolutionMetadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionMetadata* temp = _impl_.didresolutionmetadata_;
  _impl_.didresolutionmetadata_ = nullptr;
  return temp;
}
inline ::registry_api::v1::ResolutionMetadata* ResolveResponse::_internal_mutable_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.didresolutionmetadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::ResolutionMetadata>(GetArena());
    _impl_.didresolutionmetadata_ = reinterpret_cast<::registry_api::v1::ResolutionMetadata*>(p);
  }
  return _impl_.didresolutionmetadata_;
}
inline ::registry_api::v1::ResolutionMetadata* ResolveResponse::mutable_didresolutionmetadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::ResolutionMetadata* _msg = _internal_mutable_didresolutionmetadata();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveResponse.didResolutionMetadata)
  return _msg;
}
inline void ResolveResponse::set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.didresolutionmetadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.didresolutionmetadata_ = reinterpret_cast<::registry_api::v1::ResolutionMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveResponse.didResolutionMetadata)
}

// .google.protobuf.Struct didDocument = 2;
inline bool ResolveResponse::has_diddocument() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diddocument_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& ResolveResponse::_internal_diddocument() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Struct* p = _impl_.diddocument_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& ResolveResponse::diddocument() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveResponse.didDocument)
  return _internal_diddocument();
}
inline void ResolveResponse::unsafe_arena_set_allocated_diddocument(::google::protobuf::Struct* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diddocument_);
  }
  _impl_.diddocument_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveResponse.didDocument)
}
inline ::google::protobuf::Struct* ResolveResponse::release_diddocument() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.diddocument_;
  _impl_.diddocument_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* ResolveResponse::unsafe_arena_release_diddocument() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveResponse.didDocument)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.diddocument_;
  _impl_.diddocument_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* ResolveResponse::_internal_mutable_diddocument() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diddocument_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Struct>(GetArena());
    _impl_.diddocument_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.diddocument_;
}
inline ::google::protobuf::Struct* ResolveResponse::mutable_diddocument() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Struct* _msg = _internal_mutable_diddocument();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveResponse.didDocument)
  return _msg;
}
inline void ResolveResponse::set_allocated_diddocument(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diddocument_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.diddocument_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveResponse.didDocument)
}

// .registry_api.v1.DidDocumentMetadata didDocumentMetadata = 3;
inline bool ResolveResponse::has_diddocumentmetadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diddocumentmetadata_ != nullptr);
  return value;
}
inline void ResolveResponse::clear_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diddocumentmetadata_ != nullptr) _impl_.diddocumentmetadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::registry_api::v1::DidDocumentMetadata& ResolveResponse::_internal_diddocumentmetadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::DidDocumentMetadata* p = _impl_.diddocumentmetadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::DidDocumentMetadata&>(::registry_api::v1::_DidDocumentMetadata_default_instance_);
}
inline const ::registry_api::v1::DidDocumentMetadata& ResolveResponse::diddocumentmetadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveResponse.didDocumentMetadata)
  return _internal_diddocumentmetadata();
}
inline void ResolveResponse::unsafe_arena_set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diddocumentmetadata_);
  }
  _impl_.diddocumentmetadata_ = reinterpret_cast<::registry_api::v1::DidDocumentMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveResponse.didDocumentMetadata)
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveResponse::release_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::registry_api::v1::DidDocumentMetadata* released = _impl_.diddocumentmetadata_;
  _impl_.diddocumentmetadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveResponse::unsafe_arena_release_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveResponse.didDocumentMetadata)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::registry_api::v1::DidDocumentMetadata* temp = _impl_.diddocumentmetadata_;
  _impl_.diddocumentmetadata_ = nullptr;
  return temp;
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveResponse::_internal_mutable_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diddocumentmetadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::DidDocumentMetadata>(GetArena());
    _impl_.diddocumentmetadata_ = reinterpret_cast<::registry_api::v1::DidDocumentMetadata*>(p);
  }
  return _impl_.diddocumentmetadata_;
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveResponse::mutable_diddocumentmetadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::registry_api::v1::DidDocumentMetadata* _msg = _internal_mutable_diddocumentmetadata();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveResponse.didDocumentMetadata)
  return _msg;
}
inline void ResolveResponse::set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.diddocumentmetadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.diddocumentmetadata_ = reinterpret_cast<::registry_api::v1::DidDocumentMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveResponse.didDocumentMetadata)
}

// -------------------------------------------------------------------

// ResolveRepresentationResponse

// string didDocumentStream = 1;
inline void ResolveRepresentationResponse::clear_diddocumentstream() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.diddocumentstream_.ClearToEmpty();
}
inline const std::string& ResolveRepresentationResponse::diddocumentstream() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRepresentationResponse.didDocumentStream)
  return _internal_diddocumentstream();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolveRepresentationResponse::set_diddocumentstream(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.diddocumentstream_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolveRepresentationResponse.didDocumentStream)
}
inline std::string* ResolveRepresentationResponse::mutable_diddocumentstream() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_diddocumentstream();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRepresentationResponse.didDocumentStream)
  return _s;
}
inline const std::string& ResolveRepresentationResponse::_internal_diddocumentstream() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.diddocumentstream_.Get();
}
inline void ResolveRepresentationResponse::_internal_set_diddocumentstream(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.diddocumentstream_.Set(value, GetArena());
}
inline std::string* ResolveRepresentationResponse::_internal_mutable_diddocumentstream() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.diddocumentstream_.Mutable( GetArena());
}
inline std::string* ResolveRepresentationResponse::release_diddocumentstream() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRepresentationResponse.didDocumentStream)
  return _impl_.diddocumentstream_.Release();
}
inline void ResolveRepresentationResponse::set_allocated_diddocumentstream(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.diddocumentstream_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.diddocumentstream_.IsDefault()) {
          _impl_.diddocumentstream_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRepresentationResponse.didDocumentStream)
}

// .registry_api.v1.ResolutionMetadata didResolutionMetadata = 2;
inline bool ResolveRepresentationResponse::has_didresolutionmetadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.didresolutionmetadata_ != nullptr);
  return value;
}
inline void ResolveRepresentationResponse::clear_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.didresolutionmetadata_ != nullptr) _impl_.didresolutionmetadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::ResolutionMetadata& ResolveRepresentationResponse::_internal_didresolutionmetadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::ResolutionMetadata* p = _impl_.didresolutionmetadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::ResolutionMetadata&>(::registry_api::v1::_ResolutionMetadata_default_instance_);
}
inline const ::registry_api::v1::ResolutionMetadata& ResolveRepresentationResponse::didresolutionmetadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRepresentationResponse.didResolutionMetadata)
  return _internal_didresolutionmetadata();
}
inline void ResolveRepresentationResponse::unsafe_arena_set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.didresolutionmetadata_);
  }
  _impl_.didresolutionmetadata_ = reinterpret_cast<::registry_api::v1::ResolutionMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveRepresentationResponse.didResolutionMetadata)
}
inline ::registry_api::v1::ResolutionMetadata* ResolveRepresentationResponse::release_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionMetadata* released = _impl_.didresolutionmetadata_;
  _impl_.didresolutionmetadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::ResolutionMetadata* ResolveRepresentationResponse::unsafe_arena_release_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRepresentationResponse.didResolutionMetadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::ResolutionMetadata* temp = _impl_.didresolutionmetadata_;
  _impl_.didresolutionmetadata_ = nullptr;
  return temp;
}
inline ::registry_api::v1::ResolutionMetadata* ResolveRepresentationResponse::_internal_mutable_didresolutionmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.didresolutionmetadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::ResolutionMetadata>(GetArena());
    _impl_.didresolutionmetadata_ = reinterpret_cast<::registry_api::v1::ResolutionMetadata*>(p);
  }
  return _impl_.didresolutionmetadata_;
}
inline ::registry_api::v1::ResolutionMetadata* ResolveRepresentationResponse::mutable_didresolutionmetadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::ResolutionMetadata* _msg = _internal_mutable_didresolutionmetadata();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRepresentationResponse.didResolutionMetadata)
  return _msg;
}
inline void ResolveRepresentationResponse::set_allocated_didresolutionmetadata(::registry_api::v1::ResolutionMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.didresolutionmetadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.didresolutionmetadata_ = reinterpret_cast<::registry_api::v1::ResolutionMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRepresentationResponse.didResolutionMetadata)
}

// .registry_api.v1.DidDocumentMetadata didDocumentMetadata = 3;
inline bool ResolveRepresentationResponse::has_diddocumentmetadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diddocumentmetadata_ != nullptr);
  return value;
}
inline void ResolveRepresentationResponse::clear_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diddocumentmetadata_ != nullptr) _impl_.diddocumentmetadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::registry_api::v1::DidDocumentMetadata& ResolveRepresentationResponse::_internal_diddocumentmetadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::DidDocumentMetadata* p = _impl_.diddocumentmetadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::DidDocumentMetadata&>(::registry_api::v1::_DidDocumentMetadata_default_instance_);
}
inline const ::registry_api::v1::DidDocumentMetadata& ResolveRepresentationResponse::diddocumentmetadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolveRepresentationResponse.didDocumentMetadata)
  return _internal_diddocumentmetadata();
}
inline void ResolveRepresentationResponse::unsafe_arena_set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diddocumentmetadata_);
  }
  _impl_.diddocumentmetadata_ = reinterpret_cast<::registry_api::v1::DidDocumentMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolveRepresentationResponse.didDocumentMetadata)
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveRepresentationResponse::release_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::registry_api::v1::DidDocumentMetadata* released = _impl_.diddocumentmetadata_;
  _impl_.diddocumentmetadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveRepresentationResponse::unsafe_arena_release_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolveRepresentationResponse.didDocumentMetadata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::registry_api::v1::DidDocumentMetadata* temp = _impl_.diddocumentmetadata_;
  _impl_.diddocumentmetadata_ = nullptr;
  return temp;
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveRepresentationResponse::_internal_mutable_diddocumentmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diddocumentmetadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::DidDocumentMetadata>(GetArena());
    _impl_.diddocumentmetadata_ = reinterpret_cast<::registry_api::v1::DidDocumentMetadata*>(p);
  }
  return _impl_.diddocumentmetadata_;
}
inline ::registry_api::v1::DidDocumentMetadata* ResolveRepresentationResponse::mutable_diddocumentmetadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::registry_api::v1::DidDocumentMetadata* _msg = _internal_mutable_diddocumentmetadata();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolveRepresentationResponse.didDocumentMetadata)
  return _msg;
}
inline void ResolveRepresentationResponse::set_allocated_diddocumentmetadata(::registry_api::v1::DidDocumentMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.diddocumentmetadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.diddocumentmetadata_ = reinterpret_cast<::registry_api::v1::DidDocumentMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolveRepresentationResponse.didDocumentMetadata)
}

// -------------------------------------------------------------------

// ResolutionMetadata

// optional string contentType = 1;
inline bool ResolutionMetadata::has_contenttype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ResolutionMetadata::clear_contenttype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contenttype_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ResolutionMetadata::contenttype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadata.contentType)
  return _internal_contenttype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolutionMetadata::set_contenttype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.contenttype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionMetadata.contentType)
}
inline std::string* ResolutionMetadata::mutable_contenttype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contenttype();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolutionMetadata.contentType)
  return _s;
}
inline const std::string& ResolutionMetadata::_internal_contenttype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contenttype_.Get();
}
inline void ResolutionMetadata::_internal_set_contenttype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.contenttype_.Set(value, GetArena());
}
inline std::string* ResolutionMetadata::_internal_mutable_contenttype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.contenttype_.Mutable( GetArena());
}
inline std::string* ResolutionMetadata::release_contenttype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolutionMetadata.contentType)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.contenttype_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contenttype_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ResolutionMetadata::set_allocated_contenttype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.contenttype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contenttype_.IsDefault()) {
          _impl_.contenttype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolutionMetadata.contentType)
}

// optional int64 duration = 2;
inline bool ResolutionMetadata::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ResolutionMetadata::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t ResolutionMetadata::duration() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadata.duration)
  return _internal_duration();
}
inline void ResolutionMetadata::set_duration(::int64_t value) {
  _internal_set_duration(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionMetadata.duration)
}
inline ::int64_t ResolutionMetadata::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_;
}
inline void ResolutionMetadata::_internal_set_duration(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = value;
}

// optional .registry_api.v1.ResolutionMetadataDidUrl didUrl = 3;
inline bool ResolutionMetadata::has_didurl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.didurl_ != nullptr);
  return value;
}
inline void ResolutionMetadata::clear_didurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.didurl_ != nullptr) _impl_.didurl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::registry_api::v1::ResolutionMetadataDidUrl& ResolutionMetadata::_internal_didurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::ResolutionMetadataDidUrl* p = _impl_.didurl_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::ResolutionMetadataDidUrl&>(::registry_api::v1::_ResolutionMetadataDidUrl_default_instance_);
}
inline const ::registry_api::v1::ResolutionMetadataDidUrl& ResolutionMetadata::didurl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadata.didUrl)
  return _internal_didurl();
}
inline void ResolutionMetadata::unsafe_arena_set_allocated_didurl(::registry_api::v1::ResolutionMetadataDidUrl* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.didurl_);
  }
  _impl_.didurl_ = reinterpret_cast<::registry_api::v1::ResolutionMetadataDidUrl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.ResolutionMetadata.didUrl)
}
inline ::registry_api::v1::ResolutionMetadataDidUrl* ResolutionMetadata::release_didurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::registry_api::v1::ResolutionMetadataDidUrl* released = _impl_.didurl_;
  _impl_.didurl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::ResolutionMetadataDidUrl* ResolutionMetadata::unsafe_arena_release_didurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolutionMetadata.didUrl)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::registry_api::v1::ResolutionMetadataDidUrl* temp = _impl_.didurl_;
  _impl_.didurl_ = nullptr;
  return temp;
}
inline ::registry_api::v1::ResolutionMetadataDidUrl* ResolutionMetadata::_internal_mutable_didurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.didurl_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::ResolutionMetadataDidUrl>(GetArena());
    _impl_.didurl_ = reinterpret_cast<::registry_api::v1::ResolutionMetadataDidUrl*>(p);
  }
  return _impl_.didurl_;
}
inline ::registry_api::v1::ResolutionMetadataDidUrl* ResolutionMetadata::mutable_didurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::registry_api::v1::ResolutionMetadataDidUrl* _msg = _internal_mutable_didurl();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolutionMetadata.didUrl)
  return _msg;
}
inline void ResolutionMetadata::set_allocated_didurl(::registry_api::v1::ResolutionMetadataDidUrl* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.didurl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.didurl_ = reinterpret_cast<::registry_api::v1::ResolutionMetadataDidUrl*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolutionMetadata.didUrl)
}

// optional string error = 4;
inline bool ResolutionMetadata::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ResolutionMetadata::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ResolutionMetadata::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadata.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolutionMetadata::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionMetadata.error)
}
inline std::string* ResolutionMetadata::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolutionMetadata.error)
  return _s;
}
inline const std::string& ResolutionMetadata::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void ResolutionMetadata::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_.Set(value, GetArena());
}
inline std::string* ResolutionMetadata::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* ResolutionMetadata::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolutionMetadata.error)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.error_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ResolutionMetadata::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolutionMetadata.error)
}

// -------------------------------------------------------------------

// ResolutionMetadataDidUrl

// string did = 1;
inline void ResolutionMetadataDidUrl::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& ResolutionMetadataDidUrl::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadataDidUrl.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolutionMetadataDidUrl::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionMetadataDidUrl.did)
}
inline std::string* ResolutionMetadataDidUrl::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolutionMetadataDidUrl.did)
  return _s;
}
inline const std::string& ResolutionMetadataDidUrl::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void ResolutionMetadataDidUrl::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* ResolutionMetadataDidUrl::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* ResolutionMetadataDidUrl::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolutionMetadataDidUrl.did)
  return _impl_.did_.Release();
}
inline void ResolutionMetadataDidUrl::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolutionMetadataDidUrl.did)
}

// string methodName = 2;
inline void ResolutionMetadataDidUrl::clear_methodname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodname_.ClearToEmpty();
}
inline const std::string& ResolutionMetadataDidUrl::methodname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadataDidUrl.methodName)
  return _internal_methodname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolutionMetadataDidUrl::set_methodname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionMetadataDidUrl.methodName)
}
inline std::string* ResolutionMetadataDidUrl::mutable_methodname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_methodname();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolutionMetadataDidUrl.methodName)
  return _s;
}
inline const std::string& ResolutionMetadataDidUrl::_internal_methodname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.methodname_.Get();
}
inline void ResolutionMetadataDidUrl::_internal_set_methodname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodname_.Set(value, GetArena());
}
inline std::string* ResolutionMetadataDidUrl::_internal_mutable_methodname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.methodname_.Mutable( GetArena());
}
inline std::string* ResolutionMetadataDidUrl::release_methodname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolutionMetadataDidUrl.methodName)
  return _impl_.methodname_.Release();
}
inline void ResolutionMetadataDidUrl::set_allocated_methodname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.methodname_.IsDefault()) {
          _impl_.methodname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolutionMetadataDidUrl.methodName)
}

// string methodSpecificId = 3;
inline void ResolutionMetadataDidUrl::clear_methodspecificid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodspecificid_.ClearToEmpty();
}
inline const std::string& ResolutionMetadataDidUrl::methodspecificid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.ResolutionMetadataDidUrl.methodSpecificId)
  return _internal_methodspecificid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResolutionMetadataDidUrl::set_methodspecificid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodspecificid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.ResolutionMetadataDidUrl.methodSpecificId)
}
inline std::string* ResolutionMetadataDidUrl::mutable_methodspecificid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_methodspecificid();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.ResolutionMetadataDidUrl.methodSpecificId)
  return _s;
}
inline const std::string& ResolutionMetadataDidUrl::_internal_methodspecificid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.methodspecificid_.Get();
}
inline void ResolutionMetadataDidUrl::_internal_set_methodspecificid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodspecificid_.Set(value, GetArena());
}
inline std::string* ResolutionMetadataDidUrl::_internal_mutable_methodspecificid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.methodspecificid_.Mutable( GetArena());
}
inline std::string* ResolutionMetadataDidUrl::release_methodspecificid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.ResolutionMetadataDidUrl.methodSpecificId)
  return _impl_.methodspecificid_.Release();
}
inline void ResolutionMetadataDidUrl::set_allocated_methodspecificid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methodspecificid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.methodspecificid_.IsDefault()) {
          _impl_.methodspecificid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.ResolutionMetadataDidUrl.methodSpecificId)
}

// -------------------------------------------------------------------

// UpdateRequest

// string did = 1;
inline void UpdateRequest::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& UpdateRequest::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateRequest.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateRequest::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateRequest.did)
}
inline std::string* UpdateRequest::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.UpdateRequest.did)
  return _s;
}
inline const std::string& UpdateRequest::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void UpdateRequest::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* UpdateRequest::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* UpdateRequest::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.UpdateRequest.did)
  return _impl_.did_.Release();
}
inline void UpdateRequest::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.UpdateRequest.did)
}

// string document = 2;
inline void UpdateRequest::clear_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.ClearToEmpty();
}
inline const std::string& UpdateRequest::document() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateRequest.document)
  return _internal_document();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateRequest::set_document(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateRequest.document)
}
inline std::string* UpdateRequest::mutable_document() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.UpdateRequest.document)
  return _s;
}
inline const std::string& UpdateRequest::_internal_document() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_.Get();
}
inline void UpdateRequest::_internal_set_document(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.Set(value, GetArena());
}
inline std::string* UpdateRequest::_internal_mutable_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.document_.Mutable( GetArena());
}
inline std::string* UpdateRequest::release_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.UpdateRequest.document)
  return _impl_.document_.Release();
}
inline void UpdateRequest::set_allocated_document(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.document_.IsDefault()) {
          _impl_.document_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.UpdateRequest.document)
}

// -------------------------------------------------------------------

// UpdateResponse

// -------------------------------------------------------------------

// RevokeRequest

// string did = 1;
inline void RevokeRequest::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& RevokeRequest::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.RevokeRequest.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RevokeRequest::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.RevokeRequest.did)
}
inline std::string* RevokeRequest::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.RevokeRequest.did)
  return _s;
}
inline const std::string& RevokeRequest::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void RevokeRequest::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* RevokeRequest::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* RevokeRequest::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.RevokeRequest.did)
  return _impl_.did_.Release();
}
inline void RevokeRequest::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.RevokeRequest.did)
}

// string document = 2;
inline void RevokeRequest::clear_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.ClearToEmpty();
}
inline const std::string& RevokeRequest::document() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.RevokeRequest.document)
  return _internal_document();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RevokeRequest::set_document(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.RevokeRequest.document)
}
inline std::string* RevokeRequest::mutable_document() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.RevokeRequest.document)
  return _s;
}
inline const std::string& RevokeRequest::_internal_document() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_.Get();
}
inline void RevokeRequest::_internal_set_document(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.Set(value, GetArena());
}
inline std::string* RevokeRequest::_internal_mutable_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.document_.Mutable( GetArena());
}
inline std::string* RevokeRequest::release_document() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.RevokeRequest.document)
  return _impl_.document_.Release();
}
inline void RevokeRequest::set_allocated_document(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.document_.IsDefault()) {
          _impl_.document_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.RevokeRequest.document)
}

// -------------------------------------------------------------------

// RevokeResponse

// -------------------------------------------------------------------

// PostalAddress

// string country = 1;
inline void PostalAddress::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& PostalAddress::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.PostalAddress.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.PostalAddress.country)
}
inline std::string* PostalAddress::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.PostalAddress.country)
  return _s;
}
inline const std::string& PostalAddress::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void PostalAddress::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.PostalAddress.country)
  return _impl_.country_.Release();
}
inline void PostalAddress::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.country_.IsDefault()) {
          _impl_.country_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.PostalAddress.country)
}

// string city = 2;
inline void PostalAddress::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
}
inline const std::string& PostalAddress::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.PostalAddress.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_city(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.PostalAddress.city)
}
inline std::string* PostalAddress::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.PostalAddress.city)
  return _s;
}
inline const std::string& PostalAddress::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void PostalAddress::_internal_set_city(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.PostalAddress.city)
  return _impl_.city_.Release();
}
inline void PostalAddress::set_allocated_city(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.city_.IsDefault()) {
          _impl_.city_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.PostalAddress.city)
}

// string state = 3;
inline void PostalAddress::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& PostalAddress::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.PostalAddress.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_state(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.PostalAddress.state)
}
inline std::string* PostalAddress::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.PostalAddress.state)
  return _s;
}
inline const std::string& PostalAddress::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void PostalAddress::_internal_set_state(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.PostalAddress.state)
  return _impl_.state_.Release();
}
inline void PostalAddress::set_allocated_state(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.PostalAddress.state)
}

// string postal_code = 4;
inline void PostalAddress::clear_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.ClearToEmpty();
}
inline const std::string& PostalAddress::postal_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.PostalAddress.postal_code)
  return _internal_postal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_postal_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.PostalAddress.postal_code)
}
inline std::string* PostalAddress::mutable_postal_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_postal_code();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.PostalAddress.postal_code)
  return _s;
}
inline const std::string& PostalAddress::_internal_postal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.postal_code_.Get();
}
inline void PostalAddress::_internal_set_postal_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.postal_code_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.PostalAddress.postal_code)
  return _impl_.postal_code_.Release();
}
inline void PostalAddress::set_allocated_postal_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.postal_code_.IsDefault()) {
          _impl_.postal_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.PostalAddress.postal_code)
}

// string street = 5;
inline void PostalAddress::clear_street() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.street_.ClearToEmpty();
}
inline const std::string& PostalAddress::street() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.PostalAddress.street)
  return _internal_street();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_street(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.street_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.PostalAddress.street)
}
inline std::string* PostalAddress::mutable_street() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_street();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.PostalAddress.street)
  return _s;
}
inline const std::string& PostalAddress::_internal_street() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.street_.Get();
}
inline void PostalAddress::_internal_set_street(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.street_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_street() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.street_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_street() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.PostalAddress.street)
  return _impl_.street_.Release();
}
inline void PostalAddress::set_allocated_street(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.street_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.street_.IsDefault()) {
          _impl_.street_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.PostalAddress.street)
}

// -------------------------------------------------------------------

// CredentialIssuer

// string issuer_did = 1;
inline void CredentialIssuer::clear_issuer_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.ClearToEmpty();
}
inline const std::string& CredentialIssuer::issuer_did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.issuer_did)
  return _internal_issuer_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialIssuer::set_issuer_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CredentialIssuer.issuer_did)
}
inline std::string* CredentialIssuer::mutable_issuer_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CredentialIssuer.issuer_did)
  return _s;
}
inline const std::string& CredentialIssuer::_internal_issuer_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_did_.Get();
}
inline void CredentialIssuer::_internal_set_issuer_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.Set(value, GetArena());
}
inline std::string* CredentialIssuer::_internal_mutable_issuer_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_did_.Mutable( GetArena());
}
inline std::string* CredentialIssuer::release_issuer_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CredentialIssuer.issuer_did)
  return _impl_.issuer_did_.Release();
}
inline void CredentialIssuer::set_allocated_issuer_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_did_.IsDefault()) {
          _impl_.issuer_did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CredentialIssuer.issuer_did)
}

// string issuer_name = 2;
inline void CredentialIssuer::clear_issuer_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_name_.ClearToEmpty();
}
inline const std::string& CredentialIssuer::issuer_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.issuer_name)
  return _internal_issuer_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialIssuer::set_issuer_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CredentialIssuer.issuer_name)
}
inline std::string* CredentialIssuer::mutable_issuer_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer_name();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CredentialIssuer.issuer_name)
  return _s;
}
inline const std::string& CredentialIssuer::_internal_issuer_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_name_.Get();
}
inline void CredentialIssuer::_internal_set_issuer_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_name_.Set(value, GetArena());
}
inline std::string* CredentialIssuer::_internal_mutable_issuer_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_name_.Mutable( GetArena());
}
inline std::string* CredentialIssuer::release_issuer_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CredentialIssuer.issuer_name)
  return _impl_.issuer_name_.Release();
}
inline void CredentialIssuer::set_allocated_issuer_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_name_.IsDefault()) {
          _impl_.issuer_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CredentialIssuer.issuer_name)
}

// string email = 3;
inline void CredentialIssuer::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& CredentialIssuer::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialIssuer::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CredentialIssuer.email)
}
inline std::string* CredentialIssuer::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CredentialIssuer.email)
  return _s;
}
inline const std::string& CredentialIssuer::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void CredentialIssuer::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.Set(value, GetArena());
}
inline std::string* CredentialIssuer::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* CredentialIssuer::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CredentialIssuer.email)
  return _impl_.email_.Release();
}
inline void CredentialIssuer::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CredentialIssuer.email)
}

// string website = 4;
inline void CredentialIssuer::clear_website() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.website_.ClearToEmpty();
}
inline const std::string& CredentialIssuer::website() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.website)
  return _internal_website();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CredentialIssuer::set_website(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.website_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CredentialIssuer.website)
}
inline std::string* CredentialIssuer::mutable_website() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_website();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CredentialIssuer.website)
  return _s;
}
inline const std::string& CredentialIssuer::_internal_website() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.website_.Get();
}
inline void CredentialIssuer::_internal_set_website(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.website_.Set(value, GetArena());
}
inline std::string* CredentialIssuer::_internal_mutable_website() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.website_.Mutable( GetArena());
}
inline std::string* CredentialIssuer::release_website() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CredentialIssuer.website)
  return _impl_.website_.Release();
}
inline void CredentialIssuer::set_allocated_website(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.website_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.website_.IsDefault()) {
          _impl_.website_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CredentialIssuer.website)
}

// .registry_api.v1.PostalAddress postal_address = 5;
inline bool CredentialIssuer::has_postal_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.postal_address_ != nullptr);
  return value;
}
inline void CredentialIssuer::clear_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.postal_address_ != nullptr) _impl_.postal_address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::PostalAddress& CredentialIssuer::_internal_postal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::PostalAddress* p = _impl_.postal_address_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::PostalAddress&>(::registry_api::v1::_PostalAddress_default_instance_);
}
inline const ::registry_api::v1::PostalAddress& CredentialIssuer::postal_address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.postal_address)
  return _internal_postal_address();
}
inline void CredentialIssuer::unsafe_arena_set_allocated_postal_address(::registry_api::v1::PostalAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.postal_address_);
  }
  _impl_.postal_address_ = reinterpret_cast<::registry_api::v1::PostalAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.CredentialIssuer.postal_address)
}
inline ::registry_api::v1::PostalAddress* CredentialIssuer::release_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::PostalAddress* released = _impl_.postal_address_;
  _impl_.postal_address_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::PostalAddress* CredentialIssuer::unsafe_arena_release_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CredentialIssuer.postal_address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::PostalAddress* temp = _impl_.postal_address_;
  _impl_.postal_address_ = nullptr;
  return temp;
}
inline ::registry_api::v1::PostalAddress* CredentialIssuer::_internal_mutable_postal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.postal_address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::PostalAddress>(GetArena());
    _impl_.postal_address_ = reinterpret_cast<::registry_api::v1::PostalAddress*>(p);
  }
  return _impl_.postal_address_;
}
inline ::registry_api::v1::PostalAddress* CredentialIssuer::mutable_postal_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::PostalAddress* _msg = _internal_mutable_postal_address();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CredentialIssuer.postal_address)
  return _msg;
}
inline void CredentialIssuer::set_allocated_postal_address(::registry_api::v1::PostalAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.postal_address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.postal_address_ = reinterpret_cast<::registry_api::v1::PostalAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CredentialIssuer.postal_address)
}

// .registry_api.v1.IssuerStatus status = 6;
inline void CredentialIssuer::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::registry_api::v1::IssuerStatus CredentialIssuer::status() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.status)
  return _internal_status();
}
inline void CredentialIssuer::set_status(::registry_api::v1::IssuerStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.CredentialIssuer.status)
}
inline ::registry_api::v1::IssuerStatus CredentialIssuer::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::registry_api::v1::IssuerStatus>(_impl_.status_);
}
inline void CredentialIssuer::_internal_set_status(::registry_api::v1::IssuerStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .google.protobuf.Struct metadata = 7;
inline bool CredentialIssuer::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& CredentialIssuer::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Struct* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& CredentialIssuer::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CredentialIssuer.metadata)
  return _internal_metadata();
}
inline void CredentialIssuer::unsafe_arena_set_allocated_metadata(::google::protobuf::Struct* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.CredentialIssuer.metadata)
}
inline ::google::protobuf::Struct* CredentialIssuer::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* CredentialIssuer::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CredentialIssuer.metadata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* CredentialIssuer::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Struct>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.metadata_;
}
inline ::google::protobuf::Struct* CredentialIssuer::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Struct* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CredentialIssuer.metadata)
  return _msg;
}
inline void CredentialIssuer::set_allocated_metadata(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.metadata_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CredentialIssuer.metadata)
}

// -------------------------------------------------------------------

// CreateCredentialIssuerRequest

// .registry_api.v1.CredentialIssuer credential_issuer = 1;
inline bool CreateCredentialIssuerRequest::has_credential_issuer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.credential_issuer_ != nullptr);
  return value;
}
inline void CreateCredentialIssuerRequest::clear_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.credential_issuer_ != nullptr) _impl_.credential_issuer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::CredentialIssuer& CreateCredentialIssuerRequest::_internal_credential_issuer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::CredentialIssuer* p = _impl_.credential_issuer_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::CredentialIssuer&>(::registry_api::v1::_CredentialIssuer_default_instance_);
}
inline const ::registry_api::v1::CredentialIssuer& CreateCredentialIssuerRequest::credential_issuer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateCredentialIssuerRequest.credential_issuer)
  return _internal_credential_issuer();
}
inline void CreateCredentialIssuerRequest::unsafe_arena_set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.credential_issuer_);
  }
  _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.CreateCredentialIssuerRequest.credential_issuer)
}
inline ::registry_api::v1::CredentialIssuer* CreateCredentialIssuerRequest::release_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::CredentialIssuer* released = _impl_.credential_issuer_;
  _impl_.credential_issuer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::CredentialIssuer* CreateCredentialIssuerRequest::unsafe_arena_release_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateCredentialIssuerRequest.credential_issuer)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::CredentialIssuer* temp = _impl_.credential_issuer_;
  _impl_.credential_issuer_ = nullptr;
  return temp;
}
inline ::registry_api::v1::CredentialIssuer* CreateCredentialIssuerRequest::_internal_mutable_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.credential_issuer_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::CredentialIssuer>(GetArena());
    _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(p);
  }
  return _impl_.credential_issuer_;
}
inline ::registry_api::v1::CredentialIssuer* CreateCredentialIssuerRequest::mutable_credential_issuer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::CredentialIssuer* _msg = _internal_mutable_credential_issuer();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateCredentialIssuerRequest.credential_issuer)
  return _msg;
}
inline void CreateCredentialIssuerRequest::set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.credential_issuer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateCredentialIssuerRequest.credential_issuer)
}

// -------------------------------------------------------------------

// CreateCredentialIssuerResponse

// bool ok = 1;
inline void CreateCredentialIssuerResponse::clear_ok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = false;
}
inline bool CreateCredentialIssuerResponse::ok() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateCredentialIssuerResponse.ok)
  return _internal_ok();
}
inline void CreateCredentialIssuerResponse::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateCredentialIssuerResponse.ok)
}
inline bool CreateCredentialIssuerResponse::_internal_ok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ok_;
}
inline void CreateCredentialIssuerResponse::_internal_set_ok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = value;
}

// -------------------------------------------------------------------

// GetCredentialIssuerRequest

// string issuer_did = 1;
inline void GetCredentialIssuerRequest::clear_issuer_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.ClearToEmpty();
}
inline const std::string& GetCredentialIssuerRequest::issuer_did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.GetCredentialIssuerRequest.issuer_did)
  return _internal_issuer_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCredentialIssuerRequest::set_issuer_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.GetCredentialIssuerRequest.issuer_did)
}
inline std::string* GetCredentialIssuerRequest::mutable_issuer_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer_did();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.GetCredentialIssuerRequest.issuer_did)
  return _s;
}
inline const std::string& GetCredentialIssuerRequest::_internal_issuer_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_did_.Get();
}
inline void GetCredentialIssuerRequest::_internal_set_issuer_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.Set(value, GetArena());
}
inline std::string* GetCredentialIssuerRequest::_internal_mutable_issuer_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_did_.Mutable( GetArena());
}
inline std::string* GetCredentialIssuerRequest::release_issuer_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.GetCredentialIssuerRequest.issuer_did)
  return _impl_.issuer_did_.Release();
}
inline void GetCredentialIssuerRequest::set_allocated_issuer_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_did_.IsDefault()) {
          _impl_.issuer_did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.GetCredentialIssuerRequest.issuer_did)
}

// -------------------------------------------------------------------

// GetCredentialIssuerResponse

// .registry_api.v1.CredentialIssuer credential_issuer = 1;
inline bool GetCredentialIssuerResponse::has_credential_issuer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.credential_issuer_ != nullptr);
  return value;
}
inline void GetCredentialIssuerResponse::clear_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.credential_issuer_ != nullptr) _impl_.credential_issuer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::CredentialIssuer& GetCredentialIssuerResponse::_internal_credential_issuer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::CredentialIssuer* p = _impl_.credential_issuer_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::CredentialIssuer&>(::registry_api::v1::_CredentialIssuer_default_instance_);
}
inline const ::registry_api::v1::CredentialIssuer& GetCredentialIssuerResponse::credential_issuer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.GetCredentialIssuerResponse.credential_issuer)
  return _internal_credential_issuer();
}
inline void GetCredentialIssuerResponse::unsafe_arena_set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.credential_issuer_);
  }
  _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.GetCredentialIssuerResponse.credential_issuer)
}
inline ::registry_api::v1::CredentialIssuer* GetCredentialIssuerResponse::release_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::CredentialIssuer* released = _impl_.credential_issuer_;
  _impl_.credential_issuer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::CredentialIssuer* GetCredentialIssuerResponse::unsafe_arena_release_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.GetCredentialIssuerResponse.credential_issuer)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::CredentialIssuer* temp = _impl_.credential_issuer_;
  _impl_.credential_issuer_ = nullptr;
  return temp;
}
inline ::registry_api::v1::CredentialIssuer* GetCredentialIssuerResponse::_internal_mutable_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.credential_issuer_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::CredentialIssuer>(GetArena());
    _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(p);
  }
  return _impl_.credential_issuer_;
}
inline ::registry_api::v1::CredentialIssuer* GetCredentialIssuerResponse::mutable_credential_issuer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::CredentialIssuer* _msg = _internal_mutable_credential_issuer();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.GetCredentialIssuerResponse.credential_issuer)
  return _msg;
}
inline void GetCredentialIssuerResponse::set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.credential_issuer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.GetCredentialIssuerResponse.credential_issuer)
}

// -------------------------------------------------------------------

// UpdateCredentialIssuerRequest

// .registry_api.v1.CredentialIssuer credential_issuer = 1;
inline bool UpdateCredentialIssuerRequest::has_credential_issuer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.credential_issuer_ != nullptr);
  return value;
}
inline void UpdateCredentialIssuerRequest::clear_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.credential_issuer_ != nullptr) _impl_.credential_issuer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::CredentialIssuer& UpdateCredentialIssuerRequest::_internal_credential_issuer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::CredentialIssuer* p = _impl_.credential_issuer_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::CredentialIssuer&>(::registry_api::v1::_CredentialIssuer_default_instance_);
}
inline const ::registry_api::v1::CredentialIssuer& UpdateCredentialIssuerRequest::credential_issuer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateCredentialIssuerRequest.credential_issuer)
  return _internal_credential_issuer();
}
inline void UpdateCredentialIssuerRequest::unsafe_arena_set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.credential_issuer_);
  }
  _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.UpdateCredentialIssuerRequest.credential_issuer)
}
inline ::registry_api::v1::CredentialIssuer* UpdateCredentialIssuerRequest::release_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::CredentialIssuer* released = _impl_.credential_issuer_;
  _impl_.credential_issuer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::CredentialIssuer* UpdateCredentialIssuerRequest::unsafe_arena_release_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.UpdateCredentialIssuerRequest.credential_issuer)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::CredentialIssuer* temp = _impl_.credential_issuer_;
  _impl_.credential_issuer_ = nullptr;
  return temp;
}
inline ::registry_api::v1::CredentialIssuer* UpdateCredentialIssuerRequest::_internal_mutable_credential_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.credential_issuer_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::CredentialIssuer>(GetArena());
    _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(p);
  }
  return _impl_.credential_issuer_;
}
inline ::registry_api::v1::CredentialIssuer* UpdateCredentialIssuerRequest::mutable_credential_issuer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::CredentialIssuer* _msg = _internal_mutable_credential_issuer();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.UpdateCredentialIssuerRequest.credential_issuer)
  return _msg;
}
inline void UpdateCredentialIssuerRequest::set_allocated_credential_issuer(::registry_api::v1::CredentialIssuer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.credential_issuer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.credential_issuer_ = reinterpret_cast<::registry_api::v1::CredentialIssuer*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.UpdateCredentialIssuerRequest.credential_issuer)
}

// -------------------------------------------------------------------

// UpdateCredentialIssuerResponse

// bool ok = 1;
inline void UpdateCredentialIssuerResponse::clear_ok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = false;
}
inline bool UpdateCredentialIssuerResponse::ok() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateCredentialIssuerResponse.ok)
  return _internal_ok();
}
inline void UpdateCredentialIssuerResponse::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateCredentialIssuerResponse.ok)
}
inline bool UpdateCredentialIssuerResponse::_internal_ok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ok_;
}
inline void UpdateCredentialIssuerResponse::_internal_set_ok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = value;
}

// -------------------------------------------------------------------

// StatusListEntry

// string credential_id = 1;
inline void StatusListEntry::clear_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.ClearToEmpty();
}
inline const std::string& StatusListEntry::credential_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.credential_id)
  return _internal_credential_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusListEntry::set_credential_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.credential_id)
}
inline std::string* StatusListEntry::mutable_credential_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.StatusListEntry.credential_id)
  return _s;
}
inline const std::string& StatusListEntry::_internal_credential_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_id_.Get();
}
inline void StatusListEntry::_internal_set_credential_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.Set(value, GetArena());
}
inline std::string* StatusListEntry::_internal_mutable_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_id_.Mutable( GetArena());
}
inline std::string* StatusListEntry::release_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.StatusListEntry.credential_id)
  return _impl_.credential_id_.Release();
}
inline void StatusListEntry::set_allocated_credential_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_id_.IsDefault()) {
          _impl_.credential_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.StatusListEntry.credential_id)
}

// string credential_issuer_id = 2;
inline void StatusListEntry::clear_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.ClearToEmpty();
}
inline const std::string& StatusListEntry::credential_issuer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.credential_issuer_id)
  return _internal_credential_issuer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusListEntry::set_credential_issuer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.credential_issuer_id)
}
inline std::string* StatusListEntry::mutable_credential_issuer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_issuer_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.StatusListEntry.credential_issuer_id)
  return _s;
}
inline const std::string& StatusListEntry::_internal_credential_issuer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_issuer_id_.Get();
}
inline void StatusListEntry::_internal_set_credential_issuer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.Set(value, GetArena());
}
inline std::string* StatusListEntry::_internal_mutable_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_issuer_id_.Mutable( GetArena());
}
inline std::string* StatusListEntry::release_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.StatusListEntry.credential_issuer_id)
  return _impl_.credential_issuer_id_.Release();
}
inline void StatusListEntry::set_allocated_credential_issuer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_issuer_id_.IsDefault()) {
          _impl_.credential_issuer_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.StatusListEntry.credential_issuer_id)
}

// .registry_api.v1.StatusPurpose status_purpose = 3;
inline void StatusListEntry::clear_status_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_purpose_ = 0;
}
inline ::registry_api::v1::StatusPurpose StatusListEntry::status_purpose() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.status_purpose)
  return _internal_status_purpose();
}
inline void StatusListEntry::set_status_purpose(::registry_api::v1::StatusPurpose value) {
  _internal_set_status_purpose(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.status_purpose)
}
inline ::registry_api::v1::StatusPurpose StatusListEntry::_internal_status_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::registry_api::v1::StatusPurpose>(_impl_.status_purpose_);
}
inline void StatusListEntry::_internal_set_status_purpose(::registry_api::v1::StatusPurpose value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_purpose_ = value;
}

// string credential_type = 4;
inline void StatusListEntry::clear_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.ClearToEmpty();
}
inline const std::string& StatusListEntry::credential_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.credential_type)
  return _internal_credential_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusListEntry::set_credential_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.credential_type)
}
inline std::string* StatusListEntry::mutable_credential_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_type();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.StatusListEntry.credential_type)
  return _s;
}
inline const std::string& StatusListEntry::_internal_credential_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_type_.Get();
}
inline void StatusListEntry::_internal_set_credential_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(value, GetArena());
}
inline std::string* StatusListEntry::_internal_mutable_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_type_.Mutable( GetArena());
}
inline std::string* StatusListEntry::release_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.StatusListEntry.credential_type)
  return _impl_.credential_type_.Release();
}
inline void StatusListEntry::set_allocated_credential_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_type_.IsDefault()) {
          _impl_.credential_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.StatusListEntry.credential_type)
}

// int64 status_list_index = 5;
inline void StatusListEntry::clear_status_list_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_index_ = ::int64_t{0};
}
inline ::int64_t StatusListEntry::status_list_index() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.status_list_index)
  return _internal_status_list_index();
}
inline void StatusListEntry::set_status_list_index(::int64_t value) {
  _internal_set_status_list_index(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.status_list_index)
}
inline ::int64_t StatusListEntry::_internal_status_list_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_list_index_;
}
inline void StatusListEntry::_internal_set_status_list_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_index_ = value;
}

// string status_list_credential_id = 6;
inline void StatusListEntry::clear_status_list_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.ClearToEmpty();
}
inline const std::string& StatusListEntry::status_list_credential_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.status_list_credential_id)
  return _internal_status_list_credential_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusListEntry::set_status_list_credential_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.status_list_credential_id)
}
inline std::string* StatusListEntry::mutable_status_list_credential_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_list_credential_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.StatusListEntry.status_list_credential_id)
  return _s;
}
inline const std::string& StatusListEntry::_internal_status_list_credential_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_list_credential_id_.Get();
}
inline void StatusListEntry::_internal_set_status_list_credential_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.Set(value, GetArena());
}
inline std::string* StatusListEntry::_internal_mutable_status_list_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_list_credential_id_.Mutable( GetArena());
}
inline std::string* StatusListEntry::release_status_list_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.StatusListEntry.status_list_credential_id)
  return _impl_.status_list_credential_id_.Release();
}
inline void StatusListEntry::set_allocated_status_list_credential_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_list_credential_id_.IsDefault()) {
          _impl_.status_list_credential_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.StatusListEntry.status_list_credential_id)
}

// bool status = 7;
inline void StatusListEntry::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = false;
}
inline bool StatusListEntry::status() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.StatusListEntry.status)
  return _internal_status();
}
inline void StatusListEntry::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.StatusListEntry.status)
}
inline bool StatusListEntry::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void StatusListEntry::_internal_set_status(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// CreateStatusListEntryRequest

// string credential_id = 1;
inline void CreateStatusListEntryRequest::clear_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.ClearToEmpty();
}
inline const std::string& CreateStatusListEntryRequest::credential_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateStatusListEntryRequest.credential_id)
  return _internal_credential_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateStatusListEntryRequest::set_credential_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateStatusListEntryRequest.credential_id)
}
inline std::string* CreateStatusListEntryRequest::mutable_credential_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateStatusListEntryRequest.credential_id)
  return _s;
}
inline const std::string& CreateStatusListEntryRequest::_internal_credential_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_id_.Get();
}
inline void CreateStatusListEntryRequest::_internal_set_credential_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.Set(value, GetArena());
}
inline std::string* CreateStatusListEntryRequest::_internal_mutable_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_id_.Mutable( GetArena());
}
inline std::string* CreateStatusListEntryRequest::release_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateStatusListEntryRequest.credential_id)
  return _impl_.credential_id_.Release();
}
inline void CreateStatusListEntryRequest::set_allocated_credential_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_id_.IsDefault()) {
          _impl_.credential_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateStatusListEntryRequest.credential_id)
}

// string credential_issuer_id = 2;
inline void CreateStatusListEntryRequest::clear_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.ClearToEmpty();
}
inline const std::string& CreateStatusListEntryRequest::credential_issuer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateStatusListEntryRequest.credential_issuer_id)
  return _internal_credential_issuer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateStatusListEntryRequest::set_credential_issuer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateStatusListEntryRequest.credential_issuer_id)
}
inline std::string* CreateStatusListEntryRequest::mutable_credential_issuer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_issuer_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateStatusListEntryRequest.credential_issuer_id)
  return _s;
}
inline const std::string& CreateStatusListEntryRequest::_internal_credential_issuer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_issuer_id_.Get();
}
inline void CreateStatusListEntryRequest::_internal_set_credential_issuer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.Set(value, GetArena());
}
inline std::string* CreateStatusListEntryRequest::_internal_mutable_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_issuer_id_.Mutable( GetArena());
}
inline std::string* CreateStatusListEntryRequest::release_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateStatusListEntryRequest.credential_issuer_id)
  return _impl_.credential_issuer_id_.Release();
}
inline void CreateStatusListEntryRequest::set_allocated_credential_issuer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_issuer_id_.IsDefault()) {
          _impl_.credential_issuer_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateStatusListEntryRequest.credential_issuer_id)
}

// .registry_api.v1.StatusPurpose status_purpose = 3;
inline void CreateStatusListEntryRequest::clear_status_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_purpose_ = 0;
}
inline ::registry_api::v1::StatusPurpose CreateStatusListEntryRequest::status_purpose() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateStatusListEntryRequest.status_purpose)
  return _internal_status_purpose();
}
inline void CreateStatusListEntryRequest::set_status_purpose(::registry_api::v1::StatusPurpose value) {
  _internal_set_status_purpose(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateStatusListEntryRequest.status_purpose)
}
inline ::registry_api::v1::StatusPurpose CreateStatusListEntryRequest::_internal_status_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::registry_api::v1::StatusPurpose>(_impl_.status_purpose_);
}
inline void CreateStatusListEntryRequest::_internal_set_status_purpose(::registry_api::v1::StatusPurpose value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_purpose_ = value;
}

// string credential_type = 4;
inline void CreateStatusListEntryRequest::clear_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.ClearToEmpty();
}
inline const std::string& CreateStatusListEntryRequest::credential_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateStatusListEntryRequest.credential_type)
  return _internal_credential_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateStatusListEntryRequest::set_credential_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateStatusListEntryRequest.credential_type)
}
inline std::string* CreateStatusListEntryRequest::mutable_credential_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_type();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateStatusListEntryRequest.credential_type)
  return _s;
}
inline const std::string& CreateStatusListEntryRequest::_internal_credential_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_type_.Get();
}
inline void CreateStatusListEntryRequest::_internal_set_credential_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(value, GetArena());
}
inline std::string* CreateStatusListEntryRequest::_internal_mutable_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_type_.Mutable( GetArena());
}
inline std::string* CreateStatusListEntryRequest::release_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateStatusListEntryRequest.credential_type)
  return _impl_.credential_type_.Release();
}
inline void CreateStatusListEntryRequest::set_allocated_credential_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_type_.IsDefault()) {
          _impl_.credential_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateStatusListEntryRequest.credential_type)
}

// bool status = 5;
inline void CreateStatusListEntryRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = false;
}
inline bool CreateStatusListEntryRequest::status() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateStatusListEntryRequest.status)
  return _internal_status();
}
inline void CreateStatusListEntryRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.CreateStatusListEntryRequest.status)
}
inline bool CreateStatusListEntryRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void CreateStatusListEntryRequest::_internal_set_status(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// CreateStatusListEntryResponse

// .registry_api.v1.StatusListEntry status_list_entry = 1;
inline bool CreateStatusListEntryResponse::has_status_list_entry() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_list_entry_ != nullptr);
  return value;
}
inline void CreateStatusListEntryResponse::clear_status_list_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_list_entry_ != nullptr) _impl_.status_list_entry_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::registry_api::v1::StatusListEntry& CreateStatusListEntryResponse::_internal_status_list_entry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::registry_api::v1::StatusListEntry* p = _impl_.status_list_entry_;
  return p != nullptr ? *p : reinterpret_cast<const ::registry_api::v1::StatusListEntry&>(::registry_api::v1::_StatusListEntry_default_instance_);
}
inline const ::registry_api::v1::StatusListEntry& CreateStatusListEntryResponse::status_list_entry() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.CreateStatusListEntryResponse.status_list_entry)
  return _internal_status_list_entry();
}
inline void CreateStatusListEntryResponse::unsafe_arena_set_allocated_status_list_entry(::registry_api::v1::StatusListEntry* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_list_entry_);
  }
  _impl_.status_list_entry_ = reinterpret_cast<::registry_api::v1::StatusListEntry*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:registry_api.v1.CreateStatusListEntryResponse.status_list_entry)
}
inline ::registry_api::v1::StatusListEntry* CreateStatusListEntryResponse::release_status_list_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::StatusListEntry* released = _impl_.status_list_entry_;
  _impl_.status_list_entry_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::registry_api::v1::StatusListEntry* CreateStatusListEntryResponse::unsafe_arena_release_status_list_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.CreateStatusListEntryResponse.status_list_entry)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::registry_api::v1::StatusListEntry* temp = _impl_.status_list_entry_;
  _impl_.status_list_entry_ = nullptr;
  return temp;
}
inline ::registry_api::v1::StatusListEntry* CreateStatusListEntryResponse::_internal_mutable_status_list_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_list_entry_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::registry_api::v1::StatusListEntry>(GetArena());
    _impl_.status_list_entry_ = reinterpret_cast<::registry_api::v1::StatusListEntry*>(p);
  }
  return _impl_.status_list_entry_;
}
inline ::registry_api::v1::StatusListEntry* CreateStatusListEntryResponse::mutable_status_list_entry() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::registry_api::v1::StatusListEntry* _msg = _internal_mutable_status_list_entry();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.CreateStatusListEntryResponse.status_list_entry)
  return _msg;
}
inline void CreateStatusListEntryResponse::set_allocated_status_list_entry(::registry_api::v1::StatusListEntry* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.status_list_entry_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_list_entry_ = reinterpret_cast<::registry_api::v1::StatusListEntry*>(value);
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.CreateStatusListEntryResponse.status_list_entry)
}

// -------------------------------------------------------------------

// GetStatusListCredentialRequest

// string status_list_credential_id = 1;
inline void GetStatusListCredentialRequest::clear_status_list_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.ClearToEmpty();
}
inline const std::string& GetStatusListCredentialRequest::status_list_credential_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.GetStatusListCredentialRequest.status_list_credential_id)
  return _internal_status_list_credential_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStatusListCredentialRequest::set_status_list_credential_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.GetStatusListCredentialRequest.status_list_credential_id)
}
inline std::string* GetStatusListCredentialRequest::mutable_status_list_credential_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_list_credential_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.GetStatusListCredentialRequest.status_list_credential_id)
  return _s;
}
inline const std::string& GetStatusListCredentialRequest::_internal_status_list_credential_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_list_credential_id_.Get();
}
inline void GetStatusListCredentialRequest::_internal_set_status_list_credential_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.Set(value, GetArena());
}
inline std::string* GetStatusListCredentialRequest::_internal_mutable_status_list_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_list_credential_id_.Mutable( GetArena());
}
inline std::string* GetStatusListCredentialRequest::release_status_list_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.GetStatusListCredentialRequest.status_list_credential_id)
  return _impl_.status_list_credential_id_.Release();
}
inline void GetStatusListCredentialRequest::set_allocated_status_list_credential_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_list_credential_id_.IsDefault()) {
          _impl_.status_list_credential_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.GetStatusListCredentialRequest.status_list_credential_id)
}

// -------------------------------------------------------------------

// GetStatusListCredentialResponse

// string status_list_credential = 1;
inline void GetStatusListCredentialResponse::clear_status_list_credential() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_.ClearToEmpty();
}
inline const std::string& GetStatusListCredentialResponse::status_list_credential() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.GetStatusListCredentialResponse.status_list_credential)
  return _internal_status_list_credential();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStatusListCredentialResponse::set_status_list_credential(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.GetStatusListCredentialResponse.status_list_credential)
}
inline std::string* GetStatusListCredentialResponse::mutable_status_list_credential() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_list_credential();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.GetStatusListCredentialResponse.status_list_credential)
  return _s;
}
inline const std::string& GetStatusListCredentialResponse::_internal_status_list_credential() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_list_credential_.Get();
}
inline void GetStatusListCredentialResponse::_internal_set_status_list_credential(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_.Set(value, GetArena());
}
inline std::string* GetStatusListCredentialResponse::_internal_mutable_status_list_credential() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_list_credential_.Mutable( GetArena());
}
inline std::string* GetStatusListCredentialResponse::release_status_list_credential() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.GetStatusListCredentialResponse.status_list_credential)
  return _impl_.status_list_credential_.Release();
}
inline void GetStatusListCredentialResponse::set_allocated_status_list_credential(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_list_credential_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_list_credential_.IsDefault()) {
          _impl_.status_list_credential_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.GetStatusListCredentialResponse.status_list_credential)
}

// -------------------------------------------------------------------

// UpdateStatusListEntryRequest

// string credential_id = 1;
inline void UpdateStatusListEntryRequest::clear_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.ClearToEmpty();
}
inline const std::string& UpdateStatusListEntryRequest::credential_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateStatusListEntryRequest.credential_id)
  return _internal_credential_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateStatusListEntryRequest::set_credential_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateStatusListEntryRequest.credential_id)
}
inline std::string* UpdateStatusListEntryRequest::mutable_credential_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.UpdateStatusListEntryRequest.credential_id)
  return _s;
}
inline const std::string& UpdateStatusListEntryRequest::_internal_credential_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_id_.Get();
}
inline void UpdateStatusListEntryRequest::_internal_set_credential_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.Set(value, GetArena());
}
inline std::string* UpdateStatusListEntryRequest::_internal_mutable_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_id_.Mutable( GetArena());
}
inline std::string* UpdateStatusListEntryRequest::release_credential_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.UpdateStatusListEntryRequest.credential_id)
  return _impl_.credential_id_.Release();
}
inline void UpdateStatusListEntryRequest::set_allocated_credential_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_id_.IsDefault()) {
          _impl_.credential_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.UpdateStatusListEntryRequest.credential_id)
}

// string credential_issuer_id = 2;
inline void UpdateStatusListEntryRequest::clear_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.ClearToEmpty();
}
inline const std::string& UpdateStatusListEntryRequest::credential_issuer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateStatusListEntryRequest.credential_issuer_id)
  return _internal_credential_issuer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateStatusListEntryRequest::set_credential_issuer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateStatusListEntryRequest.credential_issuer_id)
}
inline std::string* UpdateStatusListEntryRequest::mutable_credential_issuer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_issuer_id();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.UpdateStatusListEntryRequest.credential_issuer_id)
  return _s;
}
inline const std::string& UpdateStatusListEntryRequest::_internal_credential_issuer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_issuer_id_.Get();
}
inline void UpdateStatusListEntryRequest::_internal_set_credential_issuer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.Set(value, GetArena());
}
inline std::string* UpdateStatusListEntryRequest::_internal_mutable_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_issuer_id_.Mutable( GetArena());
}
inline std::string* UpdateStatusListEntryRequest::release_credential_issuer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.UpdateStatusListEntryRequest.credential_issuer_id)
  return _impl_.credential_issuer_id_.Release();
}
inline void UpdateStatusListEntryRequest::set_allocated_credential_issuer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_issuer_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_issuer_id_.IsDefault()) {
          _impl_.credential_issuer_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.UpdateStatusListEntryRequest.credential_issuer_id)
}

// .registry_api.v1.StatusPurpose status_purpose = 3;
inline void UpdateStatusListEntryRequest::clear_status_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_purpose_ = 0;
}
inline ::registry_api::v1::StatusPurpose UpdateStatusListEntryRequest::status_purpose() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateStatusListEntryRequest.status_purpose)
  return _internal_status_purpose();
}
inline void UpdateStatusListEntryRequest::set_status_purpose(::registry_api::v1::StatusPurpose value) {
  _internal_set_status_purpose(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateStatusListEntryRequest.status_purpose)
}
inline ::registry_api::v1::StatusPurpose UpdateStatusListEntryRequest::_internal_status_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::registry_api::v1::StatusPurpose>(_impl_.status_purpose_);
}
inline void UpdateStatusListEntryRequest::_internal_set_status_purpose(::registry_api::v1::StatusPurpose value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_purpose_ = value;
}

// string credential_type = 4;
inline void UpdateStatusListEntryRequest::clear_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.ClearToEmpty();
}
inline const std::string& UpdateStatusListEntryRequest::credential_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateStatusListEntryRequest.credential_type)
  return _internal_credential_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateStatusListEntryRequest::set_credential_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateStatusListEntryRequest.credential_type)
}
inline std::string* UpdateStatusListEntryRequest::mutable_credential_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_type();
  // @@protoc_insertion_point(field_mutable:registry_api.v1.UpdateStatusListEntryRequest.credential_type)
  return _s;
}
inline const std::string& UpdateStatusListEntryRequest::_internal_credential_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_type_.Get();
}
inline void UpdateStatusListEntryRequest::_internal_set_credential_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(value, GetArena());
}
inline std::string* UpdateStatusListEntryRequest::_internal_mutable_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_type_.Mutable( GetArena());
}
inline std::string* UpdateStatusListEntryRequest::release_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:registry_api.v1.UpdateStatusListEntryRequest.credential_type)
  return _impl_.credential_type_.Release();
}
inline void UpdateStatusListEntryRequest::set_allocated_credential_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_type_.IsDefault()) {
          _impl_.credential_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:registry_api.v1.UpdateStatusListEntryRequest.credential_type)
}

// bool status = 5;
inline void UpdateStatusListEntryRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = false;
}
inline bool UpdateStatusListEntryRequest::status() const {
  // @@protoc_insertion_point(field_get:registry_api.v1.UpdateStatusListEntryRequest.status)
  return _internal_status();
}
inline void UpdateStatusListEntryRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:registry_api.v1.UpdateStatusListEntryRequest.status)
}
inline bool UpdateStatusListEntryRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void UpdateStatusListEntryRequest::_internal_set_status(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// UpdateStatusListEntryResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace registry_api


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::registry_api::v1::ResolutionOptionAccept> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::registry_api::v1::ResolutionOptionAccept>() {
  return ::registry_api::v1::ResolutionOptionAccept_descriptor();
}
template <>
struct is_proto_enum<::registry_api::v1::IssuerStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::registry_api::v1::IssuerStatus>() {
  return ::registry_api::v1::IssuerStatus_descriptor();
}
template <>
struct is_proto_enum<::registry_api::v1::StatusPurpose> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::registry_api::v1::StatusPurpose>() {
  return ::registry_api::v1::StatusPurpose_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_registry_5fapi_2fv1_2fregistry_2eproto_2epb_2eh
