// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gateway/v1/gateway.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_gateway_2fv1_2fgateway_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_gateway_2fv1_2fgateway_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "common/v1/packet.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gateway_2fv1_2fgateway_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_gateway_2fv1_2fgateway_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_gateway_2fv1_2fgateway_2eproto;
namespace gateway {
class ConnectionsRequest;
struct ConnectionsRequestDefaultTypeInternal;
extern ConnectionsRequestDefaultTypeInternal _ConnectionsRequest_default_instance_;
class ConnectionsResponse;
struct ConnectionsResponseDefaultTypeInternal;
extern ConnectionsResponseDefaultTypeInternal _ConnectionsResponse_default_instance_;
class LogEntry;
struct LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
}  // namespace gateway
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gateway {

// ===================================================================


// -------------------------------------------------------------------

class LogEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gateway.LogEntry) */ {
 public:
  inline LogEntry() : LogEntry(nullptr) {}
  ~LogEntry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline LogEntry(const LogEntry& from) : LogEntry(nullptr, from) {}
  inline LogEntry(LogEntry&& from) noexcept
      : LogEntry(nullptr, std::move(from)) {}
  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogEntry& operator=(LogEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogEntry* internal_default_instance() {
    return reinterpret_cast<const LogEntry*>(
        &_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LogEntry& a, LogEntry& b) { a.Swap(&b); }
  inline void Swap(LogEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LogEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogEntry& from) { LogEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gateway.LogEntry"; }

 protected:
  explicit LogEntry(::google::protobuf::Arena* arena);
  LogEntry(::google::protobuf::Arena* arena, const LogEntry& from);
  LogEntry(::google::protobuf::Arena* arena, LogEntry&& from) noexcept
      : LogEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVerifierFieldNumber = 1,
    kNoteFieldNumber = 2,
    kTimestampFieldNumber = 3,
    kOriginFieldNumber = 4,
    kConnectionIdFieldNumber = 5,
  };
  // string verifier = 1;
  void clear_verifier() ;
  const std::string& verifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifier(Arg_&& arg, Args_... args);
  std::string* mutable_verifier();
  PROTOBUF_NODISCARD std::string* release_verifier();
  void set_allocated_verifier(std::string* value);

  private:
  const std::string& _internal_verifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifier(
      const std::string& value);
  std::string* _internal_mutable_verifier();

  public:
  // string note = 2;
  void clear_note() ;
  const std::string& note() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_note(Arg_&& arg, Args_... args);
  std::string* mutable_note();
  PROTOBUF_NODISCARD std::string* release_note();
  void set_allocated_note(std::string* value);

  private:
  const std::string& _internal_note() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_note(
      const std::string& value);
  std::string* _internal_mutable_note();

  public:
  // string timestamp = 3;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string origin = 4;
  void clear_origin() ;
  const std::string& origin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_origin(Arg_&& arg, Args_... args);
  std::string* mutable_origin();
  PROTOBUF_NODISCARD std::string* release_origin();
  void set_allocated_origin(std::string* value);

  private:
  const std::string& _internal_origin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_origin(
      const std::string& value);
  std::string* _internal_mutable_origin();

  public:
  // string connection_id = 5;
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // @@protoc_insertion_point(class_scope:gateway.LogEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LogEntry_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LogEntry& from_msg);
    ::google::protobuf::internal::ArenaStringPtr verifier_;
    ::google::protobuf::internal::ArenaStringPtr note_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr origin_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gateway_2fv1_2fgateway_2eproto;
};
// -------------------------------------------------------------------

class ConnectionsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:gateway.ConnectionsRequest) */ {
 public:
  inline ConnectionsRequest() : ConnectionsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionsRequest(const ConnectionsRequest& from) : ConnectionsRequest(nullptr, from) {}
  inline ConnectionsRequest(ConnectionsRequest&& from) noexcept
      : ConnectionsRequest(nullptr, std::move(from)) {}
  inline ConnectionsRequest& operator=(const ConnectionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionsRequest& operator=(ConnectionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectionsRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectionsRequest*>(
        &_ConnectionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ConnectionsRequest& a, ConnectionsRequest& b) { a.Swap(&b); }
  inline void Swap(ConnectionsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ConnectionsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ConnectionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ConnectionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gateway.ConnectionsRequest"; }

 protected:
  explicit ConnectionsRequest(::google::protobuf::Arena* arena);
  ConnectionsRequest(::google::protobuf::Arena* arena, const ConnectionsRequest& from);
  ConnectionsRequest(::google::protobuf::Arena* arena, ConnectionsRequest&& from) noexcept
      : ConnectionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:gateway.ConnectionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectionsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_gateway_2fv1_2fgateway_2eproto;
};
// -------------------------------------------------------------------

class ConnectionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gateway.ConnectionsResponse) */ {
 public:
  inline ConnectionsResponse() : ConnectionsResponse(nullptr) {}
  ~ConnectionsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionsResponse(const ConnectionsResponse& from) : ConnectionsResponse(nullptr, from) {}
  inline ConnectionsResponse(ConnectionsResponse&& from) noexcept
      : ConnectionsResponse(nullptr, std::move(from)) {}
  inline ConnectionsResponse& operator=(const ConnectionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionsResponse& operator=(ConnectionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectionsResponse* internal_default_instance() {
    return reinterpret_cast<const ConnectionsResponse*>(
        &_ConnectionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ConnectionsResponse& a, ConnectionsResponse& b) { a.Swap(&b); }
  inline void Swap(ConnectionsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ConnectionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectionsResponse& from) { ConnectionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConnectionsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gateway.ConnectionsResponse"; }

 protected:
  explicit ConnectionsResponse(::google::protobuf::Arena* arena);
  ConnectionsResponse(::google::protobuf::Arena* arena, const ConnectionsResponse& from);
  ConnectionsResponse(::google::protobuf::Arena* arena, ConnectionsResponse&& from) noexcept
      : ConnectionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActiveFieldNumber = 1,
    kCreatedFieldNumber = 2,
    kRemovedFieldNumber = 3,
  };
  // repeated string active = 1;
  int active_size() const;
  private:
  int _internal_active_size() const;

  public:
  void clear_active() ;
  const std::string& active(int index) const;
  std::string* mutable_active(int index);
  void set_active(int index, const std::string& value);
  void set_active(int index, std::string&& value);
  void set_active(int index, const char* value);
  void set_active(int index, const char* value, std::size_t size);
  void set_active(int index, absl::string_view value);
  std::string* add_active();
  void add_active(const std::string& value);
  void add_active(std::string&& value);
  void add_active(const char* value);
  void add_active(const char* value, std::size_t size);
  void add_active(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& active() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_active();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_active() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_active();

  public:
  // repeated .gateway.LogEntry created = 2;
  int created_size() const;
  private:
  int _internal_created_size() const;

  public:
  void clear_created() ;
  ::gateway::LogEntry* mutable_created(int index);
  ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>* mutable_created();

  private:
  const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>& _internal_created() const;
  ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>* _internal_mutable_created();
  public:
  const ::gateway::LogEntry& created(int index) const;
  ::gateway::LogEntry* add_created();
  const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>& created() const;
  // repeated .gateway.LogEntry removed = 3;
  int removed_size() const;
  private:
  int _internal_removed_size() const;

  public:
  void clear_removed() ;
  ::gateway::LogEntry* mutable_removed(int index);
  ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>* mutable_removed();

  private:
  const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>& _internal_removed() const;
  ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>* _internal_mutable_removed();
  public:
  const ::gateway::LogEntry& removed(int index) const;
  ::gateway::LogEntry* add_removed();
  const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>& removed() const;
  // @@protoc_insertion_point(class_scope:gateway.ConnectionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectionsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> active_;
    ::google::protobuf::RepeatedPtrField< ::gateway::LogEntry > created_;
    ::google::protobuf::RepeatedPtrField< ::gateway::LogEntry > removed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gateway_2fv1_2fgateway_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LogEntry

// string verifier = 1;
inline void LogEntry::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.ClearToEmpty();
}
inline const std::string& LogEntry::verifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.LogEntry.verifier)
  return _internal_verifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_verifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gateway.LogEntry.verifier)
}
inline std::string* LogEntry::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:gateway.LogEntry.verifier)
  return _s;
}
inline const std::string& LogEntry::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifier_.Get();
}
inline void LogEntry::_internal_set_verifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifier_.Mutable( GetArena());
}
inline std::string* LogEntry::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gateway.LogEntry.verifier)
  return _impl_.verifier_.Release();
}
inline void LogEntry::set_allocated_verifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.verifier_.IsDefault()) {
          _impl_.verifier_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gateway.LogEntry.verifier)
}

// string note = 2;
inline void LogEntry::clear_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_.ClearToEmpty();
}
inline const std::string& LogEntry::note() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.LogEntry.note)
  return _internal_note();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_note(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gateway.LogEntry.note)
}
inline std::string* LogEntry::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:gateway.LogEntry.note)
  return _s;
}
inline const std::string& LogEntry::_internal_note() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_.Get();
}
inline void LogEntry::_internal_set_note(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.note_.Mutable( GetArena());
}
inline std::string* LogEntry::release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gateway.LogEntry.note)
  return _impl_.note_.Release();
}
inline void LogEntry::set_allocated_note(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.note_.IsDefault()) {
          _impl_.note_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gateway.LogEntry.note)
}

// string timestamp = 3;
inline void LogEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& LogEntry::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.LogEntry.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gateway.LogEntry.timestamp)
}
inline std::string* LogEntry::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:gateway.LogEntry.timestamp)
  return _s;
}
inline const std::string& LogEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void LogEntry::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* LogEntry::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gateway.LogEntry.timestamp)
  return _impl_.timestamp_.Release();
}
inline void LogEntry::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timestamp_.IsDefault()) {
          _impl_.timestamp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gateway.LogEntry.timestamp)
}

// string origin = 4;
inline void LogEntry::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.ClearToEmpty();
}
inline const std::string& LogEntry::origin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.LogEntry.origin)
  return _internal_origin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_origin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gateway.LogEntry.origin)
}
inline std::string* LogEntry::mutable_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:gateway.LogEntry.origin)
  return _s;
}
inline const std::string& LogEntry::_internal_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.origin_.Get();
}
inline void LogEntry::_internal_set_origin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.origin_.Mutable( GetArena());
}
inline std::string* LogEntry::release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gateway.LogEntry.origin)
  return _impl_.origin_.Release();
}
inline void LogEntry::set_allocated_origin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.origin_.IsDefault()) {
          _impl_.origin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gateway.LogEntry.origin)
}

// string connection_id = 5;
inline void LogEntry::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& LogEntry::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.LogEntry.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gateway.LogEntry.connection_id)
}
inline std::string* LogEntry::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:gateway.LogEntry.connection_id)
  return _s;
}
inline const std::string& LogEntry::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void LogEntry::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* LogEntry::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gateway.LogEntry.connection_id)
  return _impl_.connection_id_.Release();
}
inline void LogEntry::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.connection_id_.IsDefault()) {
          _impl_.connection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gateway.LogEntry.connection_id)
}

// -------------------------------------------------------------------

// ConnectionsRequest

// -------------------------------------------------------------------

// ConnectionsResponse

// repeated string active = 1;
inline int ConnectionsResponse::_internal_active_size() const {
  return _internal_active().size();
}
inline int ConnectionsResponse::active_size() const {
  return _internal_active_size();
}
inline void ConnectionsResponse::clear_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_.Clear();
}
inline std::string* ConnectionsResponse::add_active()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_active()->Add();
  // @@protoc_insertion_point(field_add_mutable:gateway.ConnectionsResponse.active)
  return _s;
}
inline const std::string& ConnectionsResponse::active(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.ConnectionsResponse.active)
  return _internal_active().Get(index);
}
inline std::string* ConnectionsResponse::mutable_active(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gateway.ConnectionsResponse.active)
  return _internal_mutable_active()->Mutable(index);
}
inline void ConnectionsResponse::set_active(int index, const std::string& value) {
  _internal_mutable_active()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::set_active(int index, std::string&& value) {
  _internal_mutable_active()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::set_active(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_active()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::set_active(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_active()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::set_active(int index, absl::string_view value) {
  _internal_mutable_active()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::add_active(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::add_active(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::add_active(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::add_active(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gateway.ConnectionsResponse.active)
}
inline void ConnectionsResponse::add_active(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:gateway.ConnectionsResponse.active)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ConnectionsResponse::active() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gateway.ConnectionsResponse.active)
  return _internal_active();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ConnectionsResponse::mutable_active() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gateway.ConnectionsResponse.active)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_active();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ConnectionsResponse::_internal_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ConnectionsResponse::_internal_mutable_active() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.active_;
}

// repeated .gateway.LogEntry created = 2;
inline int ConnectionsResponse::_internal_created_size() const {
  return _internal_created().size();
}
inline int ConnectionsResponse::created_size() const {
  return _internal_created_size();
}
inline void ConnectionsResponse::clear_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Clear();
}
inline ::gateway::LogEntry* ConnectionsResponse::mutable_created(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gateway.ConnectionsResponse.created)
  return _internal_mutable_created()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>* ConnectionsResponse::mutable_created()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gateway.ConnectionsResponse.created)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_created();
}
inline const ::gateway::LogEntry& ConnectionsResponse::created(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.ConnectionsResponse.created)
  return _internal_created().Get(index);
}
inline ::gateway::LogEntry* ConnectionsResponse::add_created() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gateway::LogEntry* _add = _internal_mutable_created()->Add();
  // @@protoc_insertion_point(field_add:gateway.ConnectionsResponse.created)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>& ConnectionsResponse::created() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gateway.ConnectionsResponse.created)
  return _internal_created();
}
inline const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>&
ConnectionsResponse::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_;
}
inline ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>*
ConnectionsResponse::_internal_mutable_created() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.created_;
}

// repeated .gateway.LogEntry removed = 3;
inline int ConnectionsResponse::_internal_removed_size() const {
  return _internal_removed().size();
}
inline int ConnectionsResponse::removed_size() const {
  return _internal_removed_size();
}
inline void ConnectionsResponse::clear_removed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.removed_.Clear();
}
inline ::gateway::LogEntry* ConnectionsResponse::mutable_removed(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gateway.ConnectionsResponse.removed)
  return _internal_mutable_removed()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>* ConnectionsResponse::mutable_removed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gateway.ConnectionsResponse.removed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_removed();
}
inline const ::gateway::LogEntry& ConnectionsResponse::removed(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gateway.ConnectionsResponse.removed)
  return _internal_removed().Get(index);
}
inline ::gateway::LogEntry* ConnectionsResponse::add_removed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gateway::LogEntry* _add = _internal_mutable_removed()->Add();
  // @@protoc_insertion_point(field_add:gateway.ConnectionsResponse.removed)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>& ConnectionsResponse::removed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gateway.ConnectionsResponse.removed)
  return _internal_removed();
}
inline const ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>&
ConnectionsResponse::_internal_removed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.removed_;
}
inline ::google::protobuf::RepeatedPtrField<::gateway::LogEntry>*
ConnectionsResponse::_internal_mutable_removed() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.removed_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gateway


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_gateway_2fv1_2fgateway_2eproto_2epb_2eh
