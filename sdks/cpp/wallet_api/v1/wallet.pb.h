// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: wallet_api/v1/wallet.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_wallet_5fapi_2fv1_2fwallet_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_wallet_5fapi_2fv1_2fwallet_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "common/v1/packet.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_wallet_5fapi_2fv1_2fwallet_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_wallet_5fapi_2fv1_2fwallet_2eproto;
namespace wallet_api {
namespace v1 {
class AddCredentialRequest;
struct AddCredentialRequestDefaultTypeInternal;
extern AddCredentialRequestDefaultTypeInternal _AddCredentialRequest_default_instance_;
class AddCredentialResponse;
struct AddCredentialResponseDefaultTypeInternal;
extern AddCredentialResponseDefaultTypeInternal _AddCredentialResponse_default_instance_;
class AssociateWalletRequest;
struct AssociateWalletRequestDefaultTypeInternal;
extern AssociateWalletRequestDefaultTypeInternal _AssociateWalletRequest_default_instance_;
class AssociateWalletResponse;
struct AssociateWalletResponseDefaultTypeInternal;
extern AssociateWalletResponseDefaultTypeInternal _AssociateWalletResponse_default_instance_;
class BalanceDetail;
struct BalanceDetailDefaultTypeInternal;
extern BalanceDetailDefaultTypeInternal _BalanceDetail_default_instance_;
class ContractSummary;
struct ContractSummaryDefaultTypeInternal;
extern ContractSummaryDefaultTypeInternal _ContractSummary_default_instance_;
class CreateAndAssociateWalletRequest;
struct CreateAndAssociateWalletRequestDefaultTypeInternal;
extern CreateAndAssociateWalletRequestDefaultTypeInternal _CreateAndAssociateWalletRequest_default_instance_;
class CreateAndAssociateWalletResponse;
struct CreateAndAssociateWalletResponseDefaultTypeInternal;
extern CreateAndAssociateWalletResponseDefaultTypeInternal _CreateAndAssociateWalletResponse_default_instance_;
class CreateOwnerRequest;
struct CreateOwnerRequestDefaultTypeInternal;
extern CreateOwnerRequestDefaultTypeInternal _CreateOwnerRequest_default_instance_;
class CreateOwnerResponse;
struct CreateOwnerResponseDefaultTypeInternal;
extern CreateOwnerResponseDefaultTypeInternal _CreateOwnerResponse_default_instance_;
class CreateWalletRequest;
struct CreateWalletRequestDefaultTypeInternal;
extern CreateWalletRequestDefaultTypeInternal _CreateWalletRequest_default_instance_;
class CreateWalletResponse;
struct CreateWalletResponseDefaultTypeInternal;
extern CreateWalletResponseDefaultTypeInternal _CreateWalletResponse_default_instance_;
class GetTransactionDetailRequest;
struct GetTransactionDetailRequestDefaultTypeInternal;
extern GetTransactionDetailRequestDefaultTypeInternal _GetTransactionDetailRequest_default_instance_;
class GetTransactionDetailResponse;
struct GetTransactionDetailResponseDefaultTypeInternal;
extern GetTransactionDetailResponseDefaultTypeInternal _GetTransactionDetailResponse_default_instance_;
class GetTransactionDetailResponse_LogEntry;
struct GetTransactionDetailResponse_LogEntryDefaultTypeInternal;
extern GetTransactionDetailResponse_LogEntryDefaultTypeInternal _GetTransactionDetailResponse_LogEntry_default_instance_;
class ListAssetFilesRequest;
struct ListAssetFilesRequestDefaultTypeInternal;
extern ListAssetFilesRequestDefaultTypeInternal _ListAssetFilesRequest_default_instance_;
class ListAssetFilesResponse;
struct ListAssetFilesResponseDefaultTypeInternal;
extern ListAssetFilesResponseDefaultTypeInternal _ListAssetFilesResponse_default_instance_;
class ListAssetFilesResponse_Fund;
struct ListAssetFilesResponse_FundDefaultTypeInternal;
extern ListAssetFilesResponse_FundDefaultTypeInternal _ListAssetFilesResponse_Fund_default_instance_;
class ListAssetFilesResponse_Notary;
struct ListAssetFilesResponse_NotaryDefaultTypeInternal;
extern ListAssetFilesResponse_NotaryDefaultTypeInternal _ListAssetFilesResponse_Notary_default_instance_;
class ListAssetFilesResponse_Promissory;
struct ListAssetFilesResponse_PromissoryDefaultTypeInternal;
extern ListAssetFilesResponse_PromissoryDefaultTypeInternal _ListAssetFilesResponse_Promissory_default_instance_;
class ListCredentialsRequest;
struct ListCredentialsRequestDefaultTypeInternal;
extern ListCredentialsRequestDefaultTypeInternal _ListCredentialsRequest_default_instance_;
class ListCredentialsResponse;
struct ListCredentialsResponseDefaultTypeInternal;
extern ListCredentialsResponseDefaultTypeInternal _ListCredentialsResponse_default_instance_;
class ListTransactionsRequest;
struct ListTransactionsRequestDefaultTypeInternal;
extern ListTransactionsRequestDefaultTypeInternal _ListTransactionsRequest_default_instance_;
class ListTransactionsResponse;
struct ListTransactionsResponseDefaultTypeInternal;
extern ListTransactionsResponseDefaultTypeInternal _ListTransactionsResponse_default_instance_;
class ListWalletBalanceDetailsRequest;
struct ListWalletBalanceDetailsRequestDefaultTypeInternal;
extern ListWalletBalanceDetailsRequestDefaultTypeInternal _ListWalletBalanceDetailsRequest_default_instance_;
class ListWalletBalanceDetailsResponse;
struct ListWalletBalanceDetailsResponseDefaultTypeInternal;
extern ListWalletBalanceDetailsResponseDefaultTypeInternal _ListWalletBalanceDetailsResponse_default_instance_;
class ListWalletBalancesRequest;
struct ListWalletBalancesRequestDefaultTypeInternal;
extern ListWalletBalancesRequestDefaultTypeInternal _ListWalletBalancesRequest_default_instance_;
class ListWalletBalancesResponse;
struct ListWalletBalancesResponseDefaultTypeInternal;
extern ListWalletBalancesResponseDefaultTypeInternal _ListWalletBalancesResponse_default_instance_;
class ListWalletsRequest;
struct ListWalletsRequestDefaultTypeInternal;
extern ListWalletsRequestDefaultTypeInternal _ListWalletsRequest_default_instance_;
class ListWalletsResponse;
struct ListWalletsResponseDefaultTypeInternal;
extern ListWalletsResponseDefaultTypeInternal _ListWalletsResponse_default_instance_;
class ListWalletsResponse_Wallet;
struct ListWalletsResponse_WalletDefaultTypeInternal;
extern ListWalletsResponse_WalletDefaultTypeInternal _ListWalletsResponse_Wallet_default_instance_;
class PrepareAtomicAssetSwapRequest;
struct PrepareAtomicAssetSwapRequestDefaultTypeInternal;
extern PrepareAtomicAssetSwapRequestDefaultTypeInternal _PrepareAtomicAssetSwapRequest_default_instance_;
class PrepareAtomicAssetSwapResponse;
struct PrepareAtomicAssetSwapResponseDefaultTypeInternal;
extern PrepareAtomicAssetSwapResponseDefaultTypeInternal _PrepareAtomicAssetSwapResponse_default_instance_;
class PrepareCrossBorderPaymentRequest;
struct PrepareCrossBorderPaymentRequestDefaultTypeInternal;
extern PrepareCrossBorderPaymentRequestDefaultTypeInternal _PrepareCrossBorderPaymentRequest_default_instance_;
class PrepareCrossBorderPaymentResponse;
struct PrepareCrossBorderPaymentResponseDefaultTypeInternal;
extern PrepareCrossBorderPaymentResponseDefaultTypeInternal _PrepareCrossBorderPaymentResponse_default_instance_;
class PrepareFundsChangeRequest;
struct PrepareFundsChangeRequestDefaultTypeInternal;
extern PrepareFundsChangeRequestDefaultTypeInternal _PrepareFundsChangeRequest_default_instance_;
class PrepareFundsChangeResponse;
struct PrepareFundsChangeResponseDefaultTypeInternal;
extern PrepareFundsChangeResponseDefaultTypeInternal _PrepareFundsChangeResponse_default_instance_;
class PreparePaymentWithImplicitFundsChangeRequest;
struct PreparePaymentWithImplicitFundsChangeRequestDefaultTypeInternal;
extern PreparePaymentWithImplicitFundsChangeRequestDefaultTypeInternal _PreparePaymentWithImplicitFundsChangeRequest_default_instance_;
class PreparePaymentWithImplicitFundsChangeResponse;
struct PreparePaymentWithImplicitFundsChangeResponseDefaultTypeInternal;
extern PreparePaymentWithImplicitFundsChangeResponseDefaultTypeInternal _PreparePaymentWithImplicitFundsChangeResponse_default_instance_;
class PrepareTransactionRequest;
struct PrepareTransactionRequestDefaultTypeInternal;
extern PrepareTransactionRequestDefaultTypeInternal _PrepareTransactionRequest_default_instance_;
class PrepareTransactionResponse;
struct PrepareTransactionResponseDefaultTypeInternal;
extern PrepareTransactionResponseDefaultTypeInternal _PrepareTransactionResponse_default_instance_;
class RequestPresentationRequest;
struct RequestPresentationRequestDefaultTypeInternal;
extern RequestPresentationRequestDefaultTypeInternal _RequestPresentationRequest_default_instance_;
class RequestPresentationResponse;
struct RequestPresentationResponseDefaultTypeInternal;
extern RequestPresentationResponseDefaultTypeInternal _RequestPresentationResponse_default_instance_;
class ResumePausedTransactionRequest;
struct ResumePausedTransactionRequestDefaultTypeInternal;
extern ResumePausedTransactionRequestDefaultTypeInternal _ResumePausedTransactionRequest_default_instance_;
class ResumePausedTransactionResponse;
struct ResumePausedTransactionResponseDefaultTypeInternal;
extern ResumePausedTransactionResponseDefaultTypeInternal _ResumePausedTransactionResponse_default_instance_;
class WalletBalance;
struct WalletBalanceDefaultTypeInternal;
extern WalletBalanceDefaultTypeInternal _WalletBalance_default_instance_;
}  // namespace v1
}  // namespace wallet_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace wallet_api {
namespace v1 {
enum PrepareFundsChangeResponse_Status : int {
  PrepareFundsChangeResponse_Status_STATUS_UNSPECIFIED = 0,
  PrepareFundsChangeResponse_Status_STATUS_SUCCESS = 1,
  PrepareFundsChangeResponse_Status_STATUS_INSUFFICIENT_FUNDS = 2,
  PrepareFundsChangeResponse_Status_STATUS_FUNDS_PRESENT_NOOP = 3,
  PrepareFundsChangeResponse_Status_PrepareFundsChangeResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PrepareFundsChangeResponse_Status_PrepareFundsChangeResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PrepareFundsChangeResponse_Status_IsValid(int value);
extern const uint32_t PrepareFundsChangeResponse_Status_internal_data_[];
constexpr PrepareFundsChangeResponse_Status PrepareFundsChangeResponse_Status_Status_MIN = static_cast<PrepareFundsChangeResponse_Status>(0);
constexpr PrepareFundsChangeResponse_Status PrepareFundsChangeResponse_Status_Status_MAX = static_cast<PrepareFundsChangeResponse_Status>(3);
constexpr int PrepareFundsChangeResponse_Status_Status_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PrepareFundsChangeResponse_Status_descriptor();
template <typename T>
const std::string& PrepareFundsChangeResponse_Status_Name(T value) {
  static_assert(std::is_same<T, PrepareFundsChangeResponse_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return PrepareFundsChangeResponse_Status_Name(static_cast<PrepareFundsChangeResponse_Status>(value));
}
template <>
inline const std::string& PrepareFundsChangeResponse_Status_Name(PrepareFundsChangeResponse_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PrepareFundsChangeResponse_Status_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PrepareFundsChangeResponse_Status_Parse(absl::string_view name, PrepareFundsChangeResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrepareFundsChangeResponse_Status>(
      PrepareFundsChangeResponse_Status_descriptor(), name, value);
}
enum PrepareTransactionResponse_Status : int {
  PrepareTransactionResponse_Status_UNSPECIFIED = 0,
  PrepareTransactionResponse_Status_SUCCESS = 1,
  PrepareTransactionResponse_Status_FAILURE = 2,
  PrepareTransactionResponse_Status_PrepareTransactionResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PrepareTransactionResponse_Status_PrepareTransactionResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PrepareTransactionResponse_Status_IsValid(int value);
extern const uint32_t PrepareTransactionResponse_Status_internal_data_[];
constexpr PrepareTransactionResponse_Status PrepareTransactionResponse_Status_Status_MIN = static_cast<PrepareTransactionResponse_Status>(0);
constexpr PrepareTransactionResponse_Status PrepareTransactionResponse_Status_Status_MAX = static_cast<PrepareTransactionResponse_Status>(2);
constexpr int PrepareTransactionResponse_Status_Status_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PrepareTransactionResponse_Status_descriptor();
template <typename T>
const std::string& PrepareTransactionResponse_Status_Name(T value) {
  static_assert(std::is_same<T, PrepareTransactionResponse_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return PrepareTransactionResponse_Status_Name(static_cast<PrepareTransactionResponse_Status>(value));
}
template <>
inline const std::string& PrepareTransactionResponse_Status_Name(PrepareTransactionResponse_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PrepareTransactionResponse_Status_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PrepareTransactionResponse_Status_Parse(absl::string_view name, PrepareTransactionResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrepareTransactionResponse_Status>(
      PrepareTransactionResponse_Status_descriptor(), name, value);
}
enum BalanceDetail_Kind : int {
  BalanceDetail_Kind_KIND_AVAILABLE = 0,
  BalanceDetail_Kind_KIND_RESERVED = 1,
  BalanceDetail_Kind_BalanceDetail_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BalanceDetail_Kind_BalanceDetail_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BalanceDetail_Kind_IsValid(int value);
extern const uint32_t BalanceDetail_Kind_internal_data_[];
constexpr BalanceDetail_Kind BalanceDetail_Kind_Kind_MIN = static_cast<BalanceDetail_Kind>(0);
constexpr BalanceDetail_Kind BalanceDetail_Kind_Kind_MAX = static_cast<BalanceDetail_Kind>(1);
constexpr int BalanceDetail_Kind_Kind_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BalanceDetail_Kind_descriptor();
template <typename T>
const std::string& BalanceDetail_Kind_Name(T value) {
  static_assert(std::is_same<T, BalanceDetail_Kind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Kind_Name().");
  return BalanceDetail_Kind_Name(static_cast<BalanceDetail_Kind>(value));
}
template <>
inline const std::string& BalanceDetail_Kind_Name(BalanceDetail_Kind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BalanceDetail_Kind_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BalanceDetail_Kind_Parse(absl::string_view name, BalanceDetail_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BalanceDetail_Kind>(
      BalanceDetail_Kind_descriptor(), name, value);
}
enum PrepareAtomicAssetSwapResponse_Status : int {
  PrepareAtomicAssetSwapResponse_Status_UNSPECIFIED = 0,
  PrepareAtomicAssetSwapResponse_Status_SUCCESS = 1,
  PrepareAtomicAssetSwapResponse_Status_FAILURE = 2,
  PrepareAtomicAssetSwapResponse_Status_PrepareAtomicAssetSwapResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PrepareAtomicAssetSwapResponse_Status_PrepareAtomicAssetSwapResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PrepareAtomicAssetSwapResponse_Status_IsValid(int value);
extern const uint32_t PrepareAtomicAssetSwapResponse_Status_internal_data_[];
constexpr PrepareAtomicAssetSwapResponse_Status PrepareAtomicAssetSwapResponse_Status_Status_MIN = static_cast<PrepareAtomicAssetSwapResponse_Status>(0);
constexpr PrepareAtomicAssetSwapResponse_Status PrepareAtomicAssetSwapResponse_Status_Status_MAX = static_cast<PrepareAtomicAssetSwapResponse_Status>(2);
constexpr int PrepareAtomicAssetSwapResponse_Status_Status_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PrepareAtomicAssetSwapResponse_Status_descriptor();
template <typename T>
const std::string& PrepareAtomicAssetSwapResponse_Status_Name(T value) {
  static_assert(std::is_same<T, PrepareAtomicAssetSwapResponse_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return PrepareAtomicAssetSwapResponse_Status_Name(static_cast<PrepareAtomicAssetSwapResponse_Status>(value));
}
template <>
inline const std::string& PrepareAtomicAssetSwapResponse_Status_Name(PrepareAtomicAssetSwapResponse_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PrepareAtomicAssetSwapResponse_Status_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PrepareAtomicAssetSwapResponse_Status_Parse(absl::string_view name, PrepareAtomicAssetSwapResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrepareAtomicAssetSwapResponse_Status>(
      PrepareAtomicAssetSwapResponse_Status_descriptor(), name, value);
}
enum PrepareCrossBorderPaymentResponse_Status : int {
  PrepareCrossBorderPaymentResponse_Status_UNSPECIFIED = 0,
  PrepareCrossBorderPaymentResponse_Status_SUCCESS = 1,
  PrepareCrossBorderPaymentResponse_Status_FAILURE = 2,
  PrepareCrossBorderPaymentResponse_Status_PrepareCrossBorderPaymentResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PrepareCrossBorderPaymentResponse_Status_PrepareCrossBorderPaymentResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PrepareCrossBorderPaymentResponse_Status_IsValid(int value);
extern const uint32_t PrepareCrossBorderPaymentResponse_Status_internal_data_[];
constexpr PrepareCrossBorderPaymentResponse_Status PrepareCrossBorderPaymentResponse_Status_Status_MIN = static_cast<PrepareCrossBorderPaymentResponse_Status>(0);
constexpr PrepareCrossBorderPaymentResponse_Status PrepareCrossBorderPaymentResponse_Status_Status_MAX = static_cast<PrepareCrossBorderPaymentResponse_Status>(2);
constexpr int PrepareCrossBorderPaymentResponse_Status_Status_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PrepareCrossBorderPaymentResponse_Status_descriptor();
template <typename T>
const std::string& PrepareCrossBorderPaymentResponse_Status_Name(T value) {
  static_assert(std::is_same<T, PrepareCrossBorderPaymentResponse_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return PrepareCrossBorderPaymentResponse_Status_Name(static_cast<PrepareCrossBorderPaymentResponse_Status>(value));
}
template <>
inline const std::string& PrepareCrossBorderPaymentResponse_Status_Name(PrepareCrossBorderPaymentResponse_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PrepareCrossBorderPaymentResponse_Status_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PrepareCrossBorderPaymentResponse_Status_Parse(absl::string_view name, PrepareCrossBorderPaymentResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrepareCrossBorderPaymentResponse_Status>(
      PrepareCrossBorderPaymentResponse_Status_descriptor(), name, value);
}
enum PreparePaymentWithImplicitFundsChangeResponse_Status : int {
  PreparePaymentWithImplicitFundsChangeResponse_Status_UNSPECIFIED = 0,
  PreparePaymentWithImplicitFundsChangeResponse_Status_SUCCESS = 1,
  PreparePaymentWithImplicitFundsChangeResponse_Status_FAILURE = 2,
  PreparePaymentWithImplicitFundsChangeResponse_Status_INSUFFICIENT_FUNDS = 3,
  PreparePaymentWithImplicitFundsChangeResponse_Status_PreparePaymentWithImplicitFundsChangeResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PreparePaymentWithImplicitFundsChangeResponse_Status_PreparePaymentWithImplicitFundsChangeResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PreparePaymentWithImplicitFundsChangeResponse_Status_IsValid(int value);
extern const uint32_t PreparePaymentWithImplicitFundsChangeResponse_Status_internal_data_[];
constexpr PreparePaymentWithImplicitFundsChangeResponse_Status PreparePaymentWithImplicitFundsChangeResponse_Status_Status_MIN = static_cast<PreparePaymentWithImplicitFundsChangeResponse_Status>(0);
constexpr PreparePaymentWithImplicitFundsChangeResponse_Status PreparePaymentWithImplicitFundsChangeResponse_Status_Status_MAX = static_cast<PreparePaymentWithImplicitFundsChangeResponse_Status>(3);
constexpr int PreparePaymentWithImplicitFundsChangeResponse_Status_Status_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PreparePaymentWithImplicitFundsChangeResponse_Status_descriptor();
template <typename T>
const std::string& PreparePaymentWithImplicitFundsChangeResponse_Status_Name(T value) {
  static_assert(std::is_same<T, PreparePaymentWithImplicitFundsChangeResponse_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return PreparePaymentWithImplicitFundsChangeResponse_Status_Name(static_cast<PreparePaymentWithImplicitFundsChangeResponse_Status>(value));
}
template <>
inline const std::string& PreparePaymentWithImplicitFundsChangeResponse_Status_Name(PreparePaymentWithImplicitFundsChangeResponse_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PreparePaymentWithImplicitFundsChangeResponse_Status_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PreparePaymentWithImplicitFundsChangeResponse_Status_Parse(absl::string_view name, PreparePaymentWithImplicitFundsChangeResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PreparePaymentWithImplicitFundsChangeResponse_Status>(
      PreparePaymentWithImplicitFundsChangeResponse_Status_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ResumePausedTransactionResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ResumePausedTransactionResponse) */ {
 public:
  inline ResumePausedTransactionResponse() : ResumePausedTransactionResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResumePausedTransactionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResumePausedTransactionResponse(const ResumePausedTransactionResponse& from) : ResumePausedTransactionResponse(nullptr, from) {}
  inline ResumePausedTransactionResponse(ResumePausedTransactionResponse&& from) noexcept
      : ResumePausedTransactionResponse(nullptr, std::move(from)) {}
  inline ResumePausedTransactionResponse& operator=(const ResumePausedTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResumePausedTransactionResponse& operator=(ResumePausedTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResumePausedTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResumePausedTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const ResumePausedTransactionResponse*>(
        &_ResumePausedTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(ResumePausedTransactionResponse& a, ResumePausedTransactionResponse& b) { a.Swap(&b); }
  inline void Swap(ResumePausedTransactionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResumePausedTransactionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResumePausedTransactionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ResumePausedTransactionResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResumePausedTransactionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResumePausedTransactionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ResumePausedTransactionResponse"; }

 protected:
  explicit ResumePausedTransactionResponse(::google::protobuf::Arena* arena);
  ResumePausedTransactionResponse(::google::protobuf::Arena* arena, const ResumePausedTransactionResponse& from);
  ResumePausedTransactionResponse(::google::protobuf::Arena* arena, ResumePausedTransactionResponse&& from) noexcept
      : ResumePausedTransactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ResumePausedTransactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResumePausedTransactionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResumePausedTransactionResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ResumePausedTransactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ResumePausedTransactionRequest) */ {
 public:
  inline ResumePausedTransactionRequest() : ResumePausedTransactionRequest(nullptr) {}
  ~ResumePausedTransactionRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResumePausedTransactionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResumePausedTransactionRequest(const ResumePausedTransactionRequest& from) : ResumePausedTransactionRequest(nullptr, from) {}
  inline ResumePausedTransactionRequest(ResumePausedTransactionRequest&& from) noexcept
      : ResumePausedTransactionRequest(nullptr, std::move(from)) {}
  inline ResumePausedTransactionRequest& operator=(const ResumePausedTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResumePausedTransactionRequest& operator=(ResumePausedTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResumePausedTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResumePausedTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ResumePausedTransactionRequest*>(
        &_ResumePausedTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(ResumePausedTransactionRequest& a, ResumePausedTransactionRequest& b) { a.Swap(&b); }
  inline void Swap(ResumePausedTransactionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResumePausedTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResumePausedTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResumePausedTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResumePausedTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResumePausedTransactionRequest& from) { ResumePausedTransactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResumePausedTransactionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ResumePausedTransactionRequest"; }

 protected:
  explicit ResumePausedTransactionRequest(::google::protobuf::Arena* arena);
  ResumePausedTransactionRequest(::google::protobuf::Arena* arena, const ResumePausedTransactionRequest& from);
  ResumePausedTransactionRequest(::google::protobuf::Arena* arena, ResumePausedTransactionRequest&& from) noexcept
      : ResumePausedTransactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
    kUetrFieldNumber = 3,
    kAcceptFieldNumber = 4,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string uetr = 3;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // bool accept = 4;
  void clear_accept() ;
  bool accept() const;
  void set_accept(bool value);

  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ResumePausedTransactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      73, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResumePausedTransactionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResumePausedTransactionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    bool accept_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class RequestPresentationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.RequestPresentationResponse) */ {
 public:
  inline RequestPresentationResponse() : RequestPresentationResponse(nullptr) {}
  ~RequestPresentationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestPresentationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestPresentationResponse(const RequestPresentationResponse& from) : RequestPresentationResponse(nullptr, from) {}
  inline RequestPresentationResponse(RequestPresentationResponse&& from) noexcept
      : RequestPresentationResponse(nullptr, std::move(from)) {}
  inline RequestPresentationResponse& operator=(const RequestPresentationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestPresentationResponse& operator=(RequestPresentationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestPresentationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestPresentationResponse* internal_default_instance() {
    return reinterpret_cast<const RequestPresentationResponse*>(
        &_RequestPresentationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(RequestPresentationResponse& a, RequestPresentationResponse& b) { a.Swap(&b); }
  inline void Swap(RequestPresentationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestPresentationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestPresentationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestPresentationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestPresentationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestPresentationResponse& from) { RequestPresentationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestPresentationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.RequestPresentationResponse"; }

 protected:
  explicit RequestPresentationResponse(::google::protobuf::Arena* arena);
  RequestPresentationResponse(::google::protobuf::Arena* arena, const RequestPresentationResponse& from);
  RequestPresentationResponse(::google::protobuf::Arena* arena, RequestPresentationResponse&& from) noexcept
      : RequestPresentationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPresentationFieldNumber = 1,
  };
  // string presentation = 1;
  void clear_presentation() ;
  const std::string& presentation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_presentation(Arg_&& arg, Args_... args);
  std::string* mutable_presentation();
  PROTOBUF_NODISCARD std::string* release_presentation();
  void set_allocated_presentation(std::string* value);

  private:
  const std::string& _internal_presentation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_presentation(
      const std::string& value);
  std::string* _internal_mutable_presentation();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.RequestPresentationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequestPresentationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestPresentationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr presentation_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class RequestPresentationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.RequestPresentationRequest) */ {
 public:
  inline RequestPresentationRequest() : RequestPresentationRequest(nullptr) {}
  ~RequestPresentationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestPresentationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestPresentationRequest(const RequestPresentationRequest& from) : RequestPresentationRequest(nullptr, from) {}
  inline RequestPresentationRequest(RequestPresentationRequest&& from) noexcept
      : RequestPresentationRequest(nullptr, std::move(from)) {}
  inline RequestPresentationRequest& operator=(const RequestPresentationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestPresentationRequest& operator=(RequestPresentationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestPresentationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestPresentationRequest* internal_default_instance() {
    return reinterpret_cast<const RequestPresentationRequest*>(
        &_RequestPresentationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(RequestPresentationRequest& a, RequestPresentationRequest& b) { a.Swap(&b); }
  inline void Swap(RequestPresentationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestPresentationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestPresentationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestPresentationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestPresentationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestPresentationRequest& from) { RequestPresentationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestPresentationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.RequestPresentationRequest"; }

 protected:
  explicit RequestPresentationRequest(::google::protobuf::Arena* arena);
  RequestPresentationRequest(::google::protobuf::Arena* arena, const RequestPresentationRequest& from);
  RequestPresentationRequest(::google::protobuf::Arena* arena, RequestPresentationRequest&& from) noexcept
      : RequestPresentationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kCredentialTypeFieldNumber = 2,
    kApiKeyFieldNumber = 3,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // string credential_type = 2;
  void clear_credential_type() ;
  const std::string& credential_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_type(Arg_&& arg, Args_... args);
  std::string* mutable_credential_type();
  PROTOBUF_NODISCARD std::string* release_credential_type();
  void set_allocated_credential_type(std::string* value);

  private:
  const std::string& _internal_credential_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_type(
      const std::string& value);
  std::string* _internal_mutable_credential_type();

  public:
  // string api_key = 3;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.RequestPresentationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequestPresentationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestPresentationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr credential_type_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareTransactionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareTransactionResponse) */ {
 public:
  inline PrepareTransactionResponse() : PrepareTransactionResponse(nullptr) {}
  ~PrepareTransactionResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareTransactionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareTransactionResponse(const PrepareTransactionResponse& from) : PrepareTransactionResponse(nullptr, from) {}
  inline PrepareTransactionResponse(PrepareTransactionResponse&& from) noexcept
      : PrepareTransactionResponse(nullptr, std::move(from)) {}
  inline PrepareTransactionResponse& operator=(const PrepareTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareTransactionResponse& operator=(PrepareTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const PrepareTransactionResponse*>(
        &_PrepareTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(PrepareTransactionResponse& a, PrepareTransactionResponse& b) { a.Swap(&b); }
  inline void Swap(PrepareTransactionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareTransactionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareTransactionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareTransactionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareTransactionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareTransactionResponse& from) { PrepareTransactionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareTransactionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareTransactionResponse"; }

 protected:
  explicit PrepareTransactionResponse(::google::protobuf::Arena* arena);
  PrepareTransactionResponse(::google::protobuf::Arena* arena, const PrepareTransactionResponse& from);
  PrepareTransactionResponse(::google::protobuf::Arena* arena, PrepareTransactionResponse&& from) noexcept
      : PrepareTransactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Status = PrepareTransactionResponse_Status;
  static constexpr Status UNSPECIFIED = PrepareTransactionResponse_Status_UNSPECIFIED;
  static constexpr Status SUCCESS = PrepareTransactionResponse_Status_SUCCESS;
  static constexpr Status FAILURE = PrepareTransactionResponse_Status_FAILURE;
  static inline bool Status_IsValid(int value) {
    return PrepareTransactionResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = PrepareTransactionResponse_Status_Status_MIN;
  static constexpr Status Status_MAX = PrepareTransactionResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = PrepareTransactionResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return PrepareTransactionResponse_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return PrepareTransactionResponse_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return PrepareTransactionResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUetrFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string uetr = 2;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // .wallet_api.v1.PrepareTransactionResponse.Status status = 1;
  void clear_status() ;
  ::wallet_api::v1::PrepareTransactionResponse_Status status() const;
  void set_status(::wallet_api::v1::PrepareTransactionResponse_Status value);

  private:
  ::wallet_api::v1::PrepareTransactionResponse_Status _internal_status() const;
  void _internal_set_status(::wallet_api::v1::PrepareTransactionResponse_Status value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareTransactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareTransactionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareTransactionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PreparePaymentWithImplicitFundsChangeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse) */ {
 public:
  inline PreparePaymentWithImplicitFundsChangeResponse() : PreparePaymentWithImplicitFundsChangeResponse(nullptr) {}
  ~PreparePaymentWithImplicitFundsChangeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PreparePaymentWithImplicitFundsChangeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PreparePaymentWithImplicitFundsChangeResponse(const PreparePaymentWithImplicitFundsChangeResponse& from) : PreparePaymentWithImplicitFundsChangeResponse(nullptr, from) {}
  inline PreparePaymentWithImplicitFundsChangeResponse(PreparePaymentWithImplicitFundsChangeResponse&& from) noexcept
      : PreparePaymentWithImplicitFundsChangeResponse(nullptr, std::move(from)) {}
  inline PreparePaymentWithImplicitFundsChangeResponse& operator=(const PreparePaymentWithImplicitFundsChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreparePaymentWithImplicitFundsChangeResponse& operator=(PreparePaymentWithImplicitFundsChangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreparePaymentWithImplicitFundsChangeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PreparePaymentWithImplicitFundsChangeResponse* internal_default_instance() {
    return reinterpret_cast<const PreparePaymentWithImplicitFundsChangeResponse*>(
        &_PreparePaymentWithImplicitFundsChangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(PreparePaymentWithImplicitFundsChangeResponse& a, PreparePaymentWithImplicitFundsChangeResponse& b) { a.Swap(&b); }
  inline void Swap(PreparePaymentWithImplicitFundsChangeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreparePaymentWithImplicitFundsChangeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreparePaymentWithImplicitFundsChangeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PreparePaymentWithImplicitFundsChangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreparePaymentWithImplicitFundsChangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PreparePaymentWithImplicitFundsChangeResponse& from) { PreparePaymentWithImplicitFundsChangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PreparePaymentWithImplicitFundsChangeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse"; }

 protected:
  explicit PreparePaymentWithImplicitFundsChangeResponse(::google::protobuf::Arena* arena);
  PreparePaymentWithImplicitFundsChangeResponse(::google::protobuf::Arena* arena, const PreparePaymentWithImplicitFundsChangeResponse& from);
  PreparePaymentWithImplicitFundsChangeResponse(::google::protobuf::Arena* arena, PreparePaymentWithImplicitFundsChangeResponse&& from) noexcept
      : PreparePaymentWithImplicitFundsChangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Status = PreparePaymentWithImplicitFundsChangeResponse_Status;
  static constexpr Status UNSPECIFIED = PreparePaymentWithImplicitFundsChangeResponse_Status_UNSPECIFIED;
  static constexpr Status SUCCESS = PreparePaymentWithImplicitFundsChangeResponse_Status_SUCCESS;
  static constexpr Status FAILURE = PreparePaymentWithImplicitFundsChangeResponse_Status_FAILURE;
  static constexpr Status INSUFFICIENT_FUNDS = PreparePaymentWithImplicitFundsChangeResponse_Status_INSUFFICIENT_FUNDS;
  static inline bool Status_IsValid(int value) {
    return PreparePaymentWithImplicitFundsChangeResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = PreparePaymentWithImplicitFundsChangeResponse_Status_Status_MIN;
  static constexpr Status Status_MAX = PreparePaymentWithImplicitFundsChangeResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = PreparePaymentWithImplicitFundsChangeResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return PreparePaymentWithImplicitFundsChangeResponse_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return PreparePaymentWithImplicitFundsChangeResponse_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return PreparePaymentWithImplicitFundsChangeResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUetrFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string uetr = 2;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // .wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.Status status = 1;
  void clear_status() ;
  ::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status status() const;
  void set_status(::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status value);

  private:
  ::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status _internal_status() const;
  void _internal_set_status(::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PreparePaymentWithImplicitFundsChangeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PreparePaymentWithImplicitFundsChangeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareFundsChangeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareFundsChangeResponse) */ {
 public:
  inline PrepareFundsChangeResponse() : PrepareFundsChangeResponse(nullptr) {}
  ~PrepareFundsChangeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareFundsChangeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareFundsChangeResponse(const PrepareFundsChangeResponse& from) : PrepareFundsChangeResponse(nullptr, from) {}
  inline PrepareFundsChangeResponse(PrepareFundsChangeResponse&& from) noexcept
      : PrepareFundsChangeResponse(nullptr, std::move(from)) {}
  inline PrepareFundsChangeResponse& operator=(const PrepareFundsChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareFundsChangeResponse& operator=(PrepareFundsChangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareFundsChangeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareFundsChangeResponse* internal_default_instance() {
    return reinterpret_cast<const PrepareFundsChangeResponse*>(
        &_PrepareFundsChangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(PrepareFundsChangeResponse& a, PrepareFundsChangeResponse& b) { a.Swap(&b); }
  inline void Swap(PrepareFundsChangeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareFundsChangeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareFundsChangeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareFundsChangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareFundsChangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareFundsChangeResponse& from) { PrepareFundsChangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareFundsChangeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareFundsChangeResponse"; }

 protected:
  explicit PrepareFundsChangeResponse(::google::protobuf::Arena* arena);
  PrepareFundsChangeResponse(::google::protobuf::Arena* arena, const PrepareFundsChangeResponse& from);
  PrepareFundsChangeResponse(::google::protobuf::Arena* arena, PrepareFundsChangeResponse&& from) noexcept
      : PrepareFundsChangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Status = PrepareFundsChangeResponse_Status;
  static constexpr Status STATUS_UNSPECIFIED = PrepareFundsChangeResponse_Status_STATUS_UNSPECIFIED;
  static constexpr Status STATUS_SUCCESS = PrepareFundsChangeResponse_Status_STATUS_SUCCESS;
  static constexpr Status STATUS_INSUFFICIENT_FUNDS = PrepareFundsChangeResponse_Status_STATUS_INSUFFICIENT_FUNDS;
  static constexpr Status STATUS_FUNDS_PRESENT_NOOP = PrepareFundsChangeResponse_Status_STATUS_FUNDS_PRESENT_NOOP;
  static inline bool Status_IsValid(int value) {
    return PrepareFundsChangeResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = PrepareFundsChangeResponse_Status_Status_MIN;
  static constexpr Status Status_MAX = PrepareFundsChangeResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = PrepareFundsChangeResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return PrepareFundsChangeResponse_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return PrepareFundsChangeResponse_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return PrepareFundsChangeResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUetrFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string uetr = 2;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // .wallet_api.v1.PrepareFundsChangeResponse.Status status = 1;
  void clear_status() ;
  ::wallet_api::v1::PrepareFundsChangeResponse_Status status() const;
  void set_status(::wallet_api::v1::PrepareFundsChangeResponse_Status value);

  private:
  ::wallet_api::v1::PrepareFundsChangeResponse_Status _internal_status() const;
  void _internal_set_status(::wallet_api::v1::PrepareFundsChangeResponse_Status value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareFundsChangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareFundsChangeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareFundsChangeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareCrossBorderPaymentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareCrossBorderPaymentResponse) */ {
 public:
  inline PrepareCrossBorderPaymentResponse() : PrepareCrossBorderPaymentResponse(nullptr) {}
  ~PrepareCrossBorderPaymentResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareCrossBorderPaymentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareCrossBorderPaymentResponse(const PrepareCrossBorderPaymentResponse& from) : PrepareCrossBorderPaymentResponse(nullptr, from) {}
  inline PrepareCrossBorderPaymentResponse(PrepareCrossBorderPaymentResponse&& from) noexcept
      : PrepareCrossBorderPaymentResponse(nullptr, std::move(from)) {}
  inline PrepareCrossBorderPaymentResponse& operator=(const PrepareCrossBorderPaymentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareCrossBorderPaymentResponse& operator=(PrepareCrossBorderPaymentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareCrossBorderPaymentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareCrossBorderPaymentResponse* internal_default_instance() {
    return reinterpret_cast<const PrepareCrossBorderPaymentResponse*>(
        &_PrepareCrossBorderPaymentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(PrepareCrossBorderPaymentResponse& a, PrepareCrossBorderPaymentResponse& b) { a.Swap(&b); }
  inline void Swap(PrepareCrossBorderPaymentResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareCrossBorderPaymentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareCrossBorderPaymentResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareCrossBorderPaymentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareCrossBorderPaymentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareCrossBorderPaymentResponse& from) { PrepareCrossBorderPaymentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareCrossBorderPaymentResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareCrossBorderPaymentResponse"; }

 protected:
  explicit PrepareCrossBorderPaymentResponse(::google::protobuf::Arena* arena);
  PrepareCrossBorderPaymentResponse(::google::protobuf::Arena* arena, const PrepareCrossBorderPaymentResponse& from);
  PrepareCrossBorderPaymentResponse(::google::protobuf::Arena* arena, PrepareCrossBorderPaymentResponse&& from) noexcept
      : PrepareCrossBorderPaymentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Status = PrepareCrossBorderPaymentResponse_Status;
  static constexpr Status UNSPECIFIED = PrepareCrossBorderPaymentResponse_Status_UNSPECIFIED;
  static constexpr Status SUCCESS = PrepareCrossBorderPaymentResponse_Status_SUCCESS;
  static constexpr Status FAILURE = PrepareCrossBorderPaymentResponse_Status_FAILURE;
  static inline bool Status_IsValid(int value) {
    return PrepareCrossBorderPaymentResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = PrepareCrossBorderPaymentResponse_Status_Status_MIN;
  static constexpr Status Status_MAX = PrepareCrossBorderPaymentResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = PrepareCrossBorderPaymentResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return PrepareCrossBorderPaymentResponse_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return PrepareCrossBorderPaymentResponse_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return PrepareCrossBorderPaymentResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUetrFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string uetr = 2;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // .wallet_api.v1.PrepareCrossBorderPaymentResponse.Status status = 1;
  void clear_status() ;
  ::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status status() const;
  void set_status(::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status value);

  private:
  ::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status _internal_status() const;
  void _internal_set_status(::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareCrossBorderPaymentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareCrossBorderPaymentResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareCrossBorderPaymentResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareAtomicAssetSwapResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareAtomicAssetSwapResponse) */ {
 public:
  inline PrepareAtomicAssetSwapResponse() : PrepareAtomicAssetSwapResponse(nullptr) {}
  ~PrepareAtomicAssetSwapResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareAtomicAssetSwapResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareAtomicAssetSwapResponse(const PrepareAtomicAssetSwapResponse& from) : PrepareAtomicAssetSwapResponse(nullptr, from) {}
  inline PrepareAtomicAssetSwapResponse(PrepareAtomicAssetSwapResponse&& from) noexcept
      : PrepareAtomicAssetSwapResponse(nullptr, std::move(from)) {}
  inline PrepareAtomicAssetSwapResponse& operator=(const PrepareAtomicAssetSwapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareAtomicAssetSwapResponse& operator=(PrepareAtomicAssetSwapResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareAtomicAssetSwapResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareAtomicAssetSwapResponse* internal_default_instance() {
    return reinterpret_cast<const PrepareAtomicAssetSwapResponse*>(
        &_PrepareAtomicAssetSwapResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(PrepareAtomicAssetSwapResponse& a, PrepareAtomicAssetSwapResponse& b) { a.Swap(&b); }
  inline void Swap(PrepareAtomicAssetSwapResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareAtomicAssetSwapResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareAtomicAssetSwapResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareAtomicAssetSwapResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareAtomicAssetSwapResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareAtomicAssetSwapResponse& from) { PrepareAtomicAssetSwapResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareAtomicAssetSwapResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareAtomicAssetSwapResponse"; }

 protected:
  explicit PrepareAtomicAssetSwapResponse(::google::protobuf::Arena* arena);
  PrepareAtomicAssetSwapResponse(::google::protobuf::Arena* arena, const PrepareAtomicAssetSwapResponse& from);
  PrepareAtomicAssetSwapResponse(::google::protobuf::Arena* arena, PrepareAtomicAssetSwapResponse&& from) noexcept
      : PrepareAtomicAssetSwapResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Status = PrepareAtomicAssetSwapResponse_Status;
  static constexpr Status UNSPECIFIED = PrepareAtomicAssetSwapResponse_Status_UNSPECIFIED;
  static constexpr Status SUCCESS = PrepareAtomicAssetSwapResponse_Status_SUCCESS;
  static constexpr Status FAILURE = PrepareAtomicAssetSwapResponse_Status_FAILURE;
  static inline bool Status_IsValid(int value) {
    return PrepareAtomicAssetSwapResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = PrepareAtomicAssetSwapResponse_Status_Status_MIN;
  static constexpr Status Status_MAX = PrepareAtomicAssetSwapResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = PrepareAtomicAssetSwapResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return PrepareAtomicAssetSwapResponse_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return PrepareAtomicAssetSwapResponse_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return PrepareAtomicAssetSwapResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUetrFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string uetr = 2;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // .wallet_api.v1.PrepareAtomicAssetSwapResponse.Status status = 1;
  void clear_status() ;
  ::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status status() const;
  void set_status(::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status value);

  private:
  ::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status _internal_status() const;
  void _internal_set_status(::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareAtomicAssetSwapResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareAtomicAssetSwapResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareAtomicAssetSwapResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletsResponse_Wallet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletsResponse.Wallet) */ {
 public:
  inline ListWalletsResponse_Wallet() : ListWalletsResponse_Wallet(nullptr) {}
  ~ListWalletsResponse_Wallet() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletsResponse_Wallet(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletsResponse_Wallet(const ListWalletsResponse_Wallet& from) : ListWalletsResponse_Wallet(nullptr, from) {}
  inline ListWalletsResponse_Wallet(ListWalletsResponse_Wallet&& from) noexcept
      : ListWalletsResponse_Wallet(nullptr, std::move(from)) {}
  inline ListWalletsResponse_Wallet& operator=(const ListWalletsResponse_Wallet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletsResponse_Wallet& operator=(ListWalletsResponse_Wallet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletsResponse_Wallet& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletsResponse_Wallet* internal_default_instance() {
    return reinterpret_cast<const ListWalletsResponse_Wallet*>(
        &_ListWalletsResponse_Wallet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ListWalletsResponse_Wallet& a, ListWalletsResponse_Wallet& b) { a.Swap(&b); }
  inline void Swap(ListWalletsResponse_Wallet* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletsResponse_Wallet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletsResponse_Wallet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletsResponse_Wallet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletsResponse_Wallet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletsResponse_Wallet& from) { ListWalletsResponse_Wallet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletsResponse_Wallet* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletsResponse.Wallet"; }

 protected:
  explicit ListWalletsResponse_Wallet(::google::protobuf::Arena* arena);
  ListWalletsResponse_Wallet(::google::protobuf::Arena* arena, const ListWalletsResponse_Wallet& from);
  ListWalletsResponse_Wallet(::google::protobuf::Arena* arena, ListWalletsResponse_Wallet&& from) noexcept
      : ListWalletsResponse_Wallet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletNameFieldNumber = 1,
    kWalletIdFieldNumber = 2,
    kPublicKeyFieldNumber = 3,
    kDidFieldNumber = 4,
  };
  // string wallet_name = 1;
  void clear_wallet_name() ;
  const std::string& wallet_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_name(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_name();
  PROTOBUF_NODISCARD std::string* release_wallet_name();
  void set_allocated_wallet_name(std::string* value);

  private:
  const std::string& _internal_wallet_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_name(
      const std::string& value);
  std::string* _internal_mutable_wallet_name();

  public:
  // string wallet_id = 2;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string public_key = 3;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // string did = 4;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletsResponse.Wallet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletsResponse_Wallet_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletsResponse_Wallet& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_name_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    ::google::protobuf::internal::ArenaStringPtr did_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletBalanceDetailsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletBalanceDetailsRequest) */ {
 public:
  inline ListWalletBalanceDetailsRequest() : ListWalletBalanceDetailsRequest(nullptr) {}
  ~ListWalletBalanceDetailsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletBalanceDetailsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletBalanceDetailsRequest(const ListWalletBalanceDetailsRequest& from) : ListWalletBalanceDetailsRequest(nullptr, from) {}
  inline ListWalletBalanceDetailsRequest(ListWalletBalanceDetailsRequest&& from) noexcept
      : ListWalletBalanceDetailsRequest(nullptr, std::move(from)) {}
  inline ListWalletBalanceDetailsRequest& operator=(const ListWalletBalanceDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletBalanceDetailsRequest& operator=(ListWalletBalanceDetailsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletBalanceDetailsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletBalanceDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const ListWalletBalanceDetailsRequest*>(
        &_ListWalletBalanceDetailsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(ListWalletBalanceDetailsRequest& a, ListWalletBalanceDetailsRequest& b) { a.Swap(&b); }
  inline void Swap(ListWalletBalanceDetailsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletBalanceDetailsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletBalanceDetailsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletBalanceDetailsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletBalanceDetailsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletBalanceDetailsRequest& from) { ListWalletBalanceDetailsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletBalanceDetailsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletBalanceDetailsRequest"; }

 protected:
  explicit ListWalletBalanceDetailsRequest(::google::protobuf::Arena* arena);
  ListWalletBalanceDetailsRequest(::google::protobuf::Arena* arena, const ListWalletBalanceDetailsRequest& from);
  ListWalletBalanceDetailsRequest(::google::protobuf::Arena* arena, ListWalletBalanceDetailsRequest&& from) noexcept
      : ListWalletBalanceDetailsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletBalanceDetailsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletBalanceDetailsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletBalanceDetailsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListCredentialsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListCredentialsResponse) */ {
 public:
  inline ListCredentialsResponse() : ListCredentialsResponse(nullptr) {}
  ~ListCredentialsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCredentialsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCredentialsResponse(const ListCredentialsResponse& from) : ListCredentialsResponse(nullptr, from) {}
  inline ListCredentialsResponse(ListCredentialsResponse&& from) noexcept
      : ListCredentialsResponse(nullptr, std::move(from)) {}
  inline ListCredentialsResponse& operator=(const ListCredentialsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCredentialsResponse& operator=(ListCredentialsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCredentialsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCredentialsResponse* internal_default_instance() {
    return reinterpret_cast<const ListCredentialsResponse*>(
        &_ListCredentialsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(ListCredentialsResponse& a, ListCredentialsResponse& b) { a.Swap(&b); }
  inline void Swap(ListCredentialsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCredentialsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCredentialsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListCredentialsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCredentialsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCredentialsResponse& from) { ListCredentialsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListCredentialsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListCredentialsResponse"; }

 protected:
  explicit ListCredentialsResponse(::google::protobuf::Arena* arena);
  ListCredentialsResponse(::google::protobuf::Arena* arena, const ListCredentialsResponse& from);
  ListCredentialsResponse(::google::protobuf::Arena* arena, ListCredentialsResponse&& from) noexcept
      : ListCredentialsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialsFieldNumber = 1,
    kTotalOwnedCredentialsFieldNumber = 2,
  };
  // repeated string credentials = 1;
  int credentials_size() const;
  private:
  int _internal_credentials_size() const;

  public:
  void clear_credentials() ;
  const std::string& credentials(int index) const;
  std::string* mutable_credentials(int index);
  void set_credentials(int index, const std::string& value);
  void set_credentials(int index, std::string&& value);
  void set_credentials(int index, const char* value);
  void set_credentials(int index, const char* value, std::size_t size);
  void set_credentials(int index, absl::string_view value);
  std::string* add_credentials();
  void add_credentials(const std::string& value);
  void add_credentials(std::string&& value);
  void add_credentials(const char* value);
  void add_credentials(const char* value, std::size_t size);
  void add_credentials(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& credentials() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_credentials();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_credentials() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_credentials();

  public:
  // uint32 total_owned_credentials = 2;
  void clear_total_owned_credentials() ;
  ::uint32_t total_owned_credentials() const;
  void set_total_owned_credentials(::uint32_t value);

  private:
  ::uint32_t _internal_total_owned_credentials() const;
  void _internal_set_total_owned_credentials(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListCredentialsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListCredentialsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCredentialsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> credentials_;
    ::uint32_t total_owned_credentials_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListAssetFilesResponse_Notary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListAssetFilesResponse.Notary) */ {
 public:
  inline ListAssetFilesResponse_Notary() : ListAssetFilesResponse_Notary(nullptr) {}
  ~ListAssetFilesResponse_Notary() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAssetFilesResponse_Notary(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAssetFilesResponse_Notary(const ListAssetFilesResponse_Notary& from) : ListAssetFilesResponse_Notary(nullptr, from) {}
  inline ListAssetFilesResponse_Notary(ListAssetFilesResponse_Notary&& from) noexcept
      : ListAssetFilesResponse_Notary(nullptr, std::move(from)) {}
  inline ListAssetFilesResponse_Notary& operator=(const ListAssetFilesResponse_Notary& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAssetFilesResponse_Notary& operator=(ListAssetFilesResponse_Notary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAssetFilesResponse_Notary& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAssetFilesResponse_Notary* internal_default_instance() {
    return reinterpret_cast<const ListAssetFilesResponse_Notary*>(
        &_ListAssetFilesResponse_Notary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ListAssetFilesResponse_Notary& a, ListAssetFilesResponse_Notary& b) { a.Swap(&b); }
  inline void Swap(ListAssetFilesResponse_Notary* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAssetFilesResponse_Notary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAssetFilesResponse_Notary* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListAssetFilesResponse_Notary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAssetFilesResponse_Notary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAssetFilesResponse_Notary& from) { ListAssetFilesResponse_Notary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAssetFilesResponse_Notary* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListAssetFilesResponse.Notary"; }

 protected:
  explicit ListAssetFilesResponse_Notary(::google::protobuf::Arena* arena);
  ListAssetFilesResponse_Notary(::google::protobuf::Arena* arena, const ListAssetFilesResponse_Notary& from);
  ListAssetFilesResponse_Notary(::google::protobuf::Arena* arena, ListAssetFilesResponse_Notary&& from) noexcept
      : ListAssetFilesResponse_Notary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDidFieldNumber = 1,
    kSignatureFieldNumber = 2,
  };
  // string did = 1;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // bytes signature = 2;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListAssetFilesResponse.Notary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAssetFilesResponse_Notary_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAssetFilesResponse_Notary& from_msg);
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionDetailRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.GetTransactionDetailRequest) */ {
 public:
  inline GetTransactionDetailRequest() : GetTransactionDetailRequest(nullptr) {}
  ~GetTransactionDetailRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTransactionDetailRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTransactionDetailRequest(const GetTransactionDetailRequest& from) : GetTransactionDetailRequest(nullptr, from) {}
  inline GetTransactionDetailRequest(GetTransactionDetailRequest&& from) noexcept
      : GetTransactionDetailRequest(nullptr, std::move(from)) {}
  inline GetTransactionDetailRequest& operator=(const GetTransactionDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionDetailRequest& operator=(GetTransactionDetailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionDetailRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionDetailRequest* internal_default_instance() {
    return reinterpret_cast<const GetTransactionDetailRequest*>(
        &_GetTransactionDetailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(GetTransactionDetailRequest& a, GetTransactionDetailRequest& b) { a.Swap(&b); }
  inline void Swap(GetTransactionDetailRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionDetailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTransactionDetailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetTransactionDetailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTransactionDetailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTransactionDetailRequest& from) { GetTransactionDetailRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetTransactionDetailRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.GetTransactionDetailRequest"; }

 protected:
  explicit GetTransactionDetailRequest(::google::protobuf::Arena* arena);
  GetTransactionDetailRequest(::google::protobuf::Arena* arena, const GetTransactionDetailRequest& from);
  GetTransactionDetailRequest(::google::protobuf::Arena* arena, GetTransactionDetailRequest&& from) noexcept
      : GetTransactionDetailRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
    kUetrFieldNumber = 3,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string uetr = 3;
  void clear_uetr() ;
  const std::string& uetr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uetr(Arg_&& arg, Args_... args);
  std::string* mutable_uetr();
  PROTOBUF_NODISCARD std::string* release_uetr();
  void set_allocated_uetr(std::string* value);

  private:
  const std::string& _internal_uetr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uetr(
      const std::string& value);
  std::string* _internal_mutable_uetr();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.GetTransactionDetailRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      70, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetTransactionDetailRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTransactionDetailRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr uetr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class CreateWalletResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.CreateWalletResponse) */ {
 public:
  inline CreateWalletResponse() : CreateWalletResponse(nullptr) {}
  ~CreateWalletResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWalletResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWalletResponse(const CreateWalletResponse& from) : CreateWalletResponse(nullptr, from) {}
  inline CreateWalletResponse(CreateWalletResponse&& from) noexcept
      : CreateWalletResponse(nullptr, std::move(from)) {}
  inline CreateWalletResponse& operator=(const CreateWalletResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWalletResponse& operator=(CreateWalletResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWalletResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWalletResponse* internal_default_instance() {
    return reinterpret_cast<const CreateWalletResponse*>(
        &_CreateWalletResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CreateWalletResponse& a, CreateWalletResponse& b) { a.Swap(&b); }
  inline void Swap(CreateWalletResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWalletResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWalletResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateWalletResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWalletResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWalletResponse& from) { CreateWalletResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateWalletResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.CreateWalletResponse"; }

 protected:
  explicit CreateWalletResponse(::google::protobuf::Arena* arena);
  CreateWalletResponse(::google::protobuf::Arena* arena, const CreateWalletResponse& from);
  CreateWalletResponse(::google::protobuf::Arena* arena, CreateWalletResponse&& from) noexcept
      : CreateWalletResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kWalletNameFieldNumber = 2,
    kPublicKeyFieldNumber = 3,
    kDidFieldNumber = 4,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string wallet_name = 2;
  void clear_wallet_name() ;
  const std::string& wallet_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_name(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_name();
  PROTOBUF_NODISCARD std::string* release_wallet_name();
  void set_allocated_wallet_name(std::string* value);

  private:
  const std::string& _internal_wallet_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_name(
      const std::string& value);
  std::string* _internal_mutable_wallet_name();

  public:
  // string public_key = 3;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // string did = 4;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.CreateWalletResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      76, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateWalletResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWalletResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr wallet_name_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    ::google::protobuf::internal::ArenaStringPtr did_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class CreateWalletRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.CreateWalletRequest) */ {
 public:
  inline CreateWalletRequest() : CreateWalletRequest(nullptr) {}
  ~CreateWalletRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWalletRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWalletRequest(const CreateWalletRequest& from) : CreateWalletRequest(nullptr, from) {}
  inline CreateWalletRequest(CreateWalletRequest&& from) noexcept
      : CreateWalletRequest(nullptr, std::move(from)) {}
  inline CreateWalletRequest& operator=(const CreateWalletRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWalletRequest& operator=(CreateWalletRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWalletRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWalletRequest* internal_default_instance() {
    return reinterpret_cast<const CreateWalletRequest*>(
        &_CreateWalletRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateWalletRequest& a, CreateWalletRequest& b) { a.Swap(&b); }
  inline void Swap(CreateWalletRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWalletRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWalletRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateWalletRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWalletRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWalletRequest& from) { CreateWalletRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateWalletRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.CreateWalletRequest"; }

 protected:
  explicit CreateWalletRequest(::google::protobuf::Arena* arena);
  CreateWalletRequest(::google::protobuf::Arena* arena, const CreateWalletRequest& from);
  CreateWalletRequest(::google::protobuf::Arena* arena, CreateWalletRequest&& from) noexcept
      : CreateWalletRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletNameFieldNumber = 1,
    kApiKeyFieldNumber = 2,
  };
  // string wallet_name = 1;
  void clear_wallet_name() ;
  const std::string& wallet_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_name(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_name();
  PROTOBUF_NODISCARD std::string* release_wallet_name();
  void set_allocated_wallet_name(std::string* value);

  private:
  const std::string& _internal_wallet_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_name(
      const std::string& value);
  std::string* _internal_mutable_wallet_name();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.CreateWalletRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateWalletRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWalletRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_name_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class CreateOwnerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.CreateOwnerResponse) */ {
 public:
  inline CreateOwnerResponse() : CreateOwnerResponse(nullptr) {}
  ~CreateOwnerResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOwnerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateOwnerResponse(const CreateOwnerResponse& from) : CreateOwnerResponse(nullptr, from) {}
  inline CreateOwnerResponse(CreateOwnerResponse&& from) noexcept
      : CreateOwnerResponse(nullptr, std::move(from)) {}
  inline CreateOwnerResponse& operator=(const CreateOwnerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOwnerResponse& operator=(CreateOwnerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOwnerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOwnerResponse* internal_default_instance() {
    return reinterpret_cast<const CreateOwnerResponse*>(
        &_CreateOwnerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateOwnerResponse& a, CreateOwnerResponse& b) { a.Swap(&b); }
  inline void Swap(CreateOwnerResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOwnerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOwnerResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateOwnerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOwnerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateOwnerResponse& from) { CreateOwnerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateOwnerResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.CreateOwnerResponse"; }

 protected:
  explicit CreateOwnerResponse(::google::protobuf::Arena* arena);
  CreateOwnerResponse(::google::protobuf::Arena* arena, const CreateOwnerResponse& from);
  CreateOwnerResponse(::google::protobuf::Arena* arena, CreateOwnerResponse&& from) noexcept
      : CreateOwnerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
    kOwnerNameFieldNumber = 3,
  };
  // string owner_id = 1;
  void clear_owner_id() ;
  const std::string& owner_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owner_id(Arg_&& arg, Args_... args);
  std::string* mutable_owner_id();
  PROTOBUF_NODISCARD std::string* release_owner_id();
  void set_allocated_owner_id(std::string* value);

  private:
  const std::string& _internal_owner_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_owner_id(
      const std::string& value);
  std::string* _internal_mutable_owner_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string owner_name = 3;
  void clear_owner_name() ;
  const std::string& owner_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owner_name(Arg_&& arg, Args_... args);
  std::string* mutable_owner_name();
  PROTOBUF_NODISCARD std::string* release_owner_name();
  void set_allocated_owner_name(std::string* value);

  private:
  const std::string& _internal_owner_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_owner_name(
      const std::string& value);
  std::string* _internal_mutable_owner_name();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.CreateOwnerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateOwnerResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateOwnerResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr owner_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr owner_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class CreateOwnerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.CreateOwnerRequest) */ {
 public:
  inline CreateOwnerRequest() : CreateOwnerRequest(nullptr) {}
  ~CreateOwnerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOwnerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateOwnerRequest(const CreateOwnerRequest& from) : CreateOwnerRequest(nullptr, from) {}
  inline CreateOwnerRequest(CreateOwnerRequest&& from) noexcept
      : CreateOwnerRequest(nullptr, std::move(from)) {}
  inline CreateOwnerRequest& operator=(const CreateOwnerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOwnerRequest& operator=(CreateOwnerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOwnerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOwnerRequest* internal_default_instance() {
    return reinterpret_cast<const CreateOwnerRequest*>(
        &_CreateOwnerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateOwnerRequest& a, CreateOwnerRequest& b) { a.Swap(&b); }
  inline void Swap(CreateOwnerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOwnerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOwnerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateOwnerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOwnerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateOwnerRequest& from) { CreateOwnerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateOwnerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.CreateOwnerRequest"; }

 protected:
  explicit CreateOwnerRequest(::google::protobuf::Arena* arena);
  CreateOwnerRequest(::google::protobuf::Arena* arena, const CreateOwnerRequest& from);
  CreateOwnerRequest(::google::protobuf::Arena* arena, CreateOwnerRequest&& from) noexcept
      : CreateOwnerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerNameFieldNumber = 1,
  };
  // string owner_name = 1;
  void clear_owner_name() ;
  const std::string& owner_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owner_name(Arg_&& arg, Args_... args);
  std::string* mutable_owner_name();
  PROTOBUF_NODISCARD std::string* release_owner_name();
  void set_allocated_owner_name(std::string* value);

  private:
  const std::string& _internal_owner_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_owner_name(
      const std::string& value);
  std::string* _internal_mutable_owner_name();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.CreateOwnerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateOwnerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateOwnerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr owner_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class CreateAndAssociateWalletResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.CreateAndAssociateWalletResponse) */ {
 public:
  inline CreateAndAssociateWalletResponse() : CreateAndAssociateWalletResponse(nullptr) {}
  ~CreateAndAssociateWalletResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAndAssociateWalletResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAndAssociateWalletResponse(const CreateAndAssociateWalletResponse& from) : CreateAndAssociateWalletResponse(nullptr, from) {}
  inline CreateAndAssociateWalletResponse(CreateAndAssociateWalletResponse&& from) noexcept
      : CreateAndAssociateWalletResponse(nullptr, std::move(from)) {}
  inline CreateAndAssociateWalletResponse& operator=(const CreateAndAssociateWalletResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAndAssociateWalletResponse& operator=(CreateAndAssociateWalletResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAndAssociateWalletResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAndAssociateWalletResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAndAssociateWalletResponse*>(
        &_CreateAndAssociateWalletResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CreateAndAssociateWalletResponse& a, CreateAndAssociateWalletResponse& b) { a.Swap(&b); }
  inline void Swap(CreateAndAssociateWalletResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAndAssociateWalletResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAndAssociateWalletResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateAndAssociateWalletResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAndAssociateWalletResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAndAssociateWalletResponse& from) { CreateAndAssociateWalletResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateAndAssociateWalletResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.CreateAndAssociateWalletResponse"; }

 protected:
  explicit CreateAndAssociateWalletResponse(::google::protobuf::Arena* arena);
  CreateAndAssociateWalletResponse(::google::protobuf::Arena* arena, const CreateAndAssociateWalletResponse& from);
  CreateAndAssociateWalletResponse(::google::protobuf::Arena* arena, CreateAndAssociateWalletResponse&& from) noexcept
      : CreateAndAssociateWalletResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kWalletNameFieldNumber = 2,
    kPublicKeyFieldNumber = 3,
    kDidFieldNumber = 4,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string wallet_name = 2;
  void clear_wallet_name() ;
  const std::string& wallet_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_name(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_name();
  PROTOBUF_NODISCARD std::string* release_wallet_name();
  void set_allocated_wallet_name(std::string* value);

  private:
  const std::string& _internal_wallet_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_name(
      const std::string& value);
  std::string* _internal_mutable_wallet_name();

  public:
  // string public_key = 3;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // string did = 4;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.CreateAndAssociateWalletResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      88, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateAndAssociateWalletResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAndAssociateWalletResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr wallet_name_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    ::google::protobuf::internal::ArenaStringPtr did_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class CreateAndAssociateWalletRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.CreateAndAssociateWalletRequest) */ {
 public:
  inline CreateAndAssociateWalletRequest() : CreateAndAssociateWalletRequest(nullptr) {}
  ~CreateAndAssociateWalletRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAndAssociateWalletRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAndAssociateWalletRequest(const CreateAndAssociateWalletRequest& from) : CreateAndAssociateWalletRequest(nullptr, from) {}
  inline CreateAndAssociateWalletRequest(CreateAndAssociateWalletRequest&& from) noexcept
      : CreateAndAssociateWalletRequest(nullptr, std::move(from)) {}
  inline CreateAndAssociateWalletRequest& operator=(const CreateAndAssociateWalletRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAndAssociateWalletRequest& operator=(CreateAndAssociateWalletRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAndAssociateWalletRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAndAssociateWalletRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAndAssociateWalletRequest*>(
        &_CreateAndAssociateWalletRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CreateAndAssociateWalletRequest& a, CreateAndAssociateWalletRequest& b) { a.Swap(&b); }
  inline void Swap(CreateAndAssociateWalletRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAndAssociateWalletRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAndAssociateWalletRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateAndAssociateWalletRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAndAssociateWalletRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAndAssociateWalletRequest& from) { CreateAndAssociateWalletRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateAndAssociateWalletRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.CreateAndAssociateWalletRequest"; }

 protected:
  explicit CreateAndAssociateWalletRequest(::google::protobuf::Arena* arena);
  CreateAndAssociateWalletRequest(::google::protobuf::Arena* arena, const CreateAndAssociateWalletRequest& from);
  CreateAndAssociateWalletRequest(::google::protobuf::Arena* arena, CreateAndAssociateWalletRequest&& from) noexcept
      : CreateAndAssociateWalletRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletNameFieldNumber = 1,
    kApiKeyFieldNumber = 2,
    kTokenFieldNumber = 3,
  };
  // string wallet_name = 1;
  void clear_wallet_name() ;
  const std::string& wallet_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_name(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_name();
  PROTOBUF_NODISCARD std::string* release_wallet_name();
  void set_allocated_wallet_name(std::string* value);

  private:
  const std::string& _internal_wallet_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_name(
      const std::string& value);
  std::string* _internal_mutable_wallet_name();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string token = 3;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.CreateAndAssociateWalletRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      77, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateAndAssociateWalletRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAndAssociateWalletRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_name_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ContractSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ContractSummary) */ {
 public:
  inline ContractSummary() : ContractSummary(nullptr) {}
  ~ContractSummary() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ContractSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline ContractSummary(const ContractSummary& from) : ContractSummary(nullptr, from) {}
  inline ContractSummary(ContractSummary&& from) noexcept
      : ContractSummary(nullptr, std::move(from)) {}
  inline ContractSummary& operator=(const ContractSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContractSummary& operator=(ContractSummary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContractSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContractSummary* internal_default_instance() {
    return reinterpret_cast<const ContractSummary*>(
        &_ContractSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(ContractSummary& a, ContractSummary& b) { a.Swap(&b); }
  inline void Swap(ContractSummary* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContractSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContractSummary* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ContractSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContractSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ContractSummary& from) { ContractSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ContractSummary* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ContractSummary"; }

 protected:
  explicit ContractSummary(::google::protobuf::Arena* arena);
  ContractSummary(::google::protobuf::Arena* arena, const ContractSummary& from);
  ContractSummary(::google::protobuf::Arena* arena, ContractSummary&& from) noexcept
      : ContractSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartiesFieldNumber = 4,
    kContractIdFieldNumber = 1,
    kContractTypeFieldNumber = 2,
    kCreatedFieldNumber = 3,
    kStatusFieldNumber = 5,
    kMemoFieldNumber = 6,
  };
  // repeated string counterparties = 4;
  int counterparties_size() const;
  private:
  int _internal_counterparties_size() const;

  public:
  void clear_counterparties() ;
  const std::string& counterparties(int index) const;
  std::string* mutable_counterparties(int index);
  void set_counterparties(int index, const std::string& value);
  void set_counterparties(int index, std::string&& value);
  void set_counterparties(int index, const char* value);
  void set_counterparties(int index, const char* value, std::size_t size);
  void set_counterparties(int index, absl::string_view value);
  std::string* add_counterparties();
  void add_counterparties(const std::string& value);
  void add_counterparties(std::string&& value);
  void add_counterparties(const char* value);
  void add_counterparties(const char* value, std::size_t size);
  void add_counterparties(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& counterparties() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_counterparties();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_counterparties() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_counterparties();

  public:
  // string contract_id = 1;
  void clear_contract_id() ;
  const std::string& contract_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  std::string* mutable_contract_id();
  PROTOBUF_NODISCARD std::string* release_contract_id();
  void set_allocated_contract_id(std::string* value);

  private:
  const std::string& _internal_contract_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(
      const std::string& value);
  std::string* _internal_mutable_contract_id();

  public:
  // string contract_type = 2;
  void clear_contract_type() ;
  const std::string& contract_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_type(Arg_&& arg, Args_... args);
  std::string* mutable_contract_type();
  PROTOBUF_NODISCARD std::string* release_contract_type();
  void set_allocated_contract_type(std::string* value);

  private:
  const std::string& _internal_contract_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_type(
      const std::string& value);
  std::string* _internal_mutable_contract_type();

  public:
  // string created = 3;
  void clear_created() ;
  const std::string& created() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created(Arg_&& arg, Args_... args);
  std::string* mutable_created();
  PROTOBUF_NODISCARD std::string* release_created();
  void set_allocated_created(std::string* value);

  private:
  const std::string& _internal_created() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created(
      const std::string& value);
  std::string* _internal_mutable_created();

  public:
  // string status = 5;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string memo = 6;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ContractSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      93, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ContractSummary_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ContractSummary& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> counterparties_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr contract_type_;
    ::google::protobuf::internal::ArenaStringPtr created_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class AssociateWalletResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.AssociateWalletResponse) */ {
 public:
  inline AssociateWalletResponse() : AssociateWalletResponse(nullptr) {}
  ~AssociateWalletResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssociateWalletResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AssociateWalletResponse(const AssociateWalletResponse& from) : AssociateWalletResponse(nullptr, from) {}
  inline AssociateWalletResponse(AssociateWalletResponse&& from) noexcept
      : AssociateWalletResponse(nullptr, std::move(from)) {}
  inline AssociateWalletResponse& operator=(const AssociateWalletResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssociateWalletResponse& operator=(AssociateWalletResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssociateWalletResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AssociateWalletResponse* internal_default_instance() {
    return reinterpret_cast<const AssociateWalletResponse*>(
        &_AssociateWalletResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(AssociateWalletResponse& a, AssociateWalletResponse& b) { a.Swap(&b); }
  inline void Swap(AssociateWalletResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssociateWalletResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssociateWalletResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AssociateWalletResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssociateWalletResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssociateWalletResponse& from) { AssociateWalletResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AssociateWalletResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.AssociateWalletResponse"; }

 protected:
  explicit AssociateWalletResponse(::google::protobuf::Arena* arena);
  AssociateWalletResponse(::google::protobuf::Arena* arena, const AssociateWalletResponse& from);
  AssociateWalletResponse(::google::protobuf::Arena* arena, AssociateWalletResponse&& from) noexcept
      : AssociateWalletResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kDidFieldNumber = 2,
    kPublicKeyFieldNumber = 3,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string did = 2;
  void clear_did() ;
  const std::string& did() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_did(Arg_&& arg, Args_... args);
  std::string* mutable_did();
  PROTOBUF_NODISCARD std::string* release_did();
  void set_allocated_did(std::string* value);

  private:
  const std::string& _internal_did() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_did(
      const std::string& value);
  std::string* _internal_mutable_did();

  public:
  // string public_key = 3;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.AssociateWalletResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      68, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AssociateWalletResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AssociateWalletResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr did_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class AssociateWalletRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.AssociateWalletRequest) */ {
 public:
  inline AssociateWalletRequest() : AssociateWalletRequest(nullptr) {}
  ~AssociateWalletRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssociateWalletRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AssociateWalletRequest(const AssociateWalletRequest& from) : AssociateWalletRequest(nullptr, from) {}
  inline AssociateWalletRequest(AssociateWalletRequest&& from) noexcept
      : AssociateWalletRequest(nullptr, std::move(from)) {}
  inline AssociateWalletRequest& operator=(const AssociateWalletRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssociateWalletRequest& operator=(AssociateWalletRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssociateWalletRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AssociateWalletRequest* internal_default_instance() {
    return reinterpret_cast<const AssociateWalletRequest*>(
        &_AssociateWalletRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(AssociateWalletRequest& a, AssociateWalletRequest& b) { a.Swap(&b); }
  inline void Swap(AssociateWalletRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssociateWalletRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssociateWalletRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AssociateWalletRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssociateWalletRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssociateWalletRequest& from) { AssociateWalletRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AssociateWalletRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.AssociateWalletRequest"; }

 protected:
  explicit AssociateWalletRequest(::google::protobuf::Arena* arena);
  AssociateWalletRequest(::google::protobuf::Arena* arena, const AssociateWalletRequest& from);
  AssociateWalletRequest(::google::protobuf::Arena* arena, AssociateWalletRequest&& from) noexcept
      : AssociateWalletRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.AssociateWalletRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AssociateWalletRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AssociateWalletRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class AddCredentialResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.AddCredentialResponse) */ {
 public:
  inline AddCredentialResponse() : AddCredentialResponse(nullptr) {}
  ~AddCredentialResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddCredentialResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddCredentialResponse(const AddCredentialResponse& from) : AddCredentialResponse(nullptr, from) {}
  inline AddCredentialResponse(AddCredentialResponse&& from) noexcept
      : AddCredentialResponse(nullptr, std::move(from)) {}
  inline AddCredentialResponse& operator=(const AddCredentialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddCredentialResponse& operator=(AddCredentialResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddCredentialResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddCredentialResponse* internal_default_instance() {
    return reinterpret_cast<const AddCredentialResponse*>(
        &_AddCredentialResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(AddCredentialResponse& a, AddCredentialResponse& b) { a.Swap(&b); }
  inline void Swap(AddCredentialResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddCredentialResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddCredentialResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddCredentialResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddCredentialResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddCredentialResponse& from) { AddCredentialResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddCredentialResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.AddCredentialResponse"; }

 protected:
  explicit AddCredentialResponse(::google::protobuf::Arena* arena);
  AddCredentialResponse(::google::protobuf::Arena* arena, const AddCredentialResponse& from);
  AddCredentialResponse(::google::protobuf::Arena* arena, AddCredentialResponse&& from) noexcept
      : AddCredentialResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialFieldNumber = 1,
  };
  // string credential = 1;
  void clear_credential() ;
  const std::string& credential() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential(Arg_&& arg, Args_... args);
  std::string* mutable_credential();
  PROTOBUF_NODISCARD std::string* release_credential();
  void set_allocated_credential(std::string* value);

  private:
  const std::string& _internal_credential() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential(
      const std::string& value);
  std::string* _internal_mutable_credential();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.AddCredentialResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddCredentialResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddCredentialResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr credential_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class AddCredentialRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.AddCredentialRequest) */ {
 public:
  inline AddCredentialRequest() : AddCredentialRequest(nullptr) {}
  ~AddCredentialRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddCredentialRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddCredentialRequest(const AddCredentialRequest& from) : AddCredentialRequest(nullptr, from) {}
  inline AddCredentialRequest(AddCredentialRequest&& from) noexcept
      : AddCredentialRequest(nullptr, std::move(from)) {}
  inline AddCredentialRequest& operator=(const AddCredentialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddCredentialRequest& operator=(AddCredentialRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddCredentialRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddCredentialRequest* internal_default_instance() {
    return reinterpret_cast<const AddCredentialRequest*>(
        &_AddCredentialRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(AddCredentialRequest& a, AddCredentialRequest& b) { a.Swap(&b); }
  inline void Swap(AddCredentialRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddCredentialRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddCredentialRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddCredentialRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddCredentialRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddCredentialRequest& from) { AddCredentialRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddCredentialRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.AddCredentialRequest"; }

 protected:
  explicit AddCredentialRequest(::google::protobuf::Arena* arena);
  AddCredentialRequest(::google::protobuf::Arena* arena, const AddCredentialRequest& from);
  AddCredentialRequest(::google::protobuf::Arena* arena, AddCredentialRequest&& from) noexcept
      : AddCredentialRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCredentialTypeFieldNumber = 1,
    kWalletIdFieldNumber = 2,
    kApiKeyFieldNumber = 3,
  };
  // string credential_type = 1;
  void clear_credential_type() ;
  const std::string& credential_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_credential_type(Arg_&& arg, Args_... args);
  std::string* mutable_credential_type();
  PROTOBUF_NODISCARD std::string* release_credential_type();
  void set_allocated_credential_type(std::string* value);

  private:
  const std::string& _internal_credential_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_credential_type(
      const std::string& value);
  std::string* _internal_mutable_credential_type();

  public:
  // string wallet_id = 2;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 3;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.AddCredentialRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddCredentialRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddCredentialRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr credential_type_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class WalletBalance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.WalletBalance) */ {
 public:
  inline WalletBalance() : WalletBalance(nullptr) {}
  ~WalletBalance() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WalletBalance(
      ::google::protobuf::internal::ConstantInitialized);

  inline WalletBalance(const WalletBalance& from) : WalletBalance(nullptr, from) {}
  inline WalletBalance(WalletBalance&& from) noexcept
      : WalletBalance(nullptr, std::move(from)) {}
  inline WalletBalance& operator=(const WalletBalance& from) {
    CopyFrom(from);
    return *this;
  }
  inline WalletBalance& operator=(WalletBalance&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WalletBalance& default_instance() {
    return *internal_default_instance();
  }
  static inline const WalletBalance* internal_default_instance() {
    return reinterpret_cast<const WalletBalance*>(
        &_WalletBalance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(WalletBalance& a, WalletBalance& b) { a.Swap(&b); }
  inline void Swap(WalletBalance* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WalletBalance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WalletBalance* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<WalletBalance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WalletBalance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WalletBalance& from) { WalletBalance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WalletBalance* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.WalletBalance"; }

 protected:
  explicit WalletBalance(::google::protobuf::Arena* arena);
  WalletBalance(::google::protobuf::Arena* arena, const WalletBalance& from);
  WalletBalance(::google::protobuf::Arena* arena, WalletBalance&& from) noexcept
      : WalletBalance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAmountFieldNumber = 1,
    kFileCountFieldNumber = 2,
  };
  // .common.Amount amount = 1;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // int64 file_count = 2;
  void clear_file_count() ;
  ::int64_t file_count() const;
  void set_file_count(::int64_t value);

  private:
  ::int64_t _internal_file_count() const;
  void _internal_set_file_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.WalletBalance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WalletBalance_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WalletBalance& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::common::Amount* amount_;
    ::int64_t file_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PreparePaymentWithImplicitFundsChangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest) */ {
 public:
  inline PreparePaymentWithImplicitFundsChangeRequest() : PreparePaymentWithImplicitFundsChangeRequest(nullptr) {}
  ~PreparePaymentWithImplicitFundsChangeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PreparePaymentWithImplicitFundsChangeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PreparePaymentWithImplicitFundsChangeRequest(const PreparePaymentWithImplicitFundsChangeRequest& from) : PreparePaymentWithImplicitFundsChangeRequest(nullptr, from) {}
  inline PreparePaymentWithImplicitFundsChangeRequest(PreparePaymentWithImplicitFundsChangeRequest&& from) noexcept
      : PreparePaymentWithImplicitFundsChangeRequest(nullptr, std::move(from)) {}
  inline PreparePaymentWithImplicitFundsChangeRequest& operator=(const PreparePaymentWithImplicitFundsChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreparePaymentWithImplicitFundsChangeRequest& operator=(PreparePaymentWithImplicitFundsChangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreparePaymentWithImplicitFundsChangeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PreparePaymentWithImplicitFundsChangeRequest* internal_default_instance() {
    return reinterpret_cast<const PreparePaymentWithImplicitFundsChangeRequest*>(
        &_PreparePaymentWithImplicitFundsChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(PreparePaymentWithImplicitFundsChangeRequest& a, PreparePaymentWithImplicitFundsChangeRequest& b) { a.Swap(&b); }
  inline void Swap(PreparePaymentWithImplicitFundsChangeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreparePaymentWithImplicitFundsChangeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreparePaymentWithImplicitFundsChangeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PreparePaymentWithImplicitFundsChangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreparePaymentWithImplicitFundsChangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PreparePaymentWithImplicitFundsChangeRequest& from) { PreparePaymentWithImplicitFundsChangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PreparePaymentWithImplicitFundsChangeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest"; }

 protected:
  explicit PreparePaymentWithImplicitFundsChangeRequest(::google::protobuf::Arena* arena);
  PreparePaymentWithImplicitFundsChangeRequest(::google::protobuf::Arena* arena, const PreparePaymentWithImplicitFundsChangeRequest& from);
  PreparePaymentWithImplicitFundsChangeRequest(::google::protobuf::Arena* arena, PreparePaymentWithImplicitFundsChangeRequest&& from) noexcept
      : PreparePaymentWithImplicitFundsChangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecipientFieldNumber = 1,
    kUserReferenceFieldNumber = 3,
    kWalletIdFieldNumber = 4,
    kApiKeyFieldNumber = 5,
    kAmountFieldNumber = 2,
  };
  // string recipient = 1;
  void clear_recipient() ;
  const std::string& recipient() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recipient(Arg_&& arg, Args_... args);
  std::string* mutable_recipient();
  PROTOBUF_NODISCARD std::string* release_recipient();
  void set_allocated_recipient(std::string* value);

  private:
  const std::string& _internal_recipient() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recipient(
      const std::string& value);
  std::string* _internal_mutable_recipient();

  public:
  // string user_reference = 3;
  void clear_user_reference() ;
  const std::string& user_reference() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_reference(Arg_&& arg, Args_... args);
  std::string* mutable_user_reference();
  PROTOBUF_NODISCARD std::string* release_user_reference();
  void set_allocated_user_reference(std::string* value);

  private:
  const std::string& _internal_user_reference() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_reference(
      const std::string& value);
  std::string* _internal_mutable_user_reference();

  public:
  // string wallet_id = 4;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 5;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // .common.Amount amount = 2;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      106, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PreparePaymentWithImplicitFundsChangeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PreparePaymentWithImplicitFundsChangeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr recipient_;
    ::google::protobuf::internal::ArenaStringPtr user_reference_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::common::Amount* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareFundsChangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareFundsChangeRequest) */ {
 public:
  inline PrepareFundsChangeRequest() : PrepareFundsChangeRequest(nullptr) {}
  ~PrepareFundsChangeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareFundsChangeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareFundsChangeRequest(const PrepareFundsChangeRequest& from) : PrepareFundsChangeRequest(nullptr, from) {}
  inline PrepareFundsChangeRequest(PrepareFundsChangeRequest&& from) noexcept
      : PrepareFundsChangeRequest(nullptr, std::move(from)) {}
  inline PrepareFundsChangeRequest& operator=(const PrepareFundsChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareFundsChangeRequest& operator=(PrepareFundsChangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareFundsChangeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareFundsChangeRequest* internal_default_instance() {
    return reinterpret_cast<const PrepareFundsChangeRequest*>(
        &_PrepareFundsChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(PrepareFundsChangeRequest& a, PrepareFundsChangeRequest& b) { a.Swap(&b); }
  inline void Swap(PrepareFundsChangeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareFundsChangeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareFundsChangeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareFundsChangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareFundsChangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareFundsChangeRequest& from) { PrepareFundsChangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareFundsChangeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareFundsChangeRequest"; }

 protected:
  explicit PrepareFundsChangeRequest(::google::protobuf::Arena* arena);
  PrepareFundsChangeRequest(::google::protobuf::Arena* arena, const PrepareFundsChangeRequest& from);
  PrepareFundsChangeRequest(::google::protobuf::Arena* arena, PrepareFundsChangeRequest&& from) noexcept
      : PrepareFundsChangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 2,
    kApiKeyFieldNumber = 3,
    kUserReferenceFieldNumber = 4,
    kAmountFieldNumber = 1,
  };
  // string wallet_id = 2;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 3;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string user_reference = 4;
  void clear_user_reference() ;
  const std::string& user_reference() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_reference(Arg_&& arg, Args_... args);
  std::string* mutable_user_reference();
  PROTOBUF_NODISCARD std::string* release_user_reference();
  void set_allocated_user_reference(std::string* value);

  private:
  const std::string& _internal_user_reference() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_reference(
      const std::string& value);
  std::string* _internal_mutable_user_reference();

  public:
  // .common.Amount amount = 1;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareFundsChangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      78, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareFundsChangeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareFundsChangeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr user_reference_;
    ::common::Amount* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareCrossBorderPaymentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareCrossBorderPaymentRequest) */ {
 public:
  inline PrepareCrossBorderPaymentRequest() : PrepareCrossBorderPaymentRequest(nullptr) {}
  ~PrepareCrossBorderPaymentRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareCrossBorderPaymentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareCrossBorderPaymentRequest(const PrepareCrossBorderPaymentRequest& from) : PrepareCrossBorderPaymentRequest(nullptr, from) {}
  inline PrepareCrossBorderPaymentRequest(PrepareCrossBorderPaymentRequest&& from) noexcept
      : PrepareCrossBorderPaymentRequest(nullptr, std::move(from)) {}
  inline PrepareCrossBorderPaymentRequest& operator=(const PrepareCrossBorderPaymentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareCrossBorderPaymentRequest& operator=(PrepareCrossBorderPaymentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareCrossBorderPaymentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareCrossBorderPaymentRequest* internal_default_instance() {
    return reinterpret_cast<const PrepareCrossBorderPaymentRequest*>(
        &_PrepareCrossBorderPaymentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(PrepareCrossBorderPaymentRequest& a, PrepareCrossBorderPaymentRequest& b) { a.Swap(&b); }
  inline void Swap(PrepareCrossBorderPaymentRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareCrossBorderPaymentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareCrossBorderPaymentRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareCrossBorderPaymentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareCrossBorderPaymentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareCrossBorderPaymentRequest& from) { PrepareCrossBorderPaymentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareCrossBorderPaymentRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareCrossBorderPaymentRequest"; }

 protected:
  explicit PrepareCrossBorderPaymentRequest(::google::protobuf::Arena* arena);
  PrepareCrossBorderPaymentRequest(::google::protobuf::Arena* arena, const PrepareCrossBorderPaymentRequest& from);
  PrepareCrossBorderPaymentRequest(::google::protobuf::Arena* arena, PrepareCrossBorderPaymentRequest&& from) noexcept
      : PrepareCrossBorderPaymentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kApiKeyFieldNumber = 1,
    kWalletIdFieldNumber = 2,
    kTreasuryFieldNumber = 3,
    kRespondentFieldNumber = 5,
    kMemoFieldNumber = 7,
    kAmountFieldNumber = 4,
    kRespondentAmountFieldNumber = 6,
    kTimeoutFieldNumber = 8,
  };
  // string api_key = 1;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string wallet_id = 2;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string treasury = 3;
  void clear_treasury() ;
  const std::string& treasury() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_treasury(Arg_&& arg, Args_... args);
  std::string* mutable_treasury();
  PROTOBUF_NODISCARD std::string* release_treasury();
  void set_allocated_treasury(std::string* value);

  private:
  const std::string& _internal_treasury() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_treasury(
      const std::string& value);
  std::string* _internal_mutable_treasury();

  public:
  // string respondent = 5;
  void clear_respondent() ;
  const std::string& respondent() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_respondent(Arg_&& arg, Args_... args);
  std::string* mutable_respondent();
  PROTOBUF_NODISCARD std::string* release_respondent();
  void set_allocated_respondent(std::string* value);

  private:
  const std::string& _internal_respondent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_respondent(
      const std::string& value);
  std::string* _internal_mutable_respondent();

  public:
  // string memo = 7;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // .common.Amount amount = 4;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // .common.Amount respondent_amount = 6;
  bool has_respondent_amount() const;
  void clear_respondent_amount() ;
  const ::common::Amount& respondent_amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_respondent_amount();
  ::common::Amount* mutable_respondent_amount();
  void set_allocated_respondent_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_respondent_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_respondent_amount();

  private:
  const ::common::Amount& _internal_respondent_amount() const;
  ::common::Amount* _internal_mutable_respondent_amount();

  public:
  // uint32 timeout = 8;
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareCrossBorderPaymentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 2,
      101, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareCrossBorderPaymentRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareCrossBorderPaymentRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr treasury_;
    ::google::protobuf::internal::ArenaStringPtr respondent_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::common::Amount* amount_;
    ::common::Amount* respondent_amount_;
    ::uint32_t timeout_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareAtomicAssetSwapRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareAtomicAssetSwapRequest) */ {
 public:
  inline PrepareAtomicAssetSwapRequest() : PrepareAtomicAssetSwapRequest(nullptr) {}
  ~PrepareAtomicAssetSwapRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareAtomicAssetSwapRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareAtomicAssetSwapRequest(const PrepareAtomicAssetSwapRequest& from) : PrepareAtomicAssetSwapRequest(nullptr, from) {}
  inline PrepareAtomicAssetSwapRequest(PrepareAtomicAssetSwapRequest&& from) noexcept
      : PrepareAtomicAssetSwapRequest(nullptr, std::move(from)) {}
  inline PrepareAtomicAssetSwapRequest& operator=(const PrepareAtomicAssetSwapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareAtomicAssetSwapRequest& operator=(PrepareAtomicAssetSwapRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareAtomicAssetSwapRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareAtomicAssetSwapRequest* internal_default_instance() {
    return reinterpret_cast<const PrepareAtomicAssetSwapRequest*>(
        &_PrepareAtomicAssetSwapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(PrepareAtomicAssetSwapRequest& a, PrepareAtomicAssetSwapRequest& b) { a.Swap(&b); }
  inline void Swap(PrepareAtomicAssetSwapRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareAtomicAssetSwapRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareAtomicAssetSwapRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareAtomicAssetSwapRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareAtomicAssetSwapRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareAtomicAssetSwapRequest& from) { PrepareAtomicAssetSwapRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareAtomicAssetSwapRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareAtomicAssetSwapRequest"; }

 protected:
  explicit PrepareAtomicAssetSwapRequest(::google::protobuf::Arena* arena);
  PrepareAtomicAssetSwapRequest(::google::protobuf::Arena* arena, const PrepareAtomicAssetSwapRequest& from);
  PrepareAtomicAssetSwapRequest(::google::protobuf::Arena* arena, PrepareAtomicAssetSwapRequest&& from) noexcept
      : PrepareAtomicAssetSwapRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kApiKeyFieldNumber = 1,
    kWalletIdFieldNumber = 2,
    kRespondentFieldNumber = 4,
    kMemoFieldNumber = 6,
    kAmountFieldNumber = 3,
    kRespondentAmountFieldNumber = 5,
    kTimeoutFieldNumber = 7,
  };
  // string api_key = 1;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string wallet_id = 2;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string respondent = 4;
  void clear_respondent() ;
  const std::string& respondent() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_respondent(Arg_&& arg, Args_... args);
  std::string* mutable_respondent();
  PROTOBUF_NODISCARD std::string* release_respondent();
  void set_allocated_respondent(std::string* value);

  private:
  const std::string& _internal_respondent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_respondent(
      const std::string& value);
  std::string* _internal_mutable_respondent();

  public:
  // string memo = 6;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // .common.Amount amount = 3;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // .common.Amount respondent_amount = 5;
  bool has_respondent_amount() const;
  void clear_respondent_amount() ;
  const ::common::Amount& respondent_amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_respondent_amount();
  ::common::Amount* mutable_respondent_amount();
  void set_allocated_respondent_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_respondent_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_respondent_amount();

  private:
  const ::common::Amount& _internal_respondent_amount() const;
  ::common::Amount* _internal_mutable_respondent_amount();

  public:
  // uint32 timeout = 7;
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareAtomicAssetSwapRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareAtomicAssetSwapRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareAtomicAssetSwapRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr respondent_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::common::Amount* amount_;
    ::common::Amount* respondent_amount_;
    ::uint32_t timeout_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletsResponse) */ {
 public:
  inline ListWalletsResponse() : ListWalletsResponse(nullptr) {}
  ~ListWalletsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletsResponse(const ListWalletsResponse& from) : ListWalletsResponse(nullptr, from) {}
  inline ListWalletsResponse(ListWalletsResponse&& from) noexcept
      : ListWalletsResponse(nullptr, std::move(from)) {}
  inline ListWalletsResponse& operator=(const ListWalletsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletsResponse& operator=(ListWalletsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletsResponse* internal_default_instance() {
    return reinterpret_cast<const ListWalletsResponse*>(
        &_ListWalletsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ListWalletsResponse& a, ListWalletsResponse& b) { a.Swap(&b); }
  inline void Swap(ListWalletsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletsResponse& from) { ListWalletsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletsResponse"; }

 protected:
  explicit ListWalletsResponse(::google::protobuf::Arena* arena);
  ListWalletsResponse(::google::protobuf::Arena* arena, const ListWalletsResponse& from);
  ListWalletsResponse(::google::protobuf::Arena* arena, ListWalletsResponse&& from) noexcept
      : ListWalletsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Wallet = ListWalletsResponse_Wallet;

  // accessors -------------------------------------------------------
  enum : int {
    kWalletsFieldNumber = 1,
    kTotalOwnedWalletsFieldNumber = 2,
  };
  // repeated .wallet_api.v1.ListWalletsResponse.Wallet wallets = 1;
  int wallets_size() const;
  private:
  int _internal_wallets_size() const;

  public:
  void clear_wallets() ;
  ::wallet_api::v1::ListWalletsResponse_Wallet* mutable_wallets(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>* mutable_wallets();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>& _internal_wallets() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>* _internal_mutable_wallets();
  public:
  const ::wallet_api::v1::ListWalletsResponse_Wallet& wallets(int index) const;
  ::wallet_api::v1::ListWalletsResponse_Wallet* add_wallets();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>& wallets() const;
  // uint32 total_owned_wallets = 2;
  void clear_total_owned_wallets() ;
  ::uint32_t total_owned_wallets() const;
  void set_total_owned_wallets(::uint32_t value);

  private:
  ::uint32_t _internal_total_owned_wallets() const;
  void _internal_set_total_owned_wallets(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::ListWalletsResponse_Wallet > wallets_;
    ::uint32_t total_owned_wallets_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListTransactionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListTransactionsResponse) */ {
 public:
  inline ListTransactionsResponse() : ListTransactionsResponse(nullptr) {}
  ~ListTransactionsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTransactionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTransactionsResponse(const ListTransactionsResponse& from) : ListTransactionsResponse(nullptr, from) {}
  inline ListTransactionsResponse(ListTransactionsResponse&& from) noexcept
      : ListTransactionsResponse(nullptr, std::move(from)) {}
  inline ListTransactionsResponse& operator=(const ListTransactionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTransactionsResponse& operator=(ListTransactionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTransactionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTransactionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListTransactionsResponse*>(
        &_ListTransactionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ListTransactionsResponse& a, ListTransactionsResponse& b) { a.Swap(&b); }
  inline void Swap(ListTransactionsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTransactionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTransactionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTransactionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTransactionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTransactionsResponse& from) { ListTransactionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTransactionsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListTransactionsResponse"; }

 protected:
  explicit ListTransactionsResponse(::google::protobuf::Arena* arena);
  ListTransactionsResponse(::google::protobuf::Arena* arena, const ListTransactionsResponse& from);
  ListTransactionsResponse(::google::protobuf::Arena* arena, ListTransactionsResponse&& from) noexcept
      : ListTransactionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContractsFieldNumber = 1,
    kTotalContractsFieldNumber = 2,
  };
  // repeated .wallet_api.v1.ContractSummary contracts = 1;
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;

  public:
  void clear_contracts() ;
  ::wallet_api::v1::ContractSummary* mutable_contracts(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>* mutable_contracts();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>& _internal_contracts() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>* _internal_mutable_contracts();
  public:
  const ::wallet_api::v1::ContractSummary& contracts(int index) const;
  ::wallet_api::v1::ContractSummary* add_contracts();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>& contracts() const;
  // uint32 totalContracts = 2;
  void clear_totalcontracts() ;
  ::uint32_t totalcontracts() const;
  void set_totalcontracts(::uint32_t value);

  private:
  ::uint32_t _internal_totalcontracts() const;
  void _internal_set_totalcontracts(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListTransactionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTransactionsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTransactionsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::ContractSummary > contracts_;
    ::uint32_t totalcontracts_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListAssetFilesResponse_Promissory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListAssetFilesResponse.Promissory) */ {
 public:
  inline ListAssetFilesResponse_Promissory() : ListAssetFilesResponse_Promissory(nullptr) {}
  ~ListAssetFilesResponse_Promissory() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAssetFilesResponse_Promissory(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAssetFilesResponse_Promissory(const ListAssetFilesResponse_Promissory& from) : ListAssetFilesResponse_Promissory(nullptr, from) {}
  inline ListAssetFilesResponse_Promissory(ListAssetFilesResponse_Promissory&& from) noexcept
      : ListAssetFilesResponse_Promissory(nullptr, std::move(from)) {}
  inline ListAssetFilesResponse_Promissory& operator=(const ListAssetFilesResponse_Promissory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAssetFilesResponse_Promissory& operator=(ListAssetFilesResponse_Promissory&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAssetFilesResponse_Promissory& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAssetFilesResponse_Promissory* internal_default_instance() {
    return reinterpret_cast<const ListAssetFilesResponse_Promissory*>(
        &_ListAssetFilesResponse_Promissory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ListAssetFilesResponse_Promissory& a, ListAssetFilesResponse_Promissory& b) { a.Swap(&b); }
  inline void Swap(ListAssetFilesResponse_Promissory* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAssetFilesResponse_Promissory* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAssetFilesResponse_Promissory* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListAssetFilesResponse_Promissory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAssetFilesResponse_Promissory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAssetFilesResponse_Promissory& from) { ListAssetFilesResponse_Promissory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAssetFilesResponse_Promissory* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListAssetFilesResponse.Promissory"; }

 protected:
  explicit ListAssetFilesResponse_Promissory(::google::protobuf::Arena* arena);
  ListAssetFilesResponse_Promissory(::google::protobuf::Arena* arena, const ListAssetFilesResponse_Promissory& from);
  ListAssetFilesResponse_Promissory(::google::protobuf::Arena* arena, ListAssetFilesResponse_Promissory&& from) noexcept
      : ListAssetFilesResponse_Promissory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNotariesFieldNumber = 13,
    kVersionFieldNumber = 1,
    kIdFieldNumber = 3,
    kCurrencyFieldNumber = 4,
    kAuthorityFieldNumber = 7,
    kIssuerFieldNumber = 8,
    kIssuanceDateFieldNumber = 9,
    kAuthorizationSignatureFieldNumber = 11,
    kTransferSignatureFieldNumber = 12,
    kAmountFieldNumber = 5,
    kDecimalsFieldNumber = 6,
    kBlockDepthFieldNumber = 10,
  };
  // repeated .wallet_api.v1.ListAssetFilesResponse.Notary notaries = 13;
  int notaries_size() const;
  private:
  int _internal_notaries_size() const;

  public:
  void clear_notaries() ;
  ::wallet_api::v1::ListAssetFilesResponse_Notary* mutable_notaries(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>* mutable_notaries();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>& _internal_notaries() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>* _internal_mutable_notaries();
  public:
  const ::wallet_api::v1::ListAssetFilesResponse_Notary& notaries(int index) const;
  ::wallet_api::v1::ListAssetFilesResponse_Notary* add_notaries();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>& notaries() const;
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string id = 3;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string currency = 4;
  void clear_currency() ;
  const std::string& currency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency(Arg_&& arg, Args_... args);
  std::string* mutable_currency();
  PROTOBUF_NODISCARD std::string* release_currency();
  void set_allocated_currency(std::string* value);

  private:
  const std::string& _internal_currency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency(
      const std::string& value);
  std::string* _internal_mutable_currency();

  public:
  // string authority = 7;
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // string issuer = 8;
  void clear_issuer() ;
  const std::string& issuer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer(Arg_&& arg, Args_... args);
  std::string* mutable_issuer();
  PROTOBUF_NODISCARD std::string* release_issuer();
  void set_allocated_issuer(std::string* value);

  private:
  const std::string& _internal_issuer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer(
      const std::string& value);
  std::string* _internal_mutable_issuer();

  public:
  // string issuance_date = 9;
  void clear_issuance_date() ;
  const std::string& issuance_date() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuance_date(Arg_&& arg, Args_... args);
  std::string* mutable_issuance_date();
  PROTOBUF_NODISCARD std::string* release_issuance_date();
  void set_allocated_issuance_date(std::string* value);

  private:
  const std::string& _internal_issuance_date() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuance_date(
      const std::string& value);
  std::string* _internal_mutable_issuance_date();

  public:
  // bytes authorization_signature = 11;
  void clear_authorization_signature() ;
  const std::string& authorization_signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authorization_signature(Arg_&& arg, Args_... args);
  std::string* mutable_authorization_signature();
  PROTOBUF_NODISCARD std::string* release_authorization_signature();
  void set_allocated_authorization_signature(std::string* value);

  private:
  const std::string& _internal_authorization_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authorization_signature(
      const std::string& value);
  std::string* _internal_mutable_authorization_signature();

  public:
  // bytes transfer_signature = 12;
  void clear_transfer_signature() ;
  const std::string& transfer_signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_signature(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_signature();
  PROTOBUF_NODISCARD std::string* release_transfer_signature();
  void set_allocated_transfer_signature(std::string* value);

  private:
  const std::string& _internal_transfer_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_signature(
      const std::string& value);
  std::string* _internal_mutable_transfer_signature();

  public:
  // int64 amount = 5;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // uint32 decimals = 6;
  void clear_decimals() ;
  ::uint32_t decimals() const;
  void set_decimals(::uint32_t value);

  private:
  ::uint32_t _internal_decimals() const;
  void _internal_set_decimals(::uint32_t value);

  public:
  // uint32 block_depth = 10;
  void clear_block_depth() ;
  ::uint32_t block_depth() const;
  void set_block_depth(::uint32_t value);

  private:
  ::uint32_t _internal_block_depth() const;
  void _internal_set_block_depth(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListAssetFilesResponse.Promissory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      109, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAssetFilesResponse_Promissory_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAssetFilesResponse_Promissory& from_msg);
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::ListAssetFilesResponse_Notary > notaries_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr currency_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::ArenaStringPtr issuer_;
    ::google::protobuf::internal::ArenaStringPtr issuance_date_;
    ::google::protobuf::internal::ArenaStringPtr authorization_signature_;
    ::google::protobuf::internal::ArenaStringPtr transfer_signature_;
    ::int64_t amount_;
    ::uint32_t decimals_;
    ::uint32_t block_depth_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionDetailResponse_LogEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.GetTransactionDetailResponse.LogEntry) */ {
 public:
  inline GetTransactionDetailResponse_LogEntry() : GetTransactionDetailResponse_LogEntry(nullptr) {}
  ~GetTransactionDetailResponse_LogEntry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTransactionDetailResponse_LogEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTransactionDetailResponse_LogEntry(const GetTransactionDetailResponse_LogEntry& from) : GetTransactionDetailResponse_LogEntry(nullptr, from) {}
  inline GetTransactionDetailResponse_LogEntry(GetTransactionDetailResponse_LogEntry&& from) noexcept
      : GetTransactionDetailResponse_LogEntry(nullptr, std::move(from)) {}
  inline GetTransactionDetailResponse_LogEntry& operator=(const GetTransactionDetailResponse_LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionDetailResponse_LogEntry& operator=(GetTransactionDetailResponse_LogEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionDetailResponse_LogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionDetailResponse_LogEntry* internal_default_instance() {
    return reinterpret_cast<const GetTransactionDetailResponse_LogEntry*>(
        &_GetTransactionDetailResponse_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(GetTransactionDetailResponse_LogEntry& a, GetTransactionDetailResponse_LogEntry& b) { a.Swap(&b); }
  inline void Swap(GetTransactionDetailResponse_LogEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionDetailResponse_LogEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTransactionDetailResponse_LogEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetTransactionDetailResponse_LogEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTransactionDetailResponse_LogEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTransactionDetailResponse_LogEntry& from) { GetTransactionDetailResponse_LogEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetTransactionDetailResponse_LogEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.GetTransactionDetailResponse.LogEntry"; }

 protected:
  explicit GetTransactionDetailResponse_LogEntry(::google::protobuf::Arena* arena);
  GetTransactionDetailResponse_LogEntry(::google::protobuf::Arena* arena, const GetTransactionDetailResponse_LogEntry& from);
  GetTransactionDetailResponse_LogEntry(::google::protobuf::Arena* arena, GetTransactionDetailResponse_LogEntry&& from) noexcept
      : GetTransactionDetailResponse_LogEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kReceiverFieldNumber = 2,
    kTimestampFieldNumber = 4,
    kKindFieldNumber = 5,
    kStateFieldNumber = 6,
    kEventFieldNumber = 7,
    kPromissoryIdFieldNumber = 8,
    kAmountFieldNumber = 3,
  };
  // string sender = 1;
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string receiver = 2;
  void clear_receiver() ;
  const std::string& receiver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_receiver(Arg_&& arg, Args_... args);
  std::string* mutable_receiver();
  PROTOBUF_NODISCARD std::string* release_receiver();
  void set_allocated_receiver(std::string* value);

  private:
  const std::string& _internal_receiver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_receiver(
      const std::string& value);
  std::string* _internal_mutable_receiver();

  public:
  // string timestamp = 4;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string kind = 5;
  void clear_kind() ;
  const std::string& kind() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kind(Arg_&& arg, Args_... args);
  std::string* mutable_kind();
  PROTOBUF_NODISCARD std::string* release_kind();
  void set_allocated_kind(std::string* value);

  private:
  const std::string& _internal_kind() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kind(
      const std::string& value);
  std::string* _internal_mutable_kind();

  public:
  // string state = 6;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // string event = 7;
  void clear_event() ;
  const std::string& event() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event(Arg_&& arg, Args_... args);
  std::string* mutable_event();
  PROTOBUF_NODISCARD std::string* release_event();
  void set_allocated_event(std::string* value);

  private:
  const std::string& _internal_event() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event(
      const std::string& value);
  std::string* _internal_mutable_event();

  public:
  // string promissory_id = 8;
  void clear_promissory_id() ;
  const std::string& promissory_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_promissory_id(Arg_&& arg, Args_... args);
  std::string* mutable_promissory_id();
  PROTOBUF_NODISCARD std::string* release_promissory_id();
  void set_allocated_promissory_id(std::string* value);

  private:
  const std::string& _internal_promissory_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_promissory_id(
      const std::string& value);
  std::string* _internal_mutable_promissory_id();

  public:
  // .common.Amount amount = 3;
  bool has_amount() const;
  void clear_amount() ;
  const ::common::Amount& amount() const;
  PROTOBUF_NODISCARD ::common::Amount* release_amount();
  ::common::Amount* mutable_amount();
  void set_allocated_amount(::common::Amount* value);
  void unsafe_arena_set_allocated_amount(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_amount();

  private:
  const ::common::Amount& _internal_amount() const;
  ::common::Amount* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.GetTransactionDetailResponse.LogEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      118, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetTransactionDetailResponse_LogEntry_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTransactionDetailResponse_LogEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr receiver_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr kind_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::google::protobuf::internal::ArenaStringPtr event_;
    ::google::protobuf::internal::ArenaStringPtr promissory_id_;
    ::common::Amount* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletsRequest) */ {
 public:
  inline ListWalletsRequest() : ListWalletsRequest(nullptr) {}
  ~ListWalletsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletsRequest(const ListWalletsRequest& from) : ListWalletsRequest(nullptr, from) {}
  inline ListWalletsRequest(ListWalletsRequest&& from) noexcept
      : ListWalletsRequest(nullptr, std::move(from)) {}
  inline ListWalletsRequest& operator=(const ListWalletsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletsRequest& operator=(ListWalletsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletsRequest* internal_default_instance() {
    return reinterpret_cast<const ListWalletsRequest*>(
        &_ListWalletsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListWalletsRequest& a, ListWalletsRequest& b) { a.Swap(&b); }
  inline void Swap(ListWalletsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletsRequest& from) { ListWalletsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletsRequest"; }

 protected:
  explicit ListWalletsRequest(::google::protobuf::Arena* arena);
  ListWalletsRequest(::google::protobuf::Arena* arena, const ListWalletsRequest& from);
  ListWalletsRequest(::google::protobuf::Arena* arena, ListWalletsRequest&& from) noexcept
      : ListWalletsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kApiKeyFieldNumber = 3,
    kFiltersFieldNumber = 4,
    kSortByFieldNumber = 5,
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
  };
  // string api_key = 3;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // .common.Filter filters = 4;
  bool has_filters() const;
  void clear_filters() ;
  const ::common::Filter& filters() const;
  PROTOBUF_NODISCARD ::common::Filter* release_filters();
  ::common::Filter* mutable_filters();
  void set_allocated_filters(::common::Filter* value);
  void unsafe_arena_set_allocated_filters(::common::Filter* value);
  ::common::Filter* unsafe_arena_release_filters();

  private:
  const ::common::Filter& _internal_filters() const;
  ::common::Filter* _internal_mutable_filters();

  public:
  // .common.SortBy sort_by = 5;
  bool has_sort_by() const;
  void clear_sort_by() ;
  const ::common::SortBy& sort_by() const;
  PROTOBUF_NODISCARD ::common::SortBy* release_sort_by();
  ::common::SortBy* mutable_sort_by();
  void set_allocated_sort_by(::common::SortBy* value);
  void unsafe_arena_set_allocated_sort_by(::common::SortBy* value);
  ::common::SortBy* unsafe_arena_release_sort_by();

  private:
  const ::common::SortBy& _internal_sort_by() const;
  ::common::SortBy* _internal_mutable_sort_by();

  public:
  // int32 page = 1;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 2;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::common::Filter* filters_;
    ::common::SortBy* sort_by_;
    ::int32_t page_;
    ::int32_t page_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletBalancesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletBalancesResponse) */ {
 public:
  inline ListWalletBalancesResponse() : ListWalletBalancesResponse(nullptr) {}
  ~ListWalletBalancesResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletBalancesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletBalancesResponse(const ListWalletBalancesResponse& from) : ListWalletBalancesResponse(nullptr, from) {}
  inline ListWalletBalancesResponse(ListWalletBalancesResponse&& from) noexcept
      : ListWalletBalancesResponse(nullptr, std::move(from)) {}
  inline ListWalletBalancesResponse& operator=(const ListWalletBalancesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletBalancesResponse& operator=(ListWalletBalancesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletBalancesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletBalancesResponse* internal_default_instance() {
    return reinterpret_cast<const ListWalletBalancesResponse*>(
        &_ListWalletBalancesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ListWalletBalancesResponse& a, ListWalletBalancesResponse& b) { a.Swap(&b); }
  inline void Swap(ListWalletBalancesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletBalancesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletBalancesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletBalancesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletBalancesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletBalancesResponse& from) { ListWalletBalancesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletBalancesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletBalancesResponse"; }

 protected:
  explicit ListWalletBalancesResponse(::google::protobuf::Arena* arena);
  ListWalletBalancesResponse(::google::protobuf::Arena* arena, const ListWalletBalancesResponse& from);
  ListWalletBalancesResponse(::google::protobuf::Arena* arena, ListWalletBalancesResponse&& from) noexcept
      : ListWalletBalancesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBalancesFieldNumber = 1,
  };
  // repeated .wallet_api.v1.WalletBalance balances = 1;
  int balances_size() const;
  private:
  int _internal_balances_size() const;

  public:
  void clear_balances() ;
  ::wallet_api::v1::WalletBalance* mutable_balances(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>* mutable_balances();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>& _internal_balances() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>* _internal_mutable_balances();
  public:
  const ::wallet_api::v1::WalletBalance& balances(int index) const;
  ::wallet_api::v1::WalletBalance* add_balances();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>& balances() const;
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletBalancesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletBalancesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletBalancesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::WalletBalance > balances_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletBalancesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletBalancesRequest) */ {
 public:
  inline ListWalletBalancesRequest() : ListWalletBalancesRequest(nullptr) {}
  ~ListWalletBalancesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletBalancesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletBalancesRequest(const ListWalletBalancesRequest& from) : ListWalletBalancesRequest(nullptr, from) {}
  inline ListWalletBalancesRequest(ListWalletBalancesRequest&& from) noexcept
      : ListWalletBalancesRequest(nullptr, std::move(from)) {}
  inline ListWalletBalancesRequest& operator=(const ListWalletBalancesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletBalancesRequest& operator=(ListWalletBalancesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletBalancesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletBalancesRequest* internal_default_instance() {
    return reinterpret_cast<const ListWalletBalancesRequest*>(
        &_ListWalletBalancesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ListWalletBalancesRequest& a, ListWalletBalancesRequest& b) { a.Swap(&b); }
  inline void Swap(ListWalletBalancesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletBalancesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletBalancesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletBalancesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletBalancesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletBalancesRequest& from) { ListWalletBalancesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletBalancesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletBalancesRequest"; }

 protected:
  explicit ListWalletBalancesRequest(::google::protobuf::Arena* arena);
  ListWalletBalancesRequest(::google::protobuf::Arena* arena, const ListWalletBalancesRequest& from);
  ListWalletBalancesRequest(::google::protobuf::Arena* arena, ListWalletBalancesRequest&& from) noexcept
      : ListWalletBalancesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
    kSortByFieldNumber = 3,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // .common.SortBy sort_by = 3;
  bool has_sort_by() const;
  void clear_sort_by() ;
  const ::common::SortBy& sort_by() const;
  PROTOBUF_NODISCARD ::common::SortBy* release_sort_by();
  ::common::SortBy* mutable_sort_by();
  void set_allocated_sort_by(::common::SortBy* value);
  void unsafe_arena_set_allocated_sort_by(::common::SortBy* value);
  ::common::SortBy* unsafe_arena_release_sort_by();

  private:
  const ::common::SortBy& _internal_sort_by() const;
  ::common::SortBy* _internal_mutable_sort_by();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletBalancesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletBalancesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletBalancesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::common::SortBy* sort_by_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListTransactionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListTransactionsRequest) */ {
 public:
  inline ListTransactionsRequest() : ListTransactionsRequest(nullptr) {}
  ~ListTransactionsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTransactionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTransactionsRequest(const ListTransactionsRequest& from) : ListTransactionsRequest(nullptr, from) {}
  inline ListTransactionsRequest(ListTransactionsRequest&& from) noexcept
      : ListTransactionsRequest(nullptr, std::move(from)) {}
  inline ListTransactionsRequest& operator=(const ListTransactionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTransactionsRequest& operator=(ListTransactionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTransactionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTransactionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListTransactionsRequest*>(
        &_ListTransactionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(ListTransactionsRequest& a, ListTransactionsRequest& b) { a.Swap(&b); }
  inline void Swap(ListTransactionsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTransactionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTransactionsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTransactionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTransactionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTransactionsRequest& from) { ListTransactionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTransactionsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListTransactionsRequest"; }

 protected:
  explicit ListTransactionsRequest(::google::protobuf::Arena* arena);
  ListTransactionsRequest(::google::protobuf::Arena* arena, const ListTransactionsRequest& from);
  ListTransactionsRequest(::google::protobuf::Arena* arena, ListTransactionsRequest&& from) noexcept
      : ListTransactionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kApiKeyFieldNumber = 2,
    kFiltersFieldNumber = 3,
    kSortByFieldNumber = 6,
    kPageFieldNumber = 4,
    kPageSizeFieldNumber = 5,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 2;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // .common.Filter filters = 3;
  bool has_filters() const;
  void clear_filters() ;
  const ::common::Filter& filters() const;
  PROTOBUF_NODISCARD ::common::Filter* release_filters();
  ::common::Filter* mutable_filters();
  void set_allocated_filters(::common::Filter* value);
  void unsafe_arena_set_allocated_filters(::common::Filter* value);
  ::common::Filter* unsafe_arena_release_filters();

  private:
  const ::common::Filter& _internal_filters() const;
  ::common::Filter* _internal_mutable_filters();

  public:
  // .common.SortBy sort_by = 6;
  bool has_sort_by() const;
  void clear_sort_by() ;
  const ::common::SortBy& sort_by() const;
  PROTOBUF_NODISCARD ::common::SortBy* release_sort_by();
  ::common::SortBy* mutable_sort_by();
  void set_allocated_sort_by(::common::SortBy* value);
  void unsafe_arena_set_allocated_sort_by(::common::SortBy* value);
  ::common::SortBy* unsafe_arena_release_sort_by();

  private:
  const ::common::SortBy& _internal_sort_by() const;
  ::common::SortBy* _internal_mutable_sort_by();

  public:
  // int32 page = 4;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 5;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListTransactionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTransactionsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTransactionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::common::Filter* filters_;
    ::common::SortBy* sort_by_;
    ::int32_t page_;
    ::int32_t page_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListCredentialsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListCredentialsRequest) */ {
 public:
  inline ListCredentialsRequest() : ListCredentialsRequest(nullptr) {}
  ~ListCredentialsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCredentialsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCredentialsRequest(const ListCredentialsRequest& from) : ListCredentialsRequest(nullptr, from) {}
  inline ListCredentialsRequest(ListCredentialsRequest&& from) noexcept
      : ListCredentialsRequest(nullptr, std::move(from)) {}
  inline ListCredentialsRequest& operator=(const ListCredentialsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCredentialsRequest& operator=(ListCredentialsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCredentialsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCredentialsRequest* internal_default_instance() {
    return reinterpret_cast<const ListCredentialsRequest*>(
        &_ListCredentialsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ListCredentialsRequest& a, ListCredentialsRequest& b) { a.Swap(&b); }
  inline void Swap(ListCredentialsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCredentialsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCredentialsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListCredentialsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCredentialsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCredentialsRequest& from) { ListCredentialsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListCredentialsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListCredentialsRequest"; }

 protected:
  explicit ListCredentialsRequest(::google::protobuf::Arena* arena);
  ListCredentialsRequest(::google::protobuf::Arena* arena, const ListCredentialsRequest& from);
  ListCredentialsRequest(::google::protobuf::Arena* arena, ListCredentialsRequest&& from) noexcept
      : ListCredentialsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 3,
    kApiKeyFieldNumber = 4,
    kFiltersFieldNumber = 5,
    kSortByFieldNumber = 6,
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
  };
  // string wallet_id = 3;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 4;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // .common.Filter filters = 5;
  bool has_filters() const;
  void clear_filters() ;
  const ::common::Filter& filters() const;
  PROTOBUF_NODISCARD ::common::Filter* release_filters();
  ::common::Filter* mutable_filters();
  void set_allocated_filters(::common::Filter* value);
  void unsafe_arena_set_allocated_filters(::common::Filter* value);
  ::common::Filter* unsafe_arena_release_filters();

  private:
  const ::common::Filter& _internal_filters() const;
  ::common::Filter* _internal_mutable_filters();

  public:
  // .common.SortBy sort_by = 6;
  bool has_sort_by() const;
  void clear_sort_by() ;
  const ::common::SortBy& sort_by() const;
  PROTOBUF_NODISCARD ::common::SortBy* release_sort_by();
  ::common::SortBy* mutable_sort_by();
  void set_allocated_sort_by(::common::SortBy* value);
  void unsafe_arena_set_allocated_sort_by(::common::SortBy* value);
  ::common::SortBy* unsafe_arena_release_sort_by();

  private:
  const ::common::SortBy& _internal_sort_by() const;
  ::common::SortBy* _internal_mutable_sort_by();

  public:
  // int32 page = 1;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 2;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListCredentialsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListCredentialsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCredentialsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::common::Filter* filters_;
    ::common::SortBy* sort_by_;
    ::int32_t page_;
    ::int32_t page_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListAssetFilesResponse_Fund final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListAssetFilesResponse.Fund) */ {
 public:
  inline ListAssetFilesResponse_Fund() : ListAssetFilesResponse_Fund(nullptr) {}
  ~ListAssetFilesResponse_Fund() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAssetFilesResponse_Fund(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAssetFilesResponse_Fund(const ListAssetFilesResponse_Fund& from) : ListAssetFilesResponse_Fund(nullptr, from) {}
  inline ListAssetFilesResponse_Fund(ListAssetFilesResponse_Fund&& from) noexcept
      : ListAssetFilesResponse_Fund(nullptr, std::move(from)) {}
  inline ListAssetFilesResponse_Fund& operator=(const ListAssetFilesResponse_Fund& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAssetFilesResponse_Fund& operator=(ListAssetFilesResponse_Fund&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAssetFilesResponse_Fund& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAssetFilesResponse_Fund* internal_default_instance() {
    return reinterpret_cast<const ListAssetFilesResponse_Fund*>(
        &_ListAssetFilesResponse_Fund_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ListAssetFilesResponse_Fund& a, ListAssetFilesResponse_Fund& b) { a.Swap(&b); }
  inline void Swap(ListAssetFilesResponse_Fund* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAssetFilesResponse_Fund* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAssetFilesResponse_Fund* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListAssetFilesResponse_Fund>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAssetFilesResponse_Fund& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAssetFilesResponse_Fund& from) { ListAssetFilesResponse_Fund::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAssetFilesResponse_Fund* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListAssetFilesResponse.Fund"; }

 protected:
  explicit ListAssetFilesResponse_Fund(::google::protobuf::Arena* arena);
  ListAssetFilesResponse_Fund(::google::protobuf::Arena* arena, const ListAssetFilesResponse_Fund& from);
  ListAssetFilesResponse_Fund(::google::protobuf::Arena* arena, ListAssetFilesResponse_Fund&& from) noexcept
      : ListAssetFilesResponse_Fund(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 1,
    kPromissoryFieldNumber = 2,
    kReservedFieldNumber = 3,
  };
  // string wallet_id = 1;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // .wallet_api.v1.ListAssetFilesResponse.Promissory promissory = 2;
  bool has_promissory() const;
  void clear_promissory() ;
  const ::wallet_api::v1::ListAssetFilesResponse_Promissory& promissory() const;
  PROTOBUF_NODISCARD ::wallet_api::v1::ListAssetFilesResponse_Promissory* release_promissory();
  ::wallet_api::v1::ListAssetFilesResponse_Promissory* mutable_promissory();
  void set_allocated_promissory(::wallet_api::v1::ListAssetFilesResponse_Promissory* value);
  void unsafe_arena_set_allocated_promissory(::wallet_api::v1::ListAssetFilesResponse_Promissory* value);
  ::wallet_api::v1::ListAssetFilesResponse_Promissory* unsafe_arena_release_promissory();

  private:
  const ::wallet_api::v1::ListAssetFilesResponse_Promissory& _internal_promissory() const;
  ::wallet_api::v1::ListAssetFilesResponse_Promissory* _internal_mutable_promissory();

  public:
  // bool reserved = 3;
  void clear_reserved() ;
  bool reserved() const;
  void set_reserved(bool value);

  private:
  bool _internal_reserved() const;
  void _internal_set_reserved(bool value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListAssetFilesResponse.Fund)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAssetFilesResponse_Fund_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAssetFilesResponse_Fund& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::wallet_api::v1::ListAssetFilesResponse_Promissory* promissory_;
    bool reserved_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListAssetFilesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListAssetFilesRequest) */ {
 public:
  inline ListAssetFilesRequest() : ListAssetFilesRequest(nullptr) {}
  ~ListAssetFilesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAssetFilesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAssetFilesRequest(const ListAssetFilesRequest& from) : ListAssetFilesRequest(nullptr, from) {}
  inline ListAssetFilesRequest(ListAssetFilesRequest&& from) noexcept
      : ListAssetFilesRequest(nullptr, std::move(from)) {}
  inline ListAssetFilesRequest& operator=(const ListAssetFilesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAssetFilesRequest& operator=(ListAssetFilesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAssetFilesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAssetFilesRequest* internal_default_instance() {
    return reinterpret_cast<const ListAssetFilesRequest*>(
        &_ListAssetFilesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ListAssetFilesRequest& a, ListAssetFilesRequest& b) { a.Swap(&b); }
  inline void Swap(ListAssetFilesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAssetFilesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAssetFilesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListAssetFilesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAssetFilesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAssetFilesRequest& from) { ListAssetFilesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAssetFilesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListAssetFilesRequest"; }

 protected:
  explicit ListAssetFilesRequest(::google::protobuf::Arena* arena);
  ListAssetFilesRequest(::google::protobuf::Arena* arena, const ListAssetFilesRequest& from);
  ListAssetFilesRequest(::google::protobuf::Arena* arena, ListAssetFilesRequest&& from) noexcept
      : ListAssetFilesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWalletIdFieldNumber = 3,
    kApiKeyFieldNumber = 4,
    kFiltersFieldNumber = 5,
    kSortByFieldNumber = 6,
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
  };
  // string wallet_id = 3;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string api_key = 4;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // .common.Filter filters = 5;
  bool has_filters() const;
  void clear_filters() ;
  const ::common::Filter& filters() const;
  PROTOBUF_NODISCARD ::common::Filter* release_filters();
  ::common::Filter* mutable_filters();
  void set_allocated_filters(::common::Filter* value);
  void unsafe_arena_set_allocated_filters(::common::Filter* value);
  ::common::Filter* unsafe_arena_release_filters();

  private:
  const ::common::Filter& _internal_filters() const;
  ::common::Filter* _internal_mutable_filters();

  public:
  // .common.SortBy sort_by = 6;
  bool has_sort_by() const;
  void clear_sort_by() ;
  const ::common::SortBy& sort_by() const;
  PROTOBUF_NODISCARD ::common::SortBy* release_sort_by();
  ::common::SortBy* mutable_sort_by();
  void set_allocated_sort_by(::common::SortBy* value);
  void unsafe_arena_set_allocated_sort_by(::common::SortBy* value);
  ::common::SortBy* unsafe_arena_release_sort_by();

  private:
  const ::common::SortBy& _internal_sort_by() const;
  ::common::SortBy* _internal_mutable_sort_by();

  public:
  // int32 page = 1;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 2;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListAssetFilesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAssetFilesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAssetFilesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::common::Filter* filters_;
    ::common::SortBy* sort_by_;
    ::int32_t page_;
    ::int32_t page_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionDetailResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.GetTransactionDetailResponse) */ {
 public:
  inline GetTransactionDetailResponse() : GetTransactionDetailResponse(nullptr) {}
  ~GetTransactionDetailResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTransactionDetailResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTransactionDetailResponse(const GetTransactionDetailResponse& from) : GetTransactionDetailResponse(nullptr, from) {}
  inline GetTransactionDetailResponse(GetTransactionDetailResponse&& from) noexcept
      : GetTransactionDetailResponse(nullptr, std::move(from)) {}
  inline GetTransactionDetailResponse& operator=(const GetTransactionDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionDetailResponse& operator=(GetTransactionDetailResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionDetailResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetTransactionDetailResponse*>(
        &_GetTransactionDetailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(GetTransactionDetailResponse& a, GetTransactionDetailResponse& b) { a.Swap(&b); }
  inline void Swap(GetTransactionDetailResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionDetailResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTransactionDetailResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetTransactionDetailResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTransactionDetailResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTransactionDetailResponse& from) { GetTransactionDetailResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetTransactionDetailResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.GetTransactionDetailResponse"; }

 protected:
  explicit GetTransactionDetailResponse(::google::protobuf::Arena* arena);
  GetTransactionDetailResponse(::google::protobuf::Arena* arena, const GetTransactionDetailResponse& from);
  GetTransactionDetailResponse(::google::protobuf::Arena* arena, GetTransactionDetailResponse&& from) noexcept
      : GetTransactionDetailResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using LogEntry = GetTransactionDetailResponse_LogEntry;

  // accessors -------------------------------------------------------
  enum : int {
    kCommitmentsFieldNumber = 2,
    kLogFieldNumber = 9,
    kContractTypeFieldNumber = 1,
    kCreatedFieldNumber = 4,
    kHashPresenterFieldNumber = 5,
    kHashFieldNumber = 6,
    kExpirationFieldNumber = 7,
    kMemoFieldNumber = 8,
  };
  // repeated .common.Commitment commitments = 2;
  int commitments_size() const;
  private:
  int _internal_commitments_size() const;

  public:
  void clear_commitments() ;
  ::common::Commitment* mutable_commitments(int index);
  ::google::protobuf::RepeatedPtrField<::common::Commitment>* mutable_commitments();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Commitment>& _internal_commitments() const;
  ::google::protobuf::RepeatedPtrField<::common::Commitment>* _internal_mutable_commitments();
  public:
  const ::common::Commitment& commitments(int index) const;
  ::common::Commitment* add_commitments();
  const ::google::protobuf::RepeatedPtrField<::common::Commitment>& commitments() const;
  // repeated .wallet_api.v1.GetTransactionDetailResponse.LogEntry log = 9;
  int log_size() const;
  private:
  int _internal_log_size() const;

  public:
  void clear_log() ;
  ::wallet_api::v1::GetTransactionDetailResponse_LogEntry* mutable_log(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>* mutable_log();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>& _internal_log() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>* _internal_mutable_log();
  public:
  const ::wallet_api::v1::GetTransactionDetailResponse_LogEntry& log(int index) const;
  ::wallet_api::v1::GetTransactionDetailResponse_LogEntry* add_log();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>& log() const;
  // string contract_type = 1;
  void clear_contract_type() ;
  const std::string& contract_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_type(Arg_&& arg, Args_... args);
  std::string* mutable_contract_type();
  PROTOBUF_NODISCARD std::string* release_contract_type();
  void set_allocated_contract_type(std::string* value);

  private:
  const std::string& _internal_contract_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract_type(
      const std::string& value);
  std::string* _internal_mutable_contract_type();

  public:
  // string created = 4;
  void clear_created() ;
  const std::string& created() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created(Arg_&& arg, Args_... args);
  std::string* mutable_created();
  PROTOBUF_NODISCARD std::string* release_created();
  void set_allocated_created(std::string* value);

  private:
  const std::string& _internal_created() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created(
      const std::string& value);
  std::string* _internal_mutable_created();

  public:
  // string hash_presenter = 5;
  void clear_hash_presenter() ;
  const std::string& hash_presenter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash_presenter(Arg_&& arg, Args_... args);
  std::string* mutable_hash_presenter();
  PROTOBUF_NODISCARD std::string* release_hash_presenter();
  void set_allocated_hash_presenter(std::string* value);

  private:
  const std::string& _internal_hash_presenter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash_presenter(
      const std::string& value);
  std::string* _internal_mutable_hash_presenter();

  public:
  // bytes hash = 6;
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // string expiration = 7;
  void clear_expiration() ;
  const std::string& expiration() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_expiration(Arg_&& arg, Args_... args);
  std::string* mutable_expiration();
  PROTOBUF_NODISCARD std::string* release_expiration();
  void set_allocated_expiration(std::string* value);

  private:
  const std::string& _internal_expiration() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_expiration(
      const std::string& value);
  std::string* _internal_mutable_expiration();

  public:
  // string memo = 8;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.GetTransactionDetailResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 2,
      107, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetTransactionDetailResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTransactionDetailResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::Commitment > commitments_;
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::GetTransactionDetailResponse_LogEntry > log_;
    ::google::protobuf::internal::ArenaStringPtr contract_type_;
    ::google::protobuf::internal::ArenaStringPtr created_;
    ::google::protobuf::internal::ArenaStringPtr hash_presenter_;
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::ArenaStringPtr expiration_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class BalanceDetail final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.BalanceDetail) */ {
 public:
  inline BalanceDetail() : BalanceDetail(nullptr) {}
  ~BalanceDetail() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BalanceDetail(
      ::google::protobuf::internal::ConstantInitialized);

  inline BalanceDetail(const BalanceDetail& from) : BalanceDetail(nullptr, from) {}
  inline BalanceDetail(BalanceDetail&& from) noexcept
      : BalanceDetail(nullptr, std::move(from)) {}
  inline BalanceDetail& operator=(const BalanceDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline BalanceDetail& operator=(BalanceDetail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BalanceDetail& default_instance() {
    return *internal_default_instance();
  }
  static inline const BalanceDetail* internal_default_instance() {
    return reinterpret_cast<const BalanceDetail*>(
        &_BalanceDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(BalanceDetail& a, BalanceDetail& b) { a.Swap(&b); }
  inline void Swap(BalanceDetail* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BalanceDetail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BalanceDetail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BalanceDetail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BalanceDetail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BalanceDetail& from) { BalanceDetail::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BalanceDetail* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.BalanceDetail"; }

 protected:
  explicit BalanceDetail(::google::protobuf::Arena* arena);
  BalanceDetail(::google::protobuf::Arena* arena, const BalanceDetail& from);
  BalanceDetail(::google::protobuf::Arena* arena, BalanceDetail&& from) noexcept
      : BalanceDetail(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Kind = BalanceDetail_Kind;
  static constexpr Kind KIND_AVAILABLE = BalanceDetail_Kind_KIND_AVAILABLE;
  static constexpr Kind KIND_RESERVED = BalanceDetail_Kind_KIND_RESERVED;
  static inline bool Kind_IsValid(int value) {
    return BalanceDetail_Kind_IsValid(value);
  }
  static constexpr Kind Kind_MIN = BalanceDetail_Kind_Kind_MIN;
  static constexpr Kind Kind_MAX = BalanceDetail_Kind_Kind_MAX;
  static constexpr int Kind_ARRAYSIZE = BalanceDetail_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Kind_descriptor() {
    return BalanceDetail_Kind_descriptor();
  }
  template <typename T>
  static inline const std::string& Kind_Name(T value) {
    return BalanceDetail_Kind_Name(value);
  }
  static inline bool Kind_Parse(absl::string_view name, Kind* value) {
    return BalanceDetail_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kBalanceFieldNumber = 1,
    kKindFieldNumber = 2,
  };
  // .wallet_api.v1.WalletBalance balance = 1;
  bool has_balance() const;
  void clear_balance() ;
  const ::wallet_api::v1::WalletBalance& balance() const;
  PROTOBUF_NODISCARD ::wallet_api::v1::WalletBalance* release_balance();
  ::wallet_api::v1::WalletBalance* mutable_balance();
  void set_allocated_balance(::wallet_api::v1::WalletBalance* value);
  void unsafe_arena_set_allocated_balance(::wallet_api::v1::WalletBalance* value);
  ::wallet_api::v1::WalletBalance* unsafe_arena_release_balance();

  private:
  const ::wallet_api::v1::WalletBalance& _internal_balance() const;
  ::wallet_api::v1::WalletBalance* _internal_mutable_balance();

  public:
  // .wallet_api.v1.BalanceDetail.Kind kind = 2;
  void clear_kind() ;
  ::wallet_api::v1::BalanceDetail_Kind kind() const;
  void set_kind(::wallet_api::v1::BalanceDetail_Kind value);

  private:
  ::wallet_api::v1::BalanceDetail_Kind _internal_kind() const;
  void _internal_set_kind(::wallet_api::v1::BalanceDetail_Kind value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.BalanceDetail)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BalanceDetail_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BalanceDetail& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::wallet_api::v1::WalletBalance* balance_;
    int kind_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListWalletBalanceDetailsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListWalletBalanceDetailsResponse) */ {
 public:
  inline ListWalletBalanceDetailsResponse() : ListWalletBalanceDetailsResponse(nullptr) {}
  ~ListWalletBalanceDetailsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWalletBalanceDetailsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWalletBalanceDetailsResponse(const ListWalletBalanceDetailsResponse& from) : ListWalletBalanceDetailsResponse(nullptr, from) {}
  inline ListWalletBalanceDetailsResponse(ListWalletBalanceDetailsResponse&& from) noexcept
      : ListWalletBalanceDetailsResponse(nullptr, std::move(from)) {}
  inline ListWalletBalanceDetailsResponse& operator=(const ListWalletBalanceDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWalletBalanceDetailsResponse& operator=(ListWalletBalanceDetailsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWalletBalanceDetailsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWalletBalanceDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const ListWalletBalanceDetailsResponse*>(
        &_ListWalletBalanceDetailsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(ListWalletBalanceDetailsResponse& a, ListWalletBalanceDetailsResponse& b) { a.Swap(&b); }
  inline void Swap(ListWalletBalanceDetailsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWalletBalanceDetailsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWalletBalanceDetailsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListWalletBalanceDetailsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWalletBalanceDetailsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWalletBalanceDetailsResponse& from) { ListWalletBalanceDetailsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListWalletBalanceDetailsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListWalletBalanceDetailsResponse"; }

 protected:
  explicit ListWalletBalanceDetailsResponse(::google::protobuf::Arena* arena);
  ListWalletBalanceDetailsResponse(::google::protobuf::Arena* arena, const ListWalletBalanceDetailsResponse& from);
  ListWalletBalanceDetailsResponse(::google::protobuf::Arena* arena, ListWalletBalanceDetailsResponse&& from) noexcept
      : ListWalletBalanceDetailsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBalancesFieldNumber = 1,
  };
  // repeated .wallet_api.v1.BalanceDetail balances = 1;
  int balances_size() const;
  private:
  int _internal_balances_size() const;

  public:
  void clear_balances() ;
  ::wallet_api::v1::BalanceDetail* mutable_balances(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>* mutable_balances();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>& _internal_balances() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>* _internal_mutable_balances();
  public:
  const ::wallet_api::v1::BalanceDetail& balances(int index) const;
  ::wallet_api::v1::BalanceDetail* add_balances();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>& balances() const;
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListWalletBalanceDetailsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListWalletBalanceDetailsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWalletBalanceDetailsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::BalanceDetail > balances_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class ListAssetFilesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.ListAssetFilesResponse) */ {
 public:
  inline ListAssetFilesResponse() : ListAssetFilesResponse(nullptr) {}
  ~ListAssetFilesResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAssetFilesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAssetFilesResponse(const ListAssetFilesResponse& from) : ListAssetFilesResponse(nullptr, from) {}
  inline ListAssetFilesResponse(ListAssetFilesResponse&& from) noexcept
      : ListAssetFilesResponse(nullptr, std::move(from)) {}
  inline ListAssetFilesResponse& operator=(const ListAssetFilesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAssetFilesResponse& operator=(ListAssetFilesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAssetFilesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAssetFilesResponse* internal_default_instance() {
    return reinterpret_cast<const ListAssetFilesResponse*>(
        &_ListAssetFilesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ListAssetFilesResponse& a, ListAssetFilesResponse& b) { a.Swap(&b); }
  inline void Swap(ListAssetFilesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAssetFilesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAssetFilesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListAssetFilesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAssetFilesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAssetFilesResponse& from) { ListAssetFilesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAssetFilesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.ListAssetFilesResponse"; }

 protected:
  explicit ListAssetFilesResponse(::google::protobuf::Arena* arena);
  ListAssetFilesResponse(::google::protobuf::Arena* arena, const ListAssetFilesResponse& from);
  ListAssetFilesResponse(::google::protobuf::Arena* arena, ListAssetFilesResponse&& from) noexcept
      : ListAssetFilesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Notary = ListAssetFilesResponse_Notary;
  using Promissory = ListAssetFilesResponse_Promissory;
  using Fund = ListAssetFilesResponse_Fund;

  // accessors -------------------------------------------------------
  enum : int {
    kFundsFieldNumber = 1,
    kTotalOwnedFundsFieldNumber = 2,
  };
  // repeated .wallet_api.v1.ListAssetFilesResponse.Fund funds = 1;
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::wallet_api::v1::ListAssetFilesResponse_Fund* mutable_funds(int index);
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>* mutable_funds();

  private:
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>& _internal_funds() const;
  ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>* _internal_mutable_funds();
  public:
  const ::wallet_api::v1::ListAssetFilesResponse_Fund& funds(int index) const;
  ::wallet_api::v1::ListAssetFilesResponse_Fund* add_funds();
  const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>& funds() const;
  // uint32 total_owned_funds = 2;
  void clear_total_owned_funds() ;
  ::uint32_t total_owned_funds() const;
  void set_total_owned_funds(::uint32_t value);

  private:
  ::uint32_t _internal_total_owned_funds() const;
  void _internal_set_total_owned_funds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.ListAssetFilesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAssetFilesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAssetFilesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::wallet_api::v1::ListAssetFilesResponse_Fund > funds_;
    ::uint32_t total_owned_funds_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};
// -------------------------------------------------------------------

class PrepareTransactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wallet_api.v1.PrepareTransactionRequest) */ {
 public:
  inline PrepareTransactionRequest() : PrepareTransactionRequest(nullptr) {}
  ~PrepareTransactionRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrepareTransactionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrepareTransactionRequest(const PrepareTransactionRequest& from) : PrepareTransactionRequest(nullptr, from) {}
  inline PrepareTransactionRequest(PrepareTransactionRequest&& from) noexcept
      : PrepareTransactionRequest(nullptr, std::move(from)) {}
  inline PrepareTransactionRequest& operator=(const PrepareTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrepareTransactionRequest& operator=(PrepareTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrepareTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrepareTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const PrepareTransactionRequest*>(
        &_PrepareTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(PrepareTransactionRequest& a, PrepareTransactionRequest& b) { a.Swap(&b); }
  inline void Swap(PrepareTransactionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrepareTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrepareTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PrepareTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrepareTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrepareTransactionRequest& from) { PrepareTransactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrepareTransactionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "wallet_api.v1.PrepareTransactionRequest"; }

 protected:
  explicit PrepareTransactionRequest(::google::protobuf::Arena* arena);
  PrepareTransactionRequest(::google::protobuf::Arena* arena, const PrepareTransactionRequest& from);
  PrepareTransactionRequest(::google::protobuf::Arena* arena, PrepareTransactionRequest&& from) noexcept
      : PrepareTransactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommitmentsFieldNumber = 3,
    kConditionsFieldNumber = 4,
    kApiKeyFieldNumber = 1,
    kWalletIdFieldNumber = 2,
    kMemoFieldNumber = 5,
  };
  // repeated .common.Commitment commitments = 3;
  int commitments_size() const;
  private:
  int _internal_commitments_size() const;

  public:
  void clear_commitments() ;
  ::common::Commitment* mutable_commitments(int index);
  ::google::protobuf::RepeatedPtrField<::common::Commitment>* mutable_commitments();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Commitment>& _internal_commitments() const;
  ::google::protobuf::RepeatedPtrField<::common::Commitment>* _internal_mutable_commitments();
  public:
  const ::common::Commitment& commitments(int index) const;
  ::common::Commitment* add_commitments();
  const ::google::protobuf::RepeatedPtrField<::common::Commitment>& commitments() const;
  // repeated .common.Condition conditions = 4;
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::common::Condition* mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::common::Condition>* mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Condition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::common::Condition>* _internal_mutable_conditions();
  public:
  const ::common::Condition& conditions(int index) const;
  ::common::Condition* add_conditions();
  const ::google::protobuf::RepeatedPtrField<::common::Condition>& conditions() const;
  // string api_key = 1;
  void clear_api_key() ;
  const std::string& api_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_key(Arg_&& arg, Args_... args);
  std::string* mutable_api_key();
  PROTOBUF_NODISCARD std::string* release_api_key();
  void set_allocated_api_key(std::string* value);

  private:
  const std::string& _internal_api_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_key(
      const std::string& value);
  std::string* _internal_mutable_api_key();

  public:
  // string wallet_id = 2;
  void clear_wallet_id() ;
  const std::string& wallet_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wallet_id(Arg_&& arg, Args_... args);
  std::string* mutable_wallet_id();
  PROTOBUF_NODISCARD std::string* release_wallet_id();
  void set_allocated_wallet_id(std::string* value);

  private:
  const std::string& _internal_wallet_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wallet_id(
      const std::string& value);
  std::string* _internal_mutable_wallet_id();

  public:
  // string memo = 5;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // @@protoc_insertion_point(class_scope:wallet_api.v1.PrepareTransactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      68, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PrepareTransactionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrepareTransactionRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::Commitment > commitments_;
    ::google::protobuf::RepeatedPtrField< ::common::Condition > conditions_;
    ::google::protobuf::internal::ArenaStringPtr api_key_;
    ::google::protobuf::internal::ArenaStringPtr wallet_id_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wallet_5fapi_2fv1_2fwallet_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateOwnerRequest

// string owner_name = 1;
inline void CreateOwnerRequest::clear_owner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.ClearToEmpty();
}
inline const std::string& CreateOwnerRequest::owner_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateOwnerRequest.owner_name)
  return _internal_owner_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateOwnerRequest::set_owner_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateOwnerRequest.owner_name)
}
inline std::string* CreateOwnerRequest::mutable_owner_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owner_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateOwnerRequest.owner_name)
  return _s;
}
inline const std::string& CreateOwnerRequest::_internal_owner_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owner_name_.Get();
}
inline void CreateOwnerRequest::_internal_set_owner_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.Set(value, GetArena());
}
inline std::string* CreateOwnerRequest::_internal_mutable_owner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.owner_name_.Mutable( GetArena());
}
inline std::string* CreateOwnerRequest::release_owner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateOwnerRequest.owner_name)
  return _impl_.owner_name_.Release();
}
inline void CreateOwnerRequest::set_allocated_owner_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.owner_name_.IsDefault()) {
          _impl_.owner_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateOwnerRequest.owner_name)
}

// -------------------------------------------------------------------

// CreateOwnerResponse

// string owner_id = 1;
inline void CreateOwnerResponse::clear_owner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_id_.ClearToEmpty();
}
inline const std::string& CreateOwnerResponse::owner_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateOwnerResponse.owner_id)
  return _internal_owner_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateOwnerResponse::set_owner_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateOwnerResponse.owner_id)
}
inline std::string* CreateOwnerResponse::mutable_owner_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owner_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateOwnerResponse.owner_id)
  return _s;
}
inline const std::string& CreateOwnerResponse::_internal_owner_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owner_id_.Get();
}
inline void CreateOwnerResponse::_internal_set_owner_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_id_.Set(value, GetArena());
}
inline std::string* CreateOwnerResponse::_internal_mutable_owner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.owner_id_.Mutable( GetArena());
}
inline std::string* CreateOwnerResponse::release_owner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateOwnerResponse.owner_id)
  return _impl_.owner_id_.Release();
}
inline void CreateOwnerResponse::set_allocated_owner_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.owner_id_.IsDefault()) {
          _impl_.owner_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateOwnerResponse.owner_id)
}

// string api_key = 2;
inline void CreateOwnerResponse::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& CreateOwnerResponse::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateOwnerResponse.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateOwnerResponse::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateOwnerResponse.api_key)
}
inline std::string* CreateOwnerResponse::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateOwnerResponse.api_key)
  return _s;
}
inline const std::string& CreateOwnerResponse::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void CreateOwnerResponse::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* CreateOwnerResponse::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* CreateOwnerResponse::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateOwnerResponse.api_key)
  return _impl_.api_key_.Release();
}
inline void CreateOwnerResponse::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateOwnerResponse.api_key)
}

// string owner_name = 3;
inline void CreateOwnerResponse::clear_owner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.ClearToEmpty();
}
inline const std::string& CreateOwnerResponse::owner_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateOwnerResponse.owner_name)
  return _internal_owner_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateOwnerResponse::set_owner_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateOwnerResponse.owner_name)
}
inline std::string* CreateOwnerResponse::mutable_owner_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owner_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateOwnerResponse.owner_name)
  return _s;
}
inline const std::string& CreateOwnerResponse::_internal_owner_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owner_name_.Get();
}
inline void CreateOwnerResponse::_internal_set_owner_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.Set(value, GetArena());
}
inline std::string* CreateOwnerResponse::_internal_mutable_owner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.owner_name_.Mutable( GetArena());
}
inline std::string* CreateOwnerResponse::release_owner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateOwnerResponse.owner_name)
  return _impl_.owner_name_.Release();
}
inline void CreateOwnerResponse::set_allocated_owner_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.owner_name_.IsDefault()) {
          _impl_.owner_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateOwnerResponse.owner_name)
}

// -------------------------------------------------------------------

// CreateWalletRequest

// string wallet_name = 1;
inline void CreateWalletRequest::clear_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.ClearToEmpty();
}
inline const std::string& CreateWalletRequest::wallet_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateWalletRequest.wallet_name)
  return _internal_wallet_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWalletRequest::set_wallet_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateWalletRequest.wallet_name)
}
inline std::string* CreateWalletRequest::mutable_wallet_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateWalletRequest.wallet_name)
  return _s;
}
inline const std::string& CreateWalletRequest::_internal_wallet_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_name_.Get();
}
inline void CreateWalletRequest::_internal_set_wallet_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(value, GetArena());
}
inline std::string* CreateWalletRequest::_internal_mutable_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_name_.Mutable( GetArena());
}
inline std::string* CreateWalletRequest::release_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateWalletRequest.wallet_name)
  return _impl_.wallet_name_.Release();
}
inline void CreateWalletRequest::set_allocated_wallet_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_name_.IsDefault()) {
          _impl_.wallet_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateWalletRequest.wallet_name)
}

// string api_key = 2;
inline void CreateWalletRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& CreateWalletRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateWalletRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWalletRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateWalletRequest.api_key)
}
inline std::string* CreateWalletRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateWalletRequest.api_key)
  return _s;
}
inline const std::string& CreateWalletRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void CreateWalletRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* CreateWalletRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* CreateWalletRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateWalletRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void CreateWalletRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateWalletRequest.api_key)
}

// -------------------------------------------------------------------

// CreateWalletResponse

// string wallet_id = 1;
inline void CreateWalletResponse::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& CreateWalletResponse::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateWalletResponse.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWalletResponse::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateWalletResponse.wallet_id)
}
inline std::string* CreateWalletResponse::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateWalletResponse.wallet_id)
  return _s;
}
inline const std::string& CreateWalletResponse::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void CreateWalletResponse::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* CreateWalletResponse::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* CreateWalletResponse::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateWalletResponse.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void CreateWalletResponse::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateWalletResponse.wallet_id)
}

// string wallet_name = 2;
inline void CreateWalletResponse::clear_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.ClearToEmpty();
}
inline const std::string& CreateWalletResponse::wallet_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateWalletResponse.wallet_name)
  return _internal_wallet_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWalletResponse::set_wallet_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateWalletResponse.wallet_name)
}
inline std::string* CreateWalletResponse::mutable_wallet_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateWalletResponse.wallet_name)
  return _s;
}
inline const std::string& CreateWalletResponse::_internal_wallet_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_name_.Get();
}
inline void CreateWalletResponse::_internal_set_wallet_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(value, GetArena());
}
inline std::string* CreateWalletResponse::_internal_mutable_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_name_.Mutable( GetArena());
}
inline std::string* CreateWalletResponse::release_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateWalletResponse.wallet_name)
  return _impl_.wallet_name_.Release();
}
inline void CreateWalletResponse::set_allocated_wallet_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_name_.IsDefault()) {
          _impl_.wallet_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateWalletResponse.wallet_name)
}

// string public_key = 3;
inline void CreateWalletResponse::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& CreateWalletResponse::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateWalletResponse.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWalletResponse::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateWalletResponse.public_key)
}
inline std::string* CreateWalletResponse::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateWalletResponse.public_key)
  return _s;
}
inline const std::string& CreateWalletResponse::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void CreateWalletResponse::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* CreateWalletResponse::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* CreateWalletResponse::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateWalletResponse.public_key)
  return _impl_.public_key_.Release();
}
inline void CreateWalletResponse::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateWalletResponse.public_key)
}

// string did = 4;
inline void CreateWalletResponse::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& CreateWalletResponse::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateWalletResponse.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWalletResponse::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateWalletResponse.did)
}
inline std::string* CreateWalletResponse::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateWalletResponse.did)
  return _s;
}
inline const std::string& CreateWalletResponse::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void CreateWalletResponse::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* CreateWalletResponse::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* CreateWalletResponse::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateWalletResponse.did)
  return _impl_.did_.Release();
}
inline void CreateWalletResponse::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateWalletResponse.did)
}

// -------------------------------------------------------------------

// ListWalletsRequest

// int32 page = 1;
inline void ListWalletsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListWalletsRequest::page() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsRequest.page)
  return _internal_page();
}
inline void ListWalletsRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsRequest.page)
}
inline ::int32_t ListWalletsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListWalletsRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 2;
inline void ListWalletsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListWalletsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsRequest.page_size)
  return _internal_page_size();
}
inline void ListWalletsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsRequest.page_size)
}
inline ::int32_t ListWalletsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListWalletsRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string api_key = 3;
inline void ListWalletsRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ListWalletsRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletsRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsRequest.api_key)
}
inline std::string* ListWalletsRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsRequest.api_key)
  return _s;
}
inline const std::string& ListWalletsRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ListWalletsRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ListWalletsRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ListWalletsRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ListWalletsRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsRequest.api_key)
}

// .common.Filter filters = 4;
inline bool ListWalletsRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::common::Filter& ListWalletsRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Filter* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Filter&>(::common::_Filter_default_instance_);
}
inline const ::common::Filter& ListWalletsRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsRequest.filters)
  return _internal_filters();
}
inline void ListWalletsRequest::unsafe_arena_set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListWalletsRequest.filters)
}
inline ::common::Filter* ListWalletsRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Filter* ListWalletsRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::common::Filter* ListWalletsRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Filter>(GetArena());
    _impl_.filters_ = reinterpret_cast<::common::Filter*>(p);
  }
  return _impl_.filters_;
}
inline ::common::Filter* ListWalletsRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Filter* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsRequest.filters)
  return _msg;
}
inline void ListWalletsRequest::set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsRequest.filters)
}

// .common.SortBy sort_by = 5;
inline bool ListWalletsRequest::has_sort_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sort_by_ != nullptr);
  return value;
}
inline const ::common::SortBy& ListWalletsRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::SortBy* p = _impl_.sort_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::SortBy&>(::common::_SortBy_default_instance_);
}
inline const ::common::SortBy& ListWalletsRequest::sort_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsRequest.sort_by)
  return _internal_sort_by();
}
inline void ListWalletsRequest::unsafe_arena_set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }
  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListWalletsRequest.sort_by)
}
inline ::common::SortBy* ListWalletsRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* released = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::SortBy* ListWalletsRequest::unsafe_arena_release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsRequest.sort_by)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* temp = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
  return temp;
}
inline ::common::SortBy* ListWalletsRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sort_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::SortBy>(GetArena());
    _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(p);
  }
  return _impl_.sort_by_;
}
inline ::common::SortBy* ListWalletsRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::SortBy* _msg = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsRequest.sort_by)
  return _msg;
}
inline void ListWalletsRequest::set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsRequest.sort_by)
}

// -------------------------------------------------------------------

// ListWalletsResponse_Wallet

// string wallet_name = 1;
inline void ListWalletsResponse_Wallet::clear_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.ClearToEmpty();
}
inline const std::string& ListWalletsResponse_Wallet::wallet_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsResponse.Wallet.wallet_name)
  return _internal_wallet_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletsResponse_Wallet::set_wallet_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsResponse.Wallet.wallet_name)
}
inline std::string* ListWalletsResponse_Wallet::mutable_wallet_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsResponse.Wallet.wallet_name)
  return _s;
}
inline const std::string& ListWalletsResponse_Wallet::_internal_wallet_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_name_.Get();
}
inline void ListWalletsResponse_Wallet::_internal_set_wallet_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(value, GetArena());
}
inline std::string* ListWalletsResponse_Wallet::_internal_mutable_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_name_.Mutable( GetArena());
}
inline std::string* ListWalletsResponse_Wallet::release_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsResponse.Wallet.wallet_name)
  return _impl_.wallet_name_.Release();
}
inline void ListWalletsResponse_Wallet::set_allocated_wallet_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_name_.IsDefault()) {
          _impl_.wallet_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsResponse.Wallet.wallet_name)
}

// string wallet_id = 2;
inline void ListWalletsResponse_Wallet::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListWalletsResponse_Wallet::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsResponse.Wallet.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletsResponse_Wallet::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsResponse.Wallet.wallet_id)
}
inline std::string* ListWalletsResponse_Wallet::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsResponse.Wallet.wallet_id)
  return _s;
}
inline const std::string& ListWalletsResponse_Wallet::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListWalletsResponse_Wallet::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListWalletsResponse_Wallet::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListWalletsResponse_Wallet::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsResponse.Wallet.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListWalletsResponse_Wallet::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsResponse.Wallet.wallet_id)
}

// string public_key = 3;
inline void ListWalletsResponse_Wallet::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& ListWalletsResponse_Wallet::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsResponse.Wallet.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletsResponse_Wallet::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsResponse.Wallet.public_key)
}
inline std::string* ListWalletsResponse_Wallet::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsResponse.Wallet.public_key)
  return _s;
}
inline const std::string& ListWalletsResponse_Wallet::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void ListWalletsResponse_Wallet::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* ListWalletsResponse_Wallet::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* ListWalletsResponse_Wallet::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsResponse.Wallet.public_key)
  return _impl_.public_key_.Release();
}
inline void ListWalletsResponse_Wallet::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsResponse.Wallet.public_key)
}

// string did = 4;
inline void ListWalletsResponse_Wallet::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& ListWalletsResponse_Wallet::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsResponse.Wallet.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletsResponse_Wallet::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsResponse.Wallet.did)
}
inline std::string* ListWalletsResponse_Wallet::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsResponse.Wallet.did)
  return _s;
}
inline const std::string& ListWalletsResponse_Wallet::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void ListWalletsResponse_Wallet::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* ListWalletsResponse_Wallet::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* ListWalletsResponse_Wallet::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletsResponse.Wallet.did)
  return _impl_.did_.Release();
}
inline void ListWalletsResponse_Wallet::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletsResponse.Wallet.did)
}

// -------------------------------------------------------------------

// ListWalletsResponse

// repeated .wallet_api.v1.ListWalletsResponse.Wallet wallets = 1;
inline int ListWalletsResponse::_internal_wallets_size() const {
  return _internal_wallets().size();
}
inline int ListWalletsResponse::wallets_size() const {
  return _internal_wallets_size();
}
inline void ListWalletsResponse::clear_wallets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallets_.Clear();
}
inline ::wallet_api::v1::ListWalletsResponse_Wallet* ListWalletsResponse::mutable_wallets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletsResponse.wallets)
  return _internal_mutable_wallets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>* ListWalletsResponse::mutable_wallets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListWalletsResponse.wallets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_wallets();
}
inline const ::wallet_api::v1::ListWalletsResponse_Wallet& ListWalletsResponse::wallets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsResponse.wallets)
  return _internal_wallets().Get(index);
}
inline ::wallet_api::v1::ListWalletsResponse_Wallet* ListWalletsResponse::add_wallets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::ListWalletsResponse_Wallet* _add = _internal_mutable_wallets()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListWalletsResponse.wallets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>& ListWalletsResponse::wallets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListWalletsResponse.wallets)
  return _internal_wallets();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>&
ListWalletsResponse::_internal_wallets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallets_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListWalletsResponse_Wallet>*
ListWalletsResponse::_internal_mutable_wallets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.wallets_;
}

// uint32 total_owned_wallets = 2;
inline void ListWalletsResponse::clear_total_owned_wallets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_owned_wallets_ = 0u;
}
inline ::uint32_t ListWalletsResponse::total_owned_wallets() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletsResponse.total_owned_wallets)
  return _internal_total_owned_wallets();
}
inline void ListWalletsResponse::set_total_owned_wallets(::uint32_t value) {
  _internal_set_total_owned_wallets(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletsResponse.total_owned_wallets)
}
inline ::uint32_t ListWalletsResponse::_internal_total_owned_wallets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_owned_wallets_;
}
inline void ListWalletsResponse::_internal_set_total_owned_wallets(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_owned_wallets_ = value;
}

// -------------------------------------------------------------------

// ListWalletBalancesRequest

// string wallet_id = 1;
inline void ListWalletBalancesRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListWalletBalancesRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalancesRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletBalancesRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletBalancesRequest.wallet_id)
}
inline std::string* ListWalletBalancesRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalancesRequest.wallet_id)
  return _s;
}
inline const std::string& ListWalletBalancesRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListWalletBalancesRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListWalletBalancesRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListWalletBalancesRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletBalancesRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListWalletBalancesRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletBalancesRequest.wallet_id)
}

// string api_key = 2;
inline void ListWalletBalancesRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ListWalletBalancesRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalancesRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletBalancesRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletBalancesRequest.api_key)
}
inline std::string* ListWalletBalancesRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalancesRequest.api_key)
  return _s;
}
inline const std::string& ListWalletBalancesRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ListWalletBalancesRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ListWalletBalancesRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ListWalletBalancesRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletBalancesRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ListWalletBalancesRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletBalancesRequest.api_key)
}

// .common.SortBy sort_by = 3;
inline bool ListWalletBalancesRequest::has_sort_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sort_by_ != nullptr);
  return value;
}
inline const ::common::SortBy& ListWalletBalancesRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::SortBy* p = _impl_.sort_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::SortBy&>(::common::_SortBy_default_instance_);
}
inline const ::common::SortBy& ListWalletBalancesRequest::sort_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalancesRequest.sort_by)
  return _internal_sort_by();
}
inline void ListWalletBalancesRequest::unsafe_arena_set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }
  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListWalletBalancesRequest.sort_by)
}
inline ::common::SortBy* ListWalletBalancesRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::SortBy* released = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::SortBy* ListWalletBalancesRequest::unsafe_arena_release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletBalancesRequest.sort_by)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::SortBy* temp = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
  return temp;
}
inline ::common::SortBy* ListWalletBalancesRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sort_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::SortBy>(GetArena());
    _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(p);
  }
  return _impl_.sort_by_;
}
inline ::common::SortBy* ListWalletBalancesRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::SortBy* _msg = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalancesRequest.sort_by)
  return _msg;
}
inline void ListWalletBalancesRequest::set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletBalancesRequest.sort_by)
}

// -------------------------------------------------------------------

// WalletBalance

// .common.Amount amount = 1;
inline bool WalletBalance::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::common::Amount& WalletBalance::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& WalletBalance::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.WalletBalance.amount)
  return _internal_amount();
}
inline void WalletBalance::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.WalletBalance.amount)
}
inline ::common::Amount* WalletBalance::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* WalletBalance::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.WalletBalance.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* WalletBalance::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* WalletBalance::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.WalletBalance.amount)
  return _msg;
}
inline void WalletBalance::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.WalletBalance.amount)
}

// int64 file_count = 2;
inline void WalletBalance::clear_file_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_count_ = ::int64_t{0};
}
inline ::int64_t WalletBalance::file_count() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.WalletBalance.file_count)
  return _internal_file_count();
}
inline void WalletBalance::set_file_count(::int64_t value) {
  _internal_set_file_count(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.WalletBalance.file_count)
}
inline ::int64_t WalletBalance::_internal_file_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_count_;
}
inline void WalletBalance::_internal_set_file_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_count_ = value;
}

// -------------------------------------------------------------------

// ListWalletBalancesResponse

// repeated .wallet_api.v1.WalletBalance balances = 1;
inline int ListWalletBalancesResponse::_internal_balances_size() const {
  return _internal_balances().size();
}
inline int ListWalletBalancesResponse::balances_size() const {
  return _internal_balances_size();
}
inline void ListWalletBalancesResponse::clear_balances() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balances_.Clear();
}
inline ::wallet_api::v1::WalletBalance* ListWalletBalancesResponse::mutable_balances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalancesResponse.balances)
  return _internal_mutable_balances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>* ListWalletBalancesResponse::mutable_balances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListWalletBalancesResponse.balances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_balances();
}
inline const ::wallet_api::v1::WalletBalance& ListWalletBalancesResponse::balances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalancesResponse.balances)
  return _internal_balances().Get(index);
}
inline ::wallet_api::v1::WalletBalance* ListWalletBalancesResponse::add_balances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::WalletBalance* _add = _internal_mutable_balances()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListWalletBalancesResponse.balances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>& ListWalletBalancesResponse::balances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListWalletBalancesResponse.balances)
  return _internal_balances();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>&
ListWalletBalancesResponse::_internal_balances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balances_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::WalletBalance>*
ListWalletBalancesResponse::_internal_mutable_balances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.balances_;
}

// -------------------------------------------------------------------

// ListAssetFilesRequest

// int32 page = 1;
inline void ListAssetFilesRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListAssetFilesRequest::page() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesRequest.page)
  return _internal_page();
}
inline void ListAssetFilesRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesRequest.page)
}
inline ::int32_t ListAssetFilesRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListAssetFilesRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 2;
inline void ListAssetFilesRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListAssetFilesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesRequest.page_size)
  return _internal_page_size();
}
inline void ListAssetFilesRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesRequest.page_size)
}
inline ::int32_t ListAssetFilesRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListAssetFilesRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string wallet_id = 3;
inline void ListAssetFilesRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListAssetFilesRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesRequest.wallet_id)
}
inline std::string* ListAssetFilesRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesRequest.wallet_id)
  return _s;
}
inline const std::string& ListAssetFilesRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListAssetFilesRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListAssetFilesRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListAssetFilesRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListAssetFilesRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesRequest.wallet_id)
}

// string api_key = 4;
inline void ListAssetFilesRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ListAssetFilesRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesRequest.api_key)
}
inline std::string* ListAssetFilesRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesRequest.api_key)
  return _s;
}
inline const std::string& ListAssetFilesRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ListAssetFilesRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ListAssetFilesRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ListAssetFilesRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ListAssetFilesRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesRequest.api_key)
}

// .common.Filter filters = 5;
inline bool ListAssetFilesRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::common::Filter& ListAssetFilesRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Filter* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Filter&>(::common::_Filter_default_instance_);
}
inline const ::common::Filter& ListAssetFilesRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesRequest.filters)
  return _internal_filters();
}
inline void ListAssetFilesRequest::unsafe_arena_set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListAssetFilesRequest.filters)
}
inline ::common::Filter* ListAssetFilesRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Filter* ListAssetFilesRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::common::Filter* ListAssetFilesRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Filter>(GetArena());
    _impl_.filters_ = reinterpret_cast<::common::Filter*>(p);
  }
  return _impl_.filters_;
}
inline ::common::Filter* ListAssetFilesRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Filter* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesRequest.filters)
  return _msg;
}
inline void ListAssetFilesRequest::set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesRequest.filters)
}

// .common.SortBy sort_by = 6;
inline bool ListAssetFilesRequest::has_sort_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sort_by_ != nullptr);
  return value;
}
inline const ::common::SortBy& ListAssetFilesRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::SortBy* p = _impl_.sort_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::SortBy&>(::common::_SortBy_default_instance_);
}
inline const ::common::SortBy& ListAssetFilesRequest::sort_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesRequest.sort_by)
  return _internal_sort_by();
}
inline void ListAssetFilesRequest::unsafe_arena_set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }
  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListAssetFilesRequest.sort_by)
}
inline ::common::SortBy* ListAssetFilesRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* released = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::SortBy* ListAssetFilesRequest::unsafe_arena_release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesRequest.sort_by)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* temp = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
  return temp;
}
inline ::common::SortBy* ListAssetFilesRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sort_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::SortBy>(GetArena());
    _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(p);
  }
  return _impl_.sort_by_;
}
inline ::common::SortBy* ListAssetFilesRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::SortBy* _msg = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesRequest.sort_by)
  return _msg;
}
inline void ListAssetFilesRequest::set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesRequest.sort_by)
}

// -------------------------------------------------------------------

// ListAssetFilesResponse_Notary

// string did = 1;
inline void ListAssetFilesResponse_Notary::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Notary::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Notary.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Notary::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Notary.did)
}
inline std::string* ListAssetFilesResponse_Notary::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Notary.did)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Notary::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void ListAssetFilesResponse_Notary::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Notary::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Notary::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Notary.did)
  return _impl_.did_.Release();
}
inline void ListAssetFilesResponse_Notary::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Notary.did)
}

// bytes signature = 2;
inline void ListAssetFilesResponse_Notary::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Notary::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Notary.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Notary::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Notary.signature)
}
inline std::string* ListAssetFilesResponse_Notary::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Notary.signature)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Notary::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void ListAssetFilesResponse_Notary::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Notary::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Notary::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Notary.signature)
  return _impl_.signature_.Release();
}
inline void ListAssetFilesResponse_Notary::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Notary.signature)
}

// -------------------------------------------------------------------

// ListAssetFilesResponse_Promissory

// string version = 1;
inline void ListAssetFilesResponse_Promissory::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.version)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.version)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.version)
  return _impl_.version_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.version)
}

// string id = 3;
inline void ListAssetFilesResponse_Promissory::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.id)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.id)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.id)
  return _impl_.id_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.id)
}

// string currency = 4;
inline void ListAssetFilesResponse_Promissory::clear_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::currency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.currency)
  return _internal_currency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_currency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.currency)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_currency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.currency)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_currency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_currency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.currency)
  return _impl_.currency_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_currency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_.IsDefault()) {
          _impl_.currency_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.currency)
}

// int64 amount = 5;
inline void ListAssetFilesResponse_Promissory::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t ListAssetFilesResponse_Promissory::amount() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.amount)
  return _internal_amount();
}
inline void ListAssetFilesResponse_Promissory::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.amount)
}
inline ::int64_t ListAssetFilesResponse_Promissory::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void ListAssetFilesResponse_Promissory::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// uint32 decimals = 6;
inline void ListAssetFilesResponse_Promissory::clear_decimals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decimals_ = 0u;
}
inline ::uint32_t ListAssetFilesResponse_Promissory::decimals() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.decimals)
  return _internal_decimals();
}
inline void ListAssetFilesResponse_Promissory::set_decimals(::uint32_t value) {
  _internal_set_decimals(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.decimals)
}
inline ::uint32_t ListAssetFilesResponse_Promissory::_internal_decimals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decimals_;
}
inline void ListAssetFilesResponse_Promissory::_internal_set_decimals(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decimals_ = value;
}

// string authority = 7;
inline void ListAssetFilesResponse_Promissory::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.authority)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.authority)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.authority)
  return _impl_.authority_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.authority)
}

// string issuer = 8;
inline void ListAssetFilesResponse_Promissory::clear_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::issuer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.issuer)
  return _internal_issuer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_issuer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.issuer)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_issuer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.issuer)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_issuer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_issuer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_issuer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.issuer)
  return _impl_.issuer_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_issuer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_.IsDefault()) {
          _impl_.issuer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.issuer)
}

// string issuance_date = 9;
inline void ListAssetFilesResponse_Promissory::clear_issuance_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuance_date_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::issuance_date() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.issuance_date)
  return _internal_issuance_date();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_issuance_date(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuance_date_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.issuance_date)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_issuance_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuance_date();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.issuance_date)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_issuance_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuance_date_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_issuance_date(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuance_date_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_issuance_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuance_date_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_issuance_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.issuance_date)
  return _impl_.issuance_date_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_issuance_date(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuance_date_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuance_date_.IsDefault()) {
          _impl_.issuance_date_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.issuance_date)
}

// uint32 block_depth = 10;
inline void ListAssetFilesResponse_Promissory::clear_block_depth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_depth_ = 0u;
}
inline ::uint32_t ListAssetFilesResponse_Promissory::block_depth() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.block_depth)
  return _internal_block_depth();
}
inline void ListAssetFilesResponse_Promissory::set_block_depth(::uint32_t value) {
  _internal_set_block_depth(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.block_depth)
}
inline ::uint32_t ListAssetFilesResponse_Promissory::_internal_block_depth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_depth_;
}
inline void ListAssetFilesResponse_Promissory::_internal_set_block_depth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_depth_ = value;
}

// bytes authorization_signature = 11;
inline void ListAssetFilesResponse_Promissory::clear_authorization_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authorization_signature_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::authorization_signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.authorization_signature)
  return _internal_authorization_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_authorization_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authorization_signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.authorization_signature)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_authorization_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authorization_signature();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.authorization_signature)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_authorization_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authorization_signature_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_authorization_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authorization_signature_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_authorization_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authorization_signature_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_authorization_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.authorization_signature)
  return _impl_.authorization_signature_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_authorization_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authorization_signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authorization_signature_.IsDefault()) {
          _impl_.authorization_signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.authorization_signature)
}

// bytes transfer_signature = 12;
inline void ListAssetFilesResponse_Promissory::clear_transfer_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_signature_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Promissory::transfer_signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.transfer_signature)
  return _internal_transfer_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Promissory::set_transfer_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Promissory.transfer_signature)
}
inline std::string* ListAssetFilesResponse_Promissory::mutable_transfer_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_signature();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.transfer_signature)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Promissory::_internal_transfer_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_signature_.Get();
}
inline void ListAssetFilesResponse_Promissory::_internal_set_transfer_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_signature_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::_internal_mutable_transfer_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_signature_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Promissory::release_transfer_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Promissory.transfer_signature)
  return _impl_.transfer_signature_.Release();
}
inline void ListAssetFilesResponse_Promissory::set_allocated_transfer_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transfer_signature_.IsDefault()) {
          _impl_.transfer_signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Promissory.transfer_signature)
}

// repeated .wallet_api.v1.ListAssetFilesResponse.Notary notaries = 13;
inline int ListAssetFilesResponse_Promissory::_internal_notaries_size() const {
  return _internal_notaries().size();
}
inline int ListAssetFilesResponse_Promissory::notaries_size() const {
  return _internal_notaries_size();
}
inline void ListAssetFilesResponse_Promissory::clear_notaries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notaries_.Clear();
}
inline ::wallet_api::v1::ListAssetFilesResponse_Notary* ListAssetFilesResponse_Promissory::mutable_notaries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Promissory.notaries)
  return _internal_mutable_notaries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>* ListAssetFilesResponse_Promissory::mutable_notaries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListAssetFilesResponse.Promissory.notaries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notaries();
}
inline const ::wallet_api::v1::ListAssetFilesResponse_Notary& ListAssetFilesResponse_Promissory::notaries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Promissory.notaries)
  return _internal_notaries().Get(index);
}
inline ::wallet_api::v1::ListAssetFilesResponse_Notary* ListAssetFilesResponse_Promissory::add_notaries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::ListAssetFilesResponse_Notary* _add = _internal_mutable_notaries()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListAssetFilesResponse.Promissory.notaries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>& ListAssetFilesResponse_Promissory::notaries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListAssetFilesResponse.Promissory.notaries)
  return _internal_notaries();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>&
ListAssetFilesResponse_Promissory::_internal_notaries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notaries_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Notary>*
ListAssetFilesResponse_Promissory::_internal_mutable_notaries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notaries_;
}

// -------------------------------------------------------------------

// ListAssetFilesResponse_Fund

// string wallet_id = 1;
inline void ListAssetFilesResponse_Fund::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListAssetFilesResponse_Fund::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Fund.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAssetFilesResponse_Fund::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Fund.wallet_id)
}
inline std::string* ListAssetFilesResponse_Fund::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Fund.wallet_id)
  return _s;
}
inline const std::string& ListAssetFilesResponse_Fund::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListAssetFilesResponse_Fund::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListAssetFilesResponse_Fund::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListAssetFilesResponse_Fund::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Fund.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListAssetFilesResponse_Fund::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Fund.wallet_id)
}

// .wallet_api.v1.ListAssetFilesResponse.Promissory promissory = 2;
inline bool ListAssetFilesResponse_Fund::has_promissory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.promissory_ != nullptr);
  return value;
}
inline void ListAssetFilesResponse_Fund::clear_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.promissory_ != nullptr) _impl_.promissory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::wallet_api::v1::ListAssetFilesResponse_Promissory& ListAssetFilesResponse_Fund::_internal_promissory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::wallet_api::v1::ListAssetFilesResponse_Promissory* p = _impl_.promissory_;
  return p != nullptr ? *p : reinterpret_cast<const ::wallet_api::v1::ListAssetFilesResponse_Promissory&>(::wallet_api::v1::_ListAssetFilesResponse_Promissory_default_instance_);
}
inline const ::wallet_api::v1::ListAssetFilesResponse_Promissory& ListAssetFilesResponse_Fund::promissory() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Fund.promissory)
  return _internal_promissory();
}
inline void ListAssetFilesResponse_Fund::unsafe_arena_set_allocated_promissory(::wallet_api::v1::ListAssetFilesResponse_Promissory* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.promissory_);
  }
  _impl_.promissory_ = reinterpret_cast<::wallet_api::v1::ListAssetFilesResponse_Promissory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListAssetFilesResponse.Fund.promissory)
}
inline ::wallet_api::v1::ListAssetFilesResponse_Promissory* ListAssetFilesResponse_Fund::release_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::wallet_api::v1::ListAssetFilesResponse_Promissory* released = _impl_.promissory_;
  _impl_.promissory_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::wallet_api::v1::ListAssetFilesResponse_Promissory* ListAssetFilesResponse_Fund::unsafe_arena_release_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListAssetFilesResponse.Fund.promissory)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::wallet_api::v1::ListAssetFilesResponse_Promissory* temp = _impl_.promissory_;
  _impl_.promissory_ = nullptr;
  return temp;
}
inline ::wallet_api::v1::ListAssetFilesResponse_Promissory* ListAssetFilesResponse_Fund::_internal_mutable_promissory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.promissory_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::wallet_api::v1::ListAssetFilesResponse_Promissory>(GetArena());
    _impl_.promissory_ = reinterpret_cast<::wallet_api::v1::ListAssetFilesResponse_Promissory*>(p);
  }
  return _impl_.promissory_;
}
inline ::wallet_api::v1::ListAssetFilesResponse_Promissory* ListAssetFilesResponse_Fund::mutable_promissory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::wallet_api::v1::ListAssetFilesResponse_Promissory* _msg = _internal_mutable_promissory();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.Fund.promissory)
  return _msg;
}
inline void ListAssetFilesResponse_Fund::set_allocated_promissory(::wallet_api::v1::ListAssetFilesResponse_Promissory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.promissory_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.promissory_ = reinterpret_cast<::wallet_api::v1::ListAssetFilesResponse_Promissory*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListAssetFilesResponse.Fund.promissory)
}

// bool reserved = 3;
inline void ListAssetFilesResponse_Fund::clear_reserved() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserved_ = false;
}
inline bool ListAssetFilesResponse_Fund::reserved() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.Fund.reserved)
  return _internal_reserved();
}
inline void ListAssetFilesResponse_Fund::set_reserved(bool value) {
  _internal_set_reserved(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.Fund.reserved)
}
inline bool ListAssetFilesResponse_Fund::_internal_reserved() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reserved_;
}
inline void ListAssetFilesResponse_Fund::_internal_set_reserved(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserved_ = value;
}

// -------------------------------------------------------------------

// ListAssetFilesResponse

// repeated .wallet_api.v1.ListAssetFilesResponse.Fund funds = 1;
inline int ListAssetFilesResponse::_internal_funds_size() const {
  return _internal_funds().size();
}
inline int ListAssetFilesResponse::funds_size() const {
  return _internal_funds_size();
}
inline void ListAssetFilesResponse::clear_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funds_.Clear();
}
inline ::wallet_api::v1::ListAssetFilesResponse_Fund* ListAssetFilesResponse::mutable_funds(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListAssetFilesResponse.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>* ListAssetFilesResponse::mutable_funds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListAssetFilesResponse.funds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funds();
}
inline const ::wallet_api::v1::ListAssetFilesResponse_Fund& ListAssetFilesResponse::funds(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.funds)
  return _internal_funds().Get(index);
}
inline ::wallet_api::v1::ListAssetFilesResponse_Fund* ListAssetFilesResponse::add_funds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::ListAssetFilesResponse_Fund* _add = _internal_mutable_funds()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListAssetFilesResponse.funds)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>& ListAssetFilesResponse::funds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListAssetFilesResponse.funds)
  return _internal_funds();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>&
ListAssetFilesResponse::_internal_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funds_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ListAssetFilesResponse_Fund>*
ListAssetFilesResponse::_internal_mutable_funds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funds_;
}

// uint32 total_owned_funds = 2;
inline void ListAssetFilesResponse::clear_total_owned_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_owned_funds_ = 0u;
}
inline ::uint32_t ListAssetFilesResponse::total_owned_funds() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListAssetFilesResponse.total_owned_funds)
  return _internal_total_owned_funds();
}
inline void ListAssetFilesResponse::set_total_owned_funds(::uint32_t value) {
  _internal_set_total_owned_funds(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListAssetFilesResponse.total_owned_funds)
}
inline ::uint32_t ListAssetFilesResponse::_internal_total_owned_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_owned_funds_;
}
inline void ListAssetFilesResponse::_internal_set_total_owned_funds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_owned_funds_ = value;
}

// -------------------------------------------------------------------

// ListCredentialsRequest

// int32 page = 1;
inline void ListCredentialsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListCredentialsRequest::page() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsRequest.page)
  return _internal_page();
}
inline void ListCredentialsRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsRequest.page)
}
inline ::int32_t ListCredentialsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListCredentialsRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 2;
inline void ListCredentialsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListCredentialsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsRequest.page_size)
  return _internal_page_size();
}
inline void ListCredentialsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsRequest.page_size)
}
inline ::int32_t ListCredentialsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListCredentialsRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string wallet_id = 3;
inline void ListCredentialsRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListCredentialsRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListCredentialsRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsRequest.wallet_id)
}
inline std::string* ListCredentialsRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListCredentialsRequest.wallet_id)
  return _s;
}
inline const std::string& ListCredentialsRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListCredentialsRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListCredentialsRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListCredentialsRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListCredentialsRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListCredentialsRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListCredentialsRequest.wallet_id)
}

// string api_key = 4;
inline void ListCredentialsRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ListCredentialsRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListCredentialsRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsRequest.api_key)
}
inline std::string* ListCredentialsRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListCredentialsRequest.api_key)
  return _s;
}
inline const std::string& ListCredentialsRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ListCredentialsRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ListCredentialsRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ListCredentialsRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListCredentialsRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ListCredentialsRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListCredentialsRequest.api_key)
}

// .common.Filter filters = 5;
inline bool ListCredentialsRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::common::Filter& ListCredentialsRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Filter* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Filter&>(::common::_Filter_default_instance_);
}
inline const ::common::Filter& ListCredentialsRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsRequest.filters)
  return _internal_filters();
}
inline void ListCredentialsRequest::unsafe_arena_set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListCredentialsRequest.filters)
}
inline ::common::Filter* ListCredentialsRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Filter* ListCredentialsRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListCredentialsRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::common::Filter* ListCredentialsRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Filter>(GetArena());
    _impl_.filters_ = reinterpret_cast<::common::Filter*>(p);
  }
  return _impl_.filters_;
}
inline ::common::Filter* ListCredentialsRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Filter* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListCredentialsRequest.filters)
  return _msg;
}
inline void ListCredentialsRequest::set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListCredentialsRequest.filters)
}

// .common.SortBy sort_by = 6;
inline bool ListCredentialsRequest::has_sort_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sort_by_ != nullptr);
  return value;
}
inline const ::common::SortBy& ListCredentialsRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::SortBy* p = _impl_.sort_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::SortBy&>(::common::_SortBy_default_instance_);
}
inline const ::common::SortBy& ListCredentialsRequest::sort_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsRequest.sort_by)
  return _internal_sort_by();
}
inline void ListCredentialsRequest::unsafe_arena_set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }
  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListCredentialsRequest.sort_by)
}
inline ::common::SortBy* ListCredentialsRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* released = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::SortBy* ListCredentialsRequest::unsafe_arena_release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListCredentialsRequest.sort_by)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* temp = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
  return temp;
}
inline ::common::SortBy* ListCredentialsRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sort_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::SortBy>(GetArena());
    _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(p);
  }
  return _impl_.sort_by_;
}
inline ::common::SortBy* ListCredentialsRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::SortBy* _msg = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListCredentialsRequest.sort_by)
  return _msg;
}
inline void ListCredentialsRequest::set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListCredentialsRequest.sort_by)
}

// -------------------------------------------------------------------

// ListCredentialsResponse

// repeated string credentials = 1;
inline int ListCredentialsResponse::_internal_credentials_size() const {
  return _internal_credentials().size();
}
inline int ListCredentialsResponse::credentials_size() const {
  return _internal_credentials_size();
}
inline void ListCredentialsResponse::clear_credentials() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credentials_.Clear();
}
inline std::string* ListCredentialsResponse::add_credentials()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_credentials()->Add();
  // @@protoc_insertion_point(field_add_mutable:wallet_api.v1.ListCredentialsResponse.credentials)
  return _s;
}
inline const std::string& ListCredentialsResponse::credentials(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsResponse.credentials)
  return _internal_credentials().Get(index);
}
inline std::string* ListCredentialsResponse::mutable_credentials(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListCredentialsResponse.credentials)
  return _internal_mutable_credentials()->Mutable(index);
}
inline void ListCredentialsResponse::set_credentials(int index, const std::string& value) {
  _internal_mutable_credentials()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::set_credentials(int index, std::string&& value) {
  _internal_mutable_credentials()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::set_credentials(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_credentials()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::set_credentials(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_credentials()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::set_credentials(int index, absl::string_view value) {
  _internal_mutable_credentials()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::add_credentials(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_credentials()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::add_credentials(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_credentials()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::add_credentials(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_credentials()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::add_credentials(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_credentials()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline void ListCredentialsResponse::add_credentials(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_credentials()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:wallet_api.v1.ListCredentialsResponse.credentials)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListCredentialsResponse::credentials() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListCredentialsResponse.credentials)
  return _internal_credentials();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListCredentialsResponse::mutable_credentials() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListCredentialsResponse.credentials)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_credentials();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListCredentialsResponse::_internal_credentials() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credentials_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListCredentialsResponse::_internal_mutable_credentials() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.credentials_;
}

// uint32 total_owned_credentials = 2;
inline void ListCredentialsResponse::clear_total_owned_credentials() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_owned_credentials_ = 0u;
}
inline ::uint32_t ListCredentialsResponse::total_owned_credentials() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListCredentialsResponse.total_owned_credentials)
  return _internal_total_owned_credentials();
}
inline void ListCredentialsResponse::set_total_owned_credentials(::uint32_t value) {
  _internal_set_total_owned_credentials(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListCredentialsResponse.total_owned_credentials)
}
inline ::uint32_t ListCredentialsResponse::_internal_total_owned_credentials() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_owned_credentials_;
}
inline void ListCredentialsResponse::_internal_set_total_owned_credentials(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_owned_credentials_ = value;
}

// -------------------------------------------------------------------

// AddCredentialRequest

// string credential_type = 1;
inline void AddCredentialRequest::clear_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.ClearToEmpty();
}
inline const std::string& AddCredentialRequest::credential_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AddCredentialRequest.credential_type)
  return _internal_credential_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddCredentialRequest::set_credential_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AddCredentialRequest.credential_type)
}
inline std::string* AddCredentialRequest::mutable_credential_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_type();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AddCredentialRequest.credential_type)
  return _s;
}
inline const std::string& AddCredentialRequest::_internal_credential_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_type_.Get();
}
inline void AddCredentialRequest::_internal_set_credential_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(value, GetArena());
}
inline std::string* AddCredentialRequest::_internal_mutable_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_type_.Mutable( GetArena());
}
inline std::string* AddCredentialRequest::release_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AddCredentialRequest.credential_type)
  return _impl_.credential_type_.Release();
}
inline void AddCredentialRequest::set_allocated_credential_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_type_.IsDefault()) {
          _impl_.credential_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AddCredentialRequest.credential_type)
}

// string wallet_id = 2;
inline void AddCredentialRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& AddCredentialRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AddCredentialRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddCredentialRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AddCredentialRequest.wallet_id)
}
inline std::string* AddCredentialRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AddCredentialRequest.wallet_id)
  return _s;
}
inline const std::string& AddCredentialRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void AddCredentialRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* AddCredentialRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* AddCredentialRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AddCredentialRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void AddCredentialRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AddCredentialRequest.wallet_id)
}

// string api_key = 3;
inline void AddCredentialRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& AddCredentialRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AddCredentialRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddCredentialRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AddCredentialRequest.api_key)
}
inline std::string* AddCredentialRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AddCredentialRequest.api_key)
  return _s;
}
inline const std::string& AddCredentialRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void AddCredentialRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* AddCredentialRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* AddCredentialRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AddCredentialRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void AddCredentialRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AddCredentialRequest.api_key)
}

// -------------------------------------------------------------------

// AddCredentialResponse

// string credential = 1;
inline void AddCredentialResponse::clear_credential() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_.ClearToEmpty();
}
inline const std::string& AddCredentialResponse::credential() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AddCredentialResponse.credential)
  return _internal_credential();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddCredentialResponse::set_credential(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AddCredentialResponse.credential)
}
inline std::string* AddCredentialResponse::mutable_credential() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AddCredentialResponse.credential)
  return _s;
}
inline const std::string& AddCredentialResponse::_internal_credential() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_.Get();
}
inline void AddCredentialResponse::_internal_set_credential(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_.Set(value, GetArena());
}
inline std::string* AddCredentialResponse::_internal_mutable_credential() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_.Mutable( GetArena());
}
inline std::string* AddCredentialResponse::release_credential() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AddCredentialResponse.credential)
  return _impl_.credential_.Release();
}
inline void AddCredentialResponse::set_allocated_credential(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_.IsDefault()) {
          _impl_.credential_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AddCredentialResponse.credential)
}

// -------------------------------------------------------------------

// AssociateWalletRequest

// string wallet_id = 1;
inline void AssociateWalletRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& AssociateWalletRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AssociateWalletRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssociateWalletRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AssociateWalletRequest.wallet_id)
}
inline std::string* AssociateWalletRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AssociateWalletRequest.wallet_id)
  return _s;
}
inline const std::string& AssociateWalletRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void AssociateWalletRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* AssociateWalletRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* AssociateWalletRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AssociateWalletRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void AssociateWalletRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AssociateWalletRequest.wallet_id)
}

// string api_key = 2;
inline void AssociateWalletRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& AssociateWalletRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AssociateWalletRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssociateWalletRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AssociateWalletRequest.api_key)
}
inline std::string* AssociateWalletRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AssociateWalletRequest.api_key)
  return _s;
}
inline const std::string& AssociateWalletRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void AssociateWalletRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* AssociateWalletRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* AssociateWalletRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AssociateWalletRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void AssociateWalletRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AssociateWalletRequest.api_key)
}

// -------------------------------------------------------------------

// AssociateWalletResponse

// string wallet_id = 1;
inline void AssociateWalletResponse::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& AssociateWalletResponse::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AssociateWalletResponse.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssociateWalletResponse::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AssociateWalletResponse.wallet_id)
}
inline std::string* AssociateWalletResponse::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AssociateWalletResponse.wallet_id)
  return _s;
}
inline const std::string& AssociateWalletResponse::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void AssociateWalletResponse::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* AssociateWalletResponse::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* AssociateWalletResponse::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AssociateWalletResponse.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void AssociateWalletResponse::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AssociateWalletResponse.wallet_id)
}

// string did = 2;
inline void AssociateWalletResponse::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& AssociateWalletResponse::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AssociateWalletResponse.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssociateWalletResponse::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AssociateWalletResponse.did)
}
inline std::string* AssociateWalletResponse::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AssociateWalletResponse.did)
  return _s;
}
inline const std::string& AssociateWalletResponse::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void AssociateWalletResponse::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* AssociateWalletResponse::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* AssociateWalletResponse::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AssociateWalletResponse.did)
  return _impl_.did_.Release();
}
inline void AssociateWalletResponse::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AssociateWalletResponse.did)
}

// string public_key = 3;
inline void AssociateWalletResponse::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& AssociateWalletResponse::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.AssociateWalletResponse.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AssociateWalletResponse::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.AssociateWalletResponse.public_key)
}
inline std::string* AssociateWalletResponse::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.AssociateWalletResponse.public_key)
  return _s;
}
inline const std::string& AssociateWalletResponse::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void AssociateWalletResponse::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* AssociateWalletResponse::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* AssociateWalletResponse::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.AssociateWalletResponse.public_key)
  return _impl_.public_key_.Release();
}
inline void AssociateWalletResponse::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.AssociateWalletResponse.public_key)
}

// -------------------------------------------------------------------

// CreateAndAssociateWalletRequest

// string wallet_name = 1;
inline void CreateAndAssociateWalletRequest::clear_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletRequest::wallet_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletRequest.wallet_name)
  return _internal_wallet_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletRequest::set_wallet_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletRequest.wallet_name)
}
inline std::string* CreateAndAssociateWalletRequest::mutable_wallet_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletRequest.wallet_name)
  return _s;
}
inline const std::string& CreateAndAssociateWalletRequest::_internal_wallet_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_name_.Get();
}
inline void CreateAndAssociateWalletRequest::_internal_set_wallet_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletRequest::_internal_mutable_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_name_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletRequest::release_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletRequest.wallet_name)
  return _impl_.wallet_name_.Release();
}
inline void CreateAndAssociateWalletRequest::set_allocated_wallet_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_name_.IsDefault()) {
          _impl_.wallet_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletRequest.wallet_name)
}

// string api_key = 2;
inline void CreateAndAssociateWalletRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletRequest.api_key)
}
inline std::string* CreateAndAssociateWalletRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletRequest.api_key)
  return _s;
}
inline const std::string& CreateAndAssociateWalletRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void CreateAndAssociateWalletRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void CreateAndAssociateWalletRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletRequest.api_key)
}

// string token = 3;
inline void CreateAndAssociateWalletRequest::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletRequest.token)
}
inline std::string* CreateAndAssociateWalletRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletRequest.token)
  return _s;
}
inline const std::string& CreateAndAssociateWalletRequest::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void CreateAndAssociateWalletRequest::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletRequest::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletRequest::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletRequest.token)
  return _impl_.token_.Release();
}
inline void CreateAndAssociateWalletRequest::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletRequest.token)
}

// -------------------------------------------------------------------

// CreateAndAssociateWalletResponse

// string wallet_id = 1;
inline void CreateAndAssociateWalletResponse::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletResponse::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletResponse::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_id)
}
inline std::string* CreateAndAssociateWalletResponse::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_id)
  return _s;
}
inline const std::string& CreateAndAssociateWalletResponse::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void CreateAndAssociateWalletResponse::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void CreateAndAssociateWalletResponse::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_id)
}

// string wallet_name = 2;
inline void CreateAndAssociateWalletResponse::clear_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletResponse::wallet_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_name)
  return _internal_wallet_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletResponse::set_wallet_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_name)
}
inline std::string* CreateAndAssociateWalletResponse::mutable_wallet_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_name();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_name)
  return _s;
}
inline const std::string& CreateAndAssociateWalletResponse::_internal_wallet_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_name_.Get();
}
inline void CreateAndAssociateWalletResponse::_internal_set_wallet_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::_internal_mutable_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_name_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::release_wallet_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_name)
  return _impl_.wallet_name_.Release();
}
inline void CreateAndAssociateWalletResponse::set_allocated_wallet_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_name_.IsDefault()) {
          _impl_.wallet_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletResponse.wallet_name)
}

// string public_key = 3;
inline void CreateAndAssociateWalletResponse::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletResponse::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletResponse.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletResponse::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletResponse.public_key)
}
inline std::string* CreateAndAssociateWalletResponse::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletResponse.public_key)
  return _s;
}
inline const std::string& CreateAndAssociateWalletResponse::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void CreateAndAssociateWalletResponse::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletResponse.public_key)
  return _impl_.public_key_.Release();
}
inline void CreateAndAssociateWalletResponse::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletResponse.public_key)
}

// string did = 4;
inline void CreateAndAssociateWalletResponse::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& CreateAndAssociateWalletResponse::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.CreateAndAssociateWalletResponse.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAndAssociateWalletResponse::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.CreateAndAssociateWalletResponse.did)
}
inline std::string* CreateAndAssociateWalletResponse::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.CreateAndAssociateWalletResponse.did)
  return _s;
}
inline const std::string& CreateAndAssociateWalletResponse::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void CreateAndAssociateWalletResponse::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* CreateAndAssociateWalletResponse::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.CreateAndAssociateWalletResponse.did)
  return _impl_.did_.Release();
}
inline void CreateAndAssociateWalletResponse::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.CreateAndAssociateWalletResponse.did)
}

// -------------------------------------------------------------------

// RequestPresentationRequest

// string did = 1;
inline void RequestPresentationRequest::clear_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.ClearToEmpty();
}
inline const std::string& RequestPresentationRequest::did() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.RequestPresentationRequest.did)
  return _internal_did();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestPresentationRequest::set_did(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.RequestPresentationRequest.did)
}
inline std::string* RequestPresentationRequest::mutable_did() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_did();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.RequestPresentationRequest.did)
  return _s;
}
inline const std::string& RequestPresentationRequest::_internal_did() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.did_.Get();
}
inline void RequestPresentationRequest::_internal_set_did(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.Set(value, GetArena());
}
inline std::string* RequestPresentationRequest::_internal_mutable_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.did_.Mutable( GetArena());
}
inline std::string* RequestPresentationRequest::release_did() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.RequestPresentationRequest.did)
  return _impl_.did_.Release();
}
inline void RequestPresentationRequest::set_allocated_did(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.did_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.did_.IsDefault()) {
          _impl_.did_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.RequestPresentationRequest.did)
}

// string credential_type = 2;
inline void RequestPresentationRequest::clear_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.ClearToEmpty();
}
inline const std::string& RequestPresentationRequest::credential_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.RequestPresentationRequest.credential_type)
  return _internal_credential_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestPresentationRequest::set_credential_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.RequestPresentationRequest.credential_type)
}
inline std::string* RequestPresentationRequest::mutable_credential_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_credential_type();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.RequestPresentationRequest.credential_type)
  return _s;
}
inline const std::string& RequestPresentationRequest::_internal_credential_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.credential_type_.Get();
}
inline void RequestPresentationRequest::_internal_set_credential_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.Set(value, GetArena());
}
inline std::string* RequestPresentationRequest::_internal_mutable_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.credential_type_.Mutable( GetArena());
}
inline std::string* RequestPresentationRequest::release_credential_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.RequestPresentationRequest.credential_type)
  return _impl_.credential_type_.Release();
}
inline void RequestPresentationRequest::set_allocated_credential_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.credential_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.credential_type_.IsDefault()) {
          _impl_.credential_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.RequestPresentationRequest.credential_type)
}

// string api_key = 3;
inline void RequestPresentationRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& RequestPresentationRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.RequestPresentationRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestPresentationRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.RequestPresentationRequest.api_key)
}
inline std::string* RequestPresentationRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.RequestPresentationRequest.api_key)
  return _s;
}
inline const std::string& RequestPresentationRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void RequestPresentationRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* RequestPresentationRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* RequestPresentationRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.RequestPresentationRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void RequestPresentationRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.RequestPresentationRequest.api_key)
}

// -------------------------------------------------------------------

// RequestPresentationResponse

// string presentation = 1;
inline void RequestPresentationResponse::clear_presentation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presentation_.ClearToEmpty();
}
inline const std::string& RequestPresentationResponse::presentation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.RequestPresentationResponse.presentation)
  return _internal_presentation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestPresentationResponse::set_presentation(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presentation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.RequestPresentationResponse.presentation)
}
inline std::string* RequestPresentationResponse::mutable_presentation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_presentation();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.RequestPresentationResponse.presentation)
  return _s;
}
inline const std::string& RequestPresentationResponse::_internal_presentation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presentation_.Get();
}
inline void RequestPresentationResponse::_internal_set_presentation(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presentation_.Set(value, GetArena());
}
inline std::string* RequestPresentationResponse::_internal_mutable_presentation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.presentation_.Mutable( GetArena());
}
inline std::string* RequestPresentationResponse::release_presentation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.RequestPresentationResponse.presentation)
  return _impl_.presentation_.Release();
}
inline void RequestPresentationResponse::set_allocated_presentation(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presentation_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.presentation_.IsDefault()) {
          _impl_.presentation_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.RequestPresentationResponse.presentation)
}

// -------------------------------------------------------------------

// PrepareFundsChangeRequest

// .common.Amount amount = 1;
inline bool PrepareFundsChangeRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::common::Amount& PrepareFundsChangeRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& PrepareFundsChangeRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareFundsChangeRequest.amount)
  return _internal_amount();
}
inline void PrepareFundsChangeRequest::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.PrepareFundsChangeRequest.amount)
}
inline ::common::Amount* PrepareFundsChangeRequest::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* PrepareFundsChangeRequest::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareFundsChangeRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* PrepareFundsChangeRequest::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* PrepareFundsChangeRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareFundsChangeRequest.amount)
  return _msg;
}
inline void PrepareFundsChangeRequest::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareFundsChangeRequest.amount)
}

// string user_reference = 4;
inline void PrepareFundsChangeRequest::clear_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.ClearToEmpty();
}
inline const std::string& PrepareFundsChangeRequest::user_reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareFundsChangeRequest.user_reference)
  return _internal_user_reference();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareFundsChangeRequest::set_user_reference(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareFundsChangeRequest.user_reference)
}
inline std::string* PrepareFundsChangeRequest::mutable_user_reference() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_reference();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareFundsChangeRequest.user_reference)
  return _s;
}
inline const std::string& PrepareFundsChangeRequest::_internal_user_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_reference_.Get();
}
inline void PrepareFundsChangeRequest::_internal_set_user_reference(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.Set(value, GetArena());
}
inline std::string* PrepareFundsChangeRequest::_internal_mutable_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_reference_.Mutable( GetArena());
}
inline std::string* PrepareFundsChangeRequest::release_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareFundsChangeRequest.user_reference)
  return _impl_.user_reference_.Release();
}
inline void PrepareFundsChangeRequest::set_allocated_user_reference(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_reference_.IsDefault()) {
          _impl_.user_reference_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareFundsChangeRequest.user_reference)
}

// string wallet_id = 2;
inline void PrepareFundsChangeRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& PrepareFundsChangeRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareFundsChangeRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareFundsChangeRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareFundsChangeRequest.wallet_id)
}
inline std::string* PrepareFundsChangeRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareFundsChangeRequest.wallet_id)
  return _s;
}
inline const std::string& PrepareFundsChangeRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void PrepareFundsChangeRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* PrepareFundsChangeRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* PrepareFundsChangeRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareFundsChangeRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void PrepareFundsChangeRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareFundsChangeRequest.wallet_id)
}

// string api_key = 3;
inline void PrepareFundsChangeRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& PrepareFundsChangeRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareFundsChangeRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareFundsChangeRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareFundsChangeRequest.api_key)
}
inline std::string* PrepareFundsChangeRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareFundsChangeRequest.api_key)
  return _s;
}
inline const std::string& PrepareFundsChangeRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void PrepareFundsChangeRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* PrepareFundsChangeRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* PrepareFundsChangeRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareFundsChangeRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void PrepareFundsChangeRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareFundsChangeRequest.api_key)
}

// -------------------------------------------------------------------

// PrepareFundsChangeResponse

// .wallet_api.v1.PrepareFundsChangeResponse.Status status = 1;
inline void PrepareFundsChangeResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::wallet_api::v1::PrepareFundsChangeResponse_Status PrepareFundsChangeResponse::status() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareFundsChangeResponse.status)
  return _internal_status();
}
inline void PrepareFundsChangeResponse::set_status(::wallet_api::v1::PrepareFundsChangeResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareFundsChangeResponse.status)
}
inline ::wallet_api::v1::PrepareFundsChangeResponse_Status PrepareFundsChangeResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wallet_api::v1::PrepareFundsChangeResponse_Status>(_impl_.status_);
}
inline void PrepareFundsChangeResponse::_internal_set_status(::wallet_api::v1::PrepareFundsChangeResponse_Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string uetr = 2;
inline void PrepareFundsChangeResponse::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& PrepareFundsChangeResponse::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareFundsChangeResponse.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareFundsChangeResponse::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareFundsChangeResponse.uetr)
}
inline std::string* PrepareFundsChangeResponse::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareFundsChangeResponse.uetr)
  return _s;
}
inline const std::string& PrepareFundsChangeResponse::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void PrepareFundsChangeResponse::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* PrepareFundsChangeResponse::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* PrepareFundsChangeResponse::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareFundsChangeResponse.uetr)
  return _impl_.uetr_.Release();
}
inline void PrepareFundsChangeResponse::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareFundsChangeResponse.uetr)
}

// -------------------------------------------------------------------

// PrepareTransactionRequest

// string api_key = 1;
inline void PrepareTransactionRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& PrepareTransactionRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareTransactionRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareTransactionRequest.api_key)
}
inline std::string* PrepareTransactionRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareTransactionRequest.api_key)
  return _s;
}
inline const std::string& PrepareTransactionRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void PrepareTransactionRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* PrepareTransactionRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* PrepareTransactionRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareTransactionRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void PrepareTransactionRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareTransactionRequest.api_key)
}

// string wallet_id = 2;
inline void PrepareTransactionRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& PrepareTransactionRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareTransactionRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareTransactionRequest.wallet_id)
}
inline std::string* PrepareTransactionRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareTransactionRequest.wallet_id)
  return _s;
}
inline const std::string& PrepareTransactionRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void PrepareTransactionRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* PrepareTransactionRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* PrepareTransactionRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareTransactionRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void PrepareTransactionRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareTransactionRequest.wallet_id)
}

// repeated .common.Commitment commitments = 3;
inline int PrepareTransactionRequest::_internal_commitments_size() const {
  return _internal_commitments().size();
}
inline int PrepareTransactionRequest::commitments_size() const {
  return _internal_commitments_size();
}
inline ::common::Commitment* PrepareTransactionRequest::mutable_commitments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareTransactionRequest.commitments)
  return _internal_mutable_commitments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Commitment>* PrepareTransactionRequest::mutable_commitments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.PrepareTransactionRequest.commitments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_commitments();
}
inline const ::common::Commitment& PrepareTransactionRequest::commitments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionRequest.commitments)
  return _internal_commitments().Get(index);
}
inline ::common::Commitment* PrepareTransactionRequest::add_commitments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Commitment* _add = _internal_mutable_commitments()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.PrepareTransactionRequest.commitments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Commitment>& PrepareTransactionRequest::commitments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.PrepareTransactionRequest.commitments)
  return _internal_commitments();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Commitment>&
PrepareTransactionRequest::_internal_commitments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commitments_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Commitment>*
PrepareTransactionRequest::_internal_mutable_commitments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.commitments_;
}

// repeated .common.Condition conditions = 4;
inline int PrepareTransactionRequest::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int PrepareTransactionRequest::conditions_size() const {
  return _internal_conditions_size();
}
inline ::common::Condition* PrepareTransactionRequest::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareTransactionRequest.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Condition>* PrepareTransactionRequest::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.PrepareTransactionRequest.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::common::Condition& PrepareTransactionRequest::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionRequest.conditions)
  return _internal_conditions().Get(index);
}
inline ::common::Condition* PrepareTransactionRequest::add_conditions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Condition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.PrepareTransactionRequest.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Condition>& PrepareTransactionRequest::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.PrepareTransactionRequest.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Condition>&
PrepareTransactionRequest::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Condition>*
PrepareTransactionRequest::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// string memo = 5;
inline void PrepareTransactionRequest::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& PrepareTransactionRequest::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionRequest.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareTransactionRequest::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareTransactionRequest.memo)
}
inline std::string* PrepareTransactionRequest::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareTransactionRequest.memo)
  return _s;
}
inline const std::string& PrepareTransactionRequest::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void PrepareTransactionRequest::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* PrepareTransactionRequest::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* PrepareTransactionRequest::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareTransactionRequest.memo)
  return _impl_.memo_.Release();
}
inline void PrepareTransactionRequest::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareTransactionRequest.memo)
}

// -------------------------------------------------------------------

// PrepareTransactionResponse

// .wallet_api.v1.PrepareTransactionResponse.Status status = 1;
inline void PrepareTransactionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::wallet_api::v1::PrepareTransactionResponse_Status PrepareTransactionResponse::status() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionResponse.status)
  return _internal_status();
}
inline void PrepareTransactionResponse::set_status(::wallet_api::v1::PrepareTransactionResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareTransactionResponse.status)
}
inline ::wallet_api::v1::PrepareTransactionResponse_Status PrepareTransactionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wallet_api::v1::PrepareTransactionResponse_Status>(_impl_.status_);
}
inline void PrepareTransactionResponse::_internal_set_status(::wallet_api::v1::PrepareTransactionResponse_Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string uetr = 2;
inline void PrepareTransactionResponse::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& PrepareTransactionResponse::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareTransactionResponse.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareTransactionResponse::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareTransactionResponse.uetr)
}
inline std::string* PrepareTransactionResponse::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareTransactionResponse.uetr)
  return _s;
}
inline const std::string& PrepareTransactionResponse::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void PrepareTransactionResponse::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* PrepareTransactionResponse::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* PrepareTransactionResponse::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareTransactionResponse.uetr)
  return _impl_.uetr_.Release();
}
inline void PrepareTransactionResponse::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareTransactionResponse.uetr)
}

// -------------------------------------------------------------------

// ListTransactionsRequest

// string wallet_id = 1;
inline void ListTransactionsRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListTransactionsRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListTransactionsRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListTransactionsRequest.wallet_id)
}
inline std::string* ListTransactionsRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListTransactionsRequest.wallet_id)
  return _s;
}
inline const std::string& ListTransactionsRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListTransactionsRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListTransactionsRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListTransactionsRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListTransactionsRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListTransactionsRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListTransactionsRequest.wallet_id)
}

// string api_key = 2;
inline void ListTransactionsRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ListTransactionsRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListTransactionsRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListTransactionsRequest.api_key)
}
inline std::string* ListTransactionsRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListTransactionsRequest.api_key)
  return _s;
}
inline const std::string& ListTransactionsRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ListTransactionsRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ListTransactionsRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ListTransactionsRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListTransactionsRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ListTransactionsRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListTransactionsRequest.api_key)
}

// .common.Filter filters = 3;
inline bool ListTransactionsRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline const ::common::Filter& ListTransactionsRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Filter* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Filter&>(::common::_Filter_default_instance_);
}
inline const ::common::Filter& ListTransactionsRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsRequest.filters)
  return _internal_filters();
}
inline void ListTransactionsRequest::unsafe_arena_set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListTransactionsRequest.filters)
}
inline ::common::Filter* ListTransactionsRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Filter* ListTransactionsRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListTransactionsRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Filter* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::common::Filter* ListTransactionsRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Filter>(GetArena());
    _impl_.filters_ = reinterpret_cast<::common::Filter*>(p);
  }
  return _impl_.filters_;
}
inline ::common::Filter* ListTransactionsRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Filter* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListTransactionsRequest.filters)
  return _msg;
}
inline void ListTransactionsRequest::set_allocated_filters(::common::Filter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::common::Filter*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListTransactionsRequest.filters)
}

// int32 page = 4;
inline void ListTransactionsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListTransactionsRequest::page() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsRequest.page)
  return _internal_page();
}
inline void ListTransactionsRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListTransactionsRequest.page)
}
inline ::int32_t ListTransactionsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListTransactionsRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 5;
inline void ListTransactionsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListTransactionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsRequest.page_size)
  return _internal_page_size();
}
inline void ListTransactionsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListTransactionsRequest.page_size)
}
inline ::int32_t ListTransactionsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListTransactionsRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// .common.SortBy sort_by = 6;
inline bool ListTransactionsRequest::has_sort_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sort_by_ != nullptr);
  return value;
}
inline const ::common::SortBy& ListTransactionsRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::SortBy* p = _impl_.sort_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::SortBy&>(::common::_SortBy_default_instance_);
}
inline const ::common::SortBy& ListTransactionsRequest::sort_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsRequest.sort_by)
  return _internal_sort_by();
}
inline void ListTransactionsRequest::unsafe_arena_set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }
  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.ListTransactionsRequest.sort_by)
}
inline ::common::SortBy* ListTransactionsRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* released = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::SortBy* ListTransactionsRequest::unsafe_arena_release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListTransactionsRequest.sort_by)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::SortBy* temp = _impl_.sort_by_;
  _impl_.sort_by_ = nullptr;
  return temp;
}
inline ::common::SortBy* ListTransactionsRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sort_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::SortBy>(GetArena());
    _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(p);
  }
  return _impl_.sort_by_;
}
inline ::common::SortBy* ListTransactionsRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::SortBy* _msg = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListTransactionsRequest.sort_by)
  return _msg;
}
inline void ListTransactionsRequest::set_allocated_sort_by(::common::SortBy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sort_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sort_by_ = reinterpret_cast<::common::SortBy*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListTransactionsRequest.sort_by)
}

// -------------------------------------------------------------------

// ContractSummary

// string contract_id = 1;
inline void ContractSummary::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
}
inline const std::string& ContractSummary::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ContractSummary.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_contract_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.contract_id)
}
inline std::string* ContractSummary::mutable_contract_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ContractSummary.contract_id)
  return _s;
}
inline const std::string& ContractSummary::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void ContractSummary::_internal_set_contract_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_id_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ContractSummary.contract_id)
  return _impl_.contract_id_.Release();
}
inline void ContractSummary::set_allocated_contract_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_id_.IsDefault()) {
          _impl_.contract_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ContractSummary.contract_id)
}

// string contract_type = 2;
inline void ContractSummary::clear_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.ClearToEmpty();
}
inline const std::string& ContractSummary::contract_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ContractSummary.contract_type)
  return _internal_contract_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_contract_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.contract_type)
}
inline std::string* ContractSummary::mutable_contract_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_type();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ContractSummary.contract_type)
  return _s;
}
inline const std::string& ContractSummary::_internal_contract_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_type_.Get();
}
inline void ContractSummary::_internal_set_contract_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_type_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ContractSummary.contract_type)
  return _impl_.contract_type_.Release();
}
inline void ContractSummary::set_allocated_contract_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_type_.IsDefault()) {
          _impl_.contract_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ContractSummary.contract_type)
}

// string created = 3;
inline void ContractSummary::clear_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.ClearToEmpty();
}
inline const std::string& ContractSummary::created() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ContractSummary.created)
  return _internal_created();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_created(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.created)
}
inline std::string* ContractSummary::mutable_created() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ContractSummary.created)
  return _s;
}
inline const std::string& ContractSummary::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_.Get();
}
inline void ContractSummary::_internal_set_created(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ContractSummary.created)
  return _impl_.created_.Release();
}
inline void ContractSummary::set_allocated_created(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_.IsDefault()) {
          _impl_.created_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ContractSummary.created)
}

// repeated string counterparties = 4;
inline int ContractSummary::_internal_counterparties_size() const {
  return _internal_counterparties().size();
}
inline int ContractSummary::counterparties_size() const {
  return _internal_counterparties_size();
}
inline void ContractSummary::clear_counterparties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparties_.Clear();
}
inline std::string* ContractSummary::add_counterparties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_counterparties()->Add();
  // @@protoc_insertion_point(field_add_mutable:wallet_api.v1.ContractSummary.counterparties)
  return _s;
}
inline const std::string& ContractSummary::counterparties(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ContractSummary.counterparties)
  return _internal_counterparties().Get(index);
}
inline std::string* ContractSummary::mutable_counterparties(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ContractSummary.counterparties)
  return _internal_mutable_counterparties()->Mutable(index);
}
inline void ContractSummary::set_counterparties(int index, const std::string& value) {
  _internal_mutable_counterparties()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, std::string&& value) {
  _internal_mutable_counterparties()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_counterparties()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_counterparties()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::set_counterparties(int index, absl::string_view value) {
  _internal_mutable_counterparties()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:wallet_api.v1.ContractSummary.counterparties)
}
inline void ContractSummary::add_counterparties(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_counterparties()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:wallet_api.v1.ContractSummary.counterparties)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ContractSummary::counterparties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ContractSummary.counterparties)
  return _internal_counterparties();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ContractSummary::mutable_counterparties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ContractSummary.counterparties)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_counterparties();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ContractSummary::_internal_counterparties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparties_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ContractSummary::_internal_mutable_counterparties() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.counterparties_;
}

// string status = 5;
inline void ContractSummary::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& ContractSummary::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ContractSummary.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.status)
}
inline std::string* ContractSummary::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ContractSummary.status)
  return _s;
}
inline const std::string& ContractSummary::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void ContractSummary::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ContractSummary.status)
  return _impl_.status_.Release();
}
inline void ContractSummary::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ContractSummary.status)
}

// string memo = 6;
inline void ContractSummary::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& ContractSummary::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ContractSummary.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContractSummary::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ContractSummary.memo)
}
inline std::string* ContractSummary::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ContractSummary.memo)
  return _s;
}
inline const std::string& ContractSummary::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void ContractSummary::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* ContractSummary::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* ContractSummary::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ContractSummary.memo)
  return _impl_.memo_.Release();
}
inline void ContractSummary::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ContractSummary.memo)
}

// -------------------------------------------------------------------

// ListTransactionsResponse

// repeated .wallet_api.v1.ContractSummary contracts = 1;
inline int ListTransactionsResponse::_internal_contracts_size() const {
  return _internal_contracts().size();
}
inline int ListTransactionsResponse::contracts_size() const {
  return _internal_contracts_size();
}
inline void ListTransactionsResponse::clear_contracts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contracts_.Clear();
}
inline ::wallet_api::v1::ContractSummary* ListTransactionsResponse::mutable_contracts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListTransactionsResponse.contracts)
  return _internal_mutable_contracts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>* ListTransactionsResponse::mutable_contracts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListTransactionsResponse.contracts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contracts();
}
inline const ::wallet_api::v1::ContractSummary& ListTransactionsResponse::contracts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsResponse.contracts)
  return _internal_contracts().Get(index);
}
inline ::wallet_api::v1::ContractSummary* ListTransactionsResponse::add_contracts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::ContractSummary* _add = _internal_mutable_contracts()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListTransactionsResponse.contracts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>& ListTransactionsResponse::contracts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListTransactionsResponse.contracts)
  return _internal_contracts();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>&
ListTransactionsResponse::_internal_contracts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contracts_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::ContractSummary>*
ListTransactionsResponse::_internal_mutable_contracts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contracts_;
}

// uint32 totalContracts = 2;
inline void ListTransactionsResponse::clear_totalcontracts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalcontracts_ = 0u;
}
inline ::uint32_t ListTransactionsResponse::totalcontracts() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListTransactionsResponse.totalContracts)
  return _internal_totalcontracts();
}
inline void ListTransactionsResponse::set_totalcontracts(::uint32_t value) {
  _internal_set_totalcontracts(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListTransactionsResponse.totalContracts)
}
inline ::uint32_t ListTransactionsResponse::_internal_totalcontracts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.totalcontracts_;
}
inline void ListTransactionsResponse::_internal_set_totalcontracts(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.totalcontracts_ = value;
}

// -------------------------------------------------------------------

// BalanceDetail

// .wallet_api.v1.WalletBalance balance = 1;
inline bool BalanceDetail::has_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.balance_ != nullptr);
  return value;
}
inline void BalanceDetail::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.balance_ != nullptr) _impl_.balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::wallet_api::v1::WalletBalance& BalanceDetail::_internal_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::wallet_api::v1::WalletBalance* p = _impl_.balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::wallet_api::v1::WalletBalance&>(::wallet_api::v1::_WalletBalance_default_instance_);
}
inline const ::wallet_api::v1::WalletBalance& BalanceDetail::balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.BalanceDetail.balance)
  return _internal_balance();
}
inline void BalanceDetail::unsafe_arena_set_allocated_balance(::wallet_api::v1::WalletBalance* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.balance_);
  }
  _impl_.balance_ = reinterpret_cast<::wallet_api::v1::WalletBalance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.BalanceDetail.balance)
}
inline ::wallet_api::v1::WalletBalance* BalanceDetail::release_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::wallet_api::v1::WalletBalance* released = _impl_.balance_;
  _impl_.balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::wallet_api::v1::WalletBalance* BalanceDetail::unsafe_arena_release_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.BalanceDetail.balance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::wallet_api::v1::WalletBalance* temp = _impl_.balance_;
  _impl_.balance_ = nullptr;
  return temp;
}
inline ::wallet_api::v1::WalletBalance* BalanceDetail::_internal_mutable_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::wallet_api::v1::WalletBalance>(GetArena());
    _impl_.balance_ = reinterpret_cast<::wallet_api::v1::WalletBalance*>(p);
  }
  return _impl_.balance_;
}
inline ::wallet_api::v1::WalletBalance* BalanceDetail::mutable_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::wallet_api::v1::WalletBalance* _msg = _internal_mutable_balance();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.BalanceDetail.balance)
  return _msg;
}
inline void BalanceDetail::set_allocated_balance(::wallet_api::v1::WalletBalance* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.balance_ = reinterpret_cast<::wallet_api::v1::WalletBalance*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.BalanceDetail.balance)
}

// .wallet_api.v1.BalanceDetail.Kind kind = 2;
inline void BalanceDetail::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
}
inline ::wallet_api::v1::BalanceDetail_Kind BalanceDetail::kind() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.BalanceDetail.kind)
  return _internal_kind();
}
inline void BalanceDetail::set_kind(::wallet_api::v1::BalanceDetail_Kind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.BalanceDetail.kind)
}
inline ::wallet_api::v1::BalanceDetail_Kind BalanceDetail::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wallet_api::v1::BalanceDetail_Kind>(_impl_.kind_);
}
inline void BalanceDetail::_internal_set_kind(::wallet_api::v1::BalanceDetail_Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// -------------------------------------------------------------------

// ListWalletBalanceDetailsRequest

// string wallet_id = 1;
inline void ListWalletBalanceDetailsRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ListWalletBalanceDetailsRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalanceDetailsRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletBalanceDetailsRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletBalanceDetailsRequest.wallet_id)
}
inline std::string* ListWalletBalanceDetailsRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalanceDetailsRequest.wallet_id)
  return _s;
}
inline const std::string& ListWalletBalanceDetailsRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ListWalletBalanceDetailsRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ListWalletBalanceDetailsRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ListWalletBalanceDetailsRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletBalanceDetailsRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ListWalletBalanceDetailsRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletBalanceDetailsRequest.wallet_id)
}

// string api_key = 2;
inline void ListWalletBalanceDetailsRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ListWalletBalanceDetailsRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalanceDetailsRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListWalletBalanceDetailsRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ListWalletBalanceDetailsRequest.api_key)
}
inline std::string* ListWalletBalanceDetailsRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalanceDetailsRequest.api_key)
  return _s;
}
inline const std::string& ListWalletBalanceDetailsRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ListWalletBalanceDetailsRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ListWalletBalanceDetailsRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ListWalletBalanceDetailsRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ListWalletBalanceDetailsRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ListWalletBalanceDetailsRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ListWalletBalanceDetailsRequest.api_key)
}

// -------------------------------------------------------------------

// ListWalletBalanceDetailsResponse

// repeated .wallet_api.v1.BalanceDetail balances = 1;
inline int ListWalletBalanceDetailsResponse::_internal_balances_size() const {
  return _internal_balances().size();
}
inline int ListWalletBalanceDetailsResponse::balances_size() const {
  return _internal_balances_size();
}
inline void ListWalletBalanceDetailsResponse::clear_balances() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balances_.Clear();
}
inline ::wallet_api::v1::BalanceDetail* ListWalletBalanceDetailsResponse::mutable_balances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ListWalletBalanceDetailsResponse.balances)
  return _internal_mutable_balances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>* ListWalletBalanceDetailsResponse::mutable_balances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.ListWalletBalanceDetailsResponse.balances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_balances();
}
inline const ::wallet_api::v1::BalanceDetail& ListWalletBalanceDetailsResponse::balances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ListWalletBalanceDetailsResponse.balances)
  return _internal_balances().Get(index);
}
inline ::wallet_api::v1::BalanceDetail* ListWalletBalanceDetailsResponse::add_balances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::BalanceDetail* _add = _internal_mutable_balances()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.ListWalletBalanceDetailsResponse.balances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>& ListWalletBalanceDetailsResponse::balances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.ListWalletBalanceDetailsResponse.balances)
  return _internal_balances();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>&
ListWalletBalanceDetailsResponse::_internal_balances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balances_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::BalanceDetail>*
ListWalletBalanceDetailsResponse::_internal_mutable_balances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.balances_;
}

// -------------------------------------------------------------------

// GetTransactionDetailRequest

// string wallet_id = 1;
inline void GetTransactionDetailRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailRequest.wallet_id)
}
inline std::string* GetTransactionDetailRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailRequest.wallet_id)
  return _s;
}
inline const std::string& GetTransactionDetailRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void GetTransactionDetailRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void GetTransactionDetailRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailRequest.wallet_id)
}

// string api_key = 2;
inline void GetTransactionDetailRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailRequest.api_key)
}
inline std::string* GetTransactionDetailRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailRequest.api_key)
  return _s;
}
inline const std::string& GetTransactionDetailRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void GetTransactionDetailRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void GetTransactionDetailRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailRequest.api_key)
}

// string uetr = 3;
inline void GetTransactionDetailRequest::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailRequest::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailRequest.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailRequest::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailRequest.uetr)
}
inline std::string* GetTransactionDetailRequest::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailRequest.uetr)
  return _s;
}
inline const std::string& GetTransactionDetailRequest::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void GetTransactionDetailRequest::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailRequest::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailRequest::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailRequest.uetr)
  return _impl_.uetr_.Release();
}
inline void GetTransactionDetailRequest::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailRequest.uetr)
}

// -------------------------------------------------------------------

// GetTransactionDetailResponse_LogEntry

// string sender = 1;
inline void GetTransactionDetailResponse_LogEntry::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.sender)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.sender)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.sender)
  return _impl_.sender_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.sender)
}

// string receiver = 2;
inline void GetTransactionDetailResponse_LogEntry::clear_receiver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::receiver() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.receiver)
  return _internal_receiver();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_receiver(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.receiver)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_receiver() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_receiver();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.receiver)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_receiver() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.receiver_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_receiver(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_receiver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.receiver_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_receiver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.receiver)
  return _impl_.receiver_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_receiver(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.receiver_.IsDefault()) {
          _impl_.receiver_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.receiver)
}

// .common.Amount amount = 3;
inline bool GetTransactionDetailResponse_LogEntry::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::common::Amount& GetTransactionDetailResponse_LogEntry::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& GetTransactionDetailResponse_LogEntry::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.amount)
  return _internal_amount();
}
inline void GetTransactionDetailResponse_LogEntry::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.amount)
}
inline ::common::Amount* GetTransactionDetailResponse_LogEntry::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* GetTransactionDetailResponse_LogEntry::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* GetTransactionDetailResponse_LogEntry::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* GetTransactionDetailResponse_LogEntry::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.amount)
  return _msg;
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.amount)
}

// string timestamp = 4;
inline void GetTransactionDetailResponse_LogEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.timestamp)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.timestamp)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.timestamp)
  return _impl_.timestamp_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timestamp_.IsDefault()) {
          _impl_.timestamp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.timestamp)
}

// string kind = 5;
inline void GetTransactionDetailResponse_LogEntry::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::kind() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.kind)
  return _internal_kind();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_kind(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.kind)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_kind() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kind();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.kind)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kind_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_kind(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.kind_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.kind)
  return _impl_.kind_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_kind(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.kind_.IsDefault()) {
          _impl_.kind_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.kind)
}

// string state = 6;
inline void GetTransactionDetailResponse_LogEntry::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_state(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.state)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.state)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_state(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.state)
  return _impl_.state_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_state(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.state)
}

// string event = 7;
inline void GetTransactionDetailResponse_LogEntry::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::event() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.event)
  return _internal_event();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_event(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.event)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.event)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_event(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.event_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.event)
  return _impl_.event_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_event(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.event_.IsDefault()) {
          _impl_.event_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.event)
}

// string promissory_id = 8;
inline void GetTransactionDetailResponse_LogEntry::clear_promissory_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_id_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse_LogEntry::promissory_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.LogEntry.promissory_id)
  return _internal_promissory_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse_LogEntry::set_promissory_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.LogEntry.promissory_id)
}
inline std::string* GetTransactionDetailResponse_LogEntry::mutable_promissory_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_promissory_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.LogEntry.promissory_id)
  return _s;
}
inline const std::string& GetTransactionDetailResponse_LogEntry::_internal_promissory_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.promissory_id_.Get();
}
inline void GetTransactionDetailResponse_LogEntry::_internal_set_promissory_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_id_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::_internal_mutable_promissory_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.promissory_id_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse_LogEntry::release_promissory_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.LogEntry.promissory_id)
  return _impl_.promissory_id_.Release();
}
inline void GetTransactionDetailResponse_LogEntry::set_allocated_promissory_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.promissory_id_.IsDefault()) {
          _impl_.promissory_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.LogEntry.promissory_id)
}

// -------------------------------------------------------------------

// GetTransactionDetailResponse

// string contract_type = 1;
inline void GetTransactionDetailResponse::clear_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse::contract_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.contract_type)
  return _internal_contract_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse::set_contract_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.contract_type)
}
inline std::string* GetTransactionDetailResponse::mutable_contract_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract_type();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.contract_type)
  return _s;
}
inline const std::string& GetTransactionDetailResponse::_internal_contract_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_type_.Get();
}
inline void GetTransactionDetailResponse::_internal_set_contract_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse::_internal_mutable_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_type_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse::release_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.contract_type)
  return _impl_.contract_type_.Release();
}
inline void GetTransactionDetailResponse::set_allocated_contract_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contract_type_.IsDefault()) {
          _impl_.contract_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.contract_type)
}

// repeated .common.Commitment commitments = 2;
inline int GetTransactionDetailResponse::_internal_commitments_size() const {
  return _internal_commitments().size();
}
inline int GetTransactionDetailResponse::commitments_size() const {
  return _internal_commitments_size();
}
inline ::common::Commitment* GetTransactionDetailResponse::mutable_commitments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.commitments)
  return _internal_mutable_commitments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Commitment>* GetTransactionDetailResponse::mutable_commitments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.GetTransactionDetailResponse.commitments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_commitments();
}
inline const ::common::Commitment& GetTransactionDetailResponse::commitments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.commitments)
  return _internal_commitments().Get(index);
}
inline ::common::Commitment* GetTransactionDetailResponse::add_commitments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Commitment* _add = _internal_mutable_commitments()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.GetTransactionDetailResponse.commitments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Commitment>& GetTransactionDetailResponse::commitments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.GetTransactionDetailResponse.commitments)
  return _internal_commitments();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Commitment>&
GetTransactionDetailResponse::_internal_commitments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commitments_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Commitment>*
GetTransactionDetailResponse::_internal_mutable_commitments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.commitments_;
}

// string created = 4;
inline void GetTransactionDetailResponse::clear_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse::created() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.created)
  return _internal_created();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse::set_created(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.created)
}
inline std::string* GetTransactionDetailResponse::mutable_created() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.created)
  return _s;
}
inline const std::string& GetTransactionDetailResponse::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_.Get();
}
inline void GetTransactionDetailResponse::_internal_set_created(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse::_internal_mutable_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse::release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.created)
  return _impl_.created_.Release();
}
inline void GetTransactionDetailResponse::set_allocated_created(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_.IsDefault()) {
          _impl_.created_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.created)
}

// string hash_presenter = 5;
inline void GetTransactionDetailResponse::clear_hash_presenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_presenter_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse::hash_presenter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.hash_presenter)
  return _internal_hash_presenter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse::set_hash_presenter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_presenter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.hash_presenter)
}
inline std::string* GetTransactionDetailResponse::mutable_hash_presenter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash_presenter();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.hash_presenter)
  return _s;
}
inline const std::string& GetTransactionDetailResponse::_internal_hash_presenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_presenter_.Get();
}
inline void GetTransactionDetailResponse::_internal_set_hash_presenter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_presenter_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse::_internal_mutable_hash_presenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_presenter_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse::release_hash_presenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.hash_presenter)
  return _impl_.hash_presenter_.Release();
}
inline void GetTransactionDetailResponse::set_allocated_hash_presenter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_presenter_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_presenter_.IsDefault()) {
          _impl_.hash_presenter_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.hash_presenter)
}

// bytes hash = 6;
inline void GetTransactionDetailResponse::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.hash)
}
inline std::string* GetTransactionDetailResponse::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.hash)
  return _s;
}
inline const std::string& GetTransactionDetailResponse::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void GetTransactionDetailResponse::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.hash)
  return _impl_.hash_.Release();
}
inline void GetTransactionDetailResponse::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_.IsDefault()) {
          _impl_.hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.hash)
}

// string expiration = 7;
inline void GetTransactionDetailResponse::clear_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse::expiration() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.expiration)
  return _internal_expiration();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse::set_expiration(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.expiration)
}
inline std::string* GetTransactionDetailResponse::mutable_expiration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_expiration();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.expiration)
  return _s;
}
inline const std::string& GetTransactionDetailResponse::_internal_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiration_.Get();
}
inline void GetTransactionDetailResponse::_internal_set_expiration(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse::_internal_mutable_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.expiration_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse::release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.expiration)
  return _impl_.expiration_.Release();
}
inline void GetTransactionDetailResponse::set_allocated_expiration(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.expiration_.IsDefault()) {
          _impl_.expiration_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.expiration)
}

// string memo = 8;
inline void GetTransactionDetailResponse::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& GetTransactionDetailResponse::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionDetailResponse::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.GetTransactionDetailResponse.memo)
}
inline std::string* GetTransactionDetailResponse::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.memo)
  return _s;
}
inline const std::string& GetTransactionDetailResponse::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void GetTransactionDetailResponse::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* GetTransactionDetailResponse::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* GetTransactionDetailResponse::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.GetTransactionDetailResponse.memo)
  return _impl_.memo_.Release();
}
inline void GetTransactionDetailResponse::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.GetTransactionDetailResponse.memo)
}

// repeated .wallet_api.v1.GetTransactionDetailResponse.LogEntry log = 9;
inline int GetTransactionDetailResponse::_internal_log_size() const {
  return _internal_log().size();
}
inline int GetTransactionDetailResponse::log_size() const {
  return _internal_log_size();
}
inline void GetTransactionDetailResponse::clear_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.Clear();
}
inline ::wallet_api::v1::GetTransactionDetailResponse_LogEntry* GetTransactionDetailResponse::mutable_log(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.GetTransactionDetailResponse.log)
  return _internal_mutable_log()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>* GetTransactionDetailResponse::mutable_log()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:wallet_api.v1.GetTransactionDetailResponse.log)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_log();
}
inline const ::wallet_api::v1::GetTransactionDetailResponse_LogEntry& GetTransactionDetailResponse::log(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.GetTransactionDetailResponse.log)
  return _internal_log().Get(index);
}
inline ::wallet_api::v1::GetTransactionDetailResponse_LogEntry* GetTransactionDetailResponse::add_log() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::wallet_api::v1::GetTransactionDetailResponse_LogEntry* _add = _internal_mutable_log()->Add();
  // @@protoc_insertion_point(field_add:wallet_api.v1.GetTransactionDetailResponse.log)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>& GetTransactionDetailResponse::log() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:wallet_api.v1.GetTransactionDetailResponse.log)
  return _internal_log();
}
inline const ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>&
GetTransactionDetailResponse::_internal_log() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_;
}
inline ::google::protobuf::RepeatedPtrField<::wallet_api::v1::GetTransactionDetailResponse_LogEntry>*
GetTransactionDetailResponse::_internal_mutable_log() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.log_;
}

// -------------------------------------------------------------------

// PrepareAtomicAssetSwapRequest

// string api_key = 1;
inline void PrepareAtomicAssetSwapRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& PrepareAtomicAssetSwapRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareAtomicAssetSwapRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapRequest.api_key)
}
inline std::string* PrepareAtomicAssetSwapRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapRequest.api_key)
  return _s;
}
inline const std::string& PrepareAtomicAssetSwapRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void PrepareAtomicAssetSwapRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void PrepareAtomicAssetSwapRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.api_key)
}

// string wallet_id = 2;
inline void PrepareAtomicAssetSwapRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& PrepareAtomicAssetSwapRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareAtomicAssetSwapRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapRequest.wallet_id)
}
inline std::string* PrepareAtomicAssetSwapRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapRequest.wallet_id)
  return _s;
}
inline const std::string& PrepareAtomicAssetSwapRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void PrepareAtomicAssetSwapRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void PrepareAtomicAssetSwapRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.wallet_id)
}

// .common.Amount amount = 3;
inline bool PrepareAtomicAssetSwapRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::common::Amount& PrepareAtomicAssetSwapRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& PrepareAtomicAssetSwapRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.amount)
  return _internal_amount();
}
inline void PrepareAtomicAssetSwapRequest::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.amount)
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapRequest.amount)
  return _msg;
}
inline void PrepareAtomicAssetSwapRequest::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.amount)
}

// string respondent = 4;
inline void PrepareAtomicAssetSwapRequest::clear_respondent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.ClearToEmpty();
}
inline const std::string& PrepareAtomicAssetSwapRequest::respondent() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent)
  return _internal_respondent();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareAtomicAssetSwapRequest::set_respondent(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent)
}
inline std::string* PrepareAtomicAssetSwapRequest::mutable_respondent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_respondent();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent)
  return _s;
}
inline const std::string& PrepareAtomicAssetSwapRequest::_internal_respondent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.respondent_.Get();
}
inline void PrepareAtomicAssetSwapRequest::_internal_set_respondent(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.Set(value, GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::_internal_mutable_respondent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.respondent_.Mutable( GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::release_respondent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent)
  return _impl_.respondent_.Release();
}
inline void PrepareAtomicAssetSwapRequest::set_allocated_respondent(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.respondent_.IsDefault()) {
          _impl_.respondent_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent)
}

// .common.Amount respondent_amount = 5;
inline bool PrepareAtomicAssetSwapRequest::has_respondent_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.respondent_amount_ != nullptr);
  return value;
}
inline const ::common::Amount& PrepareAtomicAssetSwapRequest::_internal_respondent_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.respondent_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& PrepareAtomicAssetSwapRequest::respondent_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent_amount)
  return _internal_respondent_amount();
}
inline void PrepareAtomicAssetSwapRequest::unsafe_arena_set_allocated_respondent_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondent_amount_);
  }
  _impl_.respondent_amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent_amount)
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::release_respondent_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Amount* released = _impl_.respondent_amount_;
  _impl_.respondent_amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::unsafe_arena_release_respondent_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent_amount)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Amount* temp = _impl_.respondent_amount_;
  _impl_.respondent_amount_ = nullptr;
  return temp;
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::_internal_mutable_respondent_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.respondent_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.respondent_amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.respondent_amount_;
}
inline ::common::Amount* PrepareAtomicAssetSwapRequest::mutable_respondent_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::Amount* _msg = _internal_mutable_respondent_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent_amount)
  return _msg;
}
inline void PrepareAtomicAssetSwapRequest::set_allocated_respondent_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondent_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.respondent_amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.respondent_amount)
}

// string memo = 6;
inline void PrepareAtomicAssetSwapRequest::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& PrepareAtomicAssetSwapRequest::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareAtomicAssetSwapRequest::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapRequest.memo)
}
inline std::string* PrepareAtomicAssetSwapRequest::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapRequest.memo)
  return _s;
}
inline const std::string& PrepareAtomicAssetSwapRequest::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void PrepareAtomicAssetSwapRequest::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* PrepareAtomicAssetSwapRequest::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapRequest.memo)
  return _impl_.memo_.Release();
}
inline void PrepareAtomicAssetSwapRequest::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapRequest.memo)
}

// uint32 timeout = 7;
inline void PrepareAtomicAssetSwapRequest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t PrepareAtomicAssetSwapRequest::timeout() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapRequest.timeout)
  return _internal_timeout();
}
inline void PrepareAtomicAssetSwapRequest::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapRequest.timeout)
}
inline ::uint32_t PrepareAtomicAssetSwapRequest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void PrepareAtomicAssetSwapRequest::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// -------------------------------------------------------------------

// PrepareAtomicAssetSwapResponse

// .wallet_api.v1.PrepareAtomicAssetSwapResponse.Status status = 1;
inline void PrepareAtomicAssetSwapResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status PrepareAtomicAssetSwapResponse::status() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapResponse.status)
  return _internal_status();
}
inline void PrepareAtomicAssetSwapResponse::set_status(::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapResponse.status)
}
inline ::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status PrepareAtomicAssetSwapResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status>(_impl_.status_);
}
inline void PrepareAtomicAssetSwapResponse::_internal_set_status(::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string uetr = 2;
inline void PrepareAtomicAssetSwapResponse::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& PrepareAtomicAssetSwapResponse::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareAtomicAssetSwapResponse.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareAtomicAssetSwapResponse::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareAtomicAssetSwapResponse.uetr)
}
inline std::string* PrepareAtomicAssetSwapResponse::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareAtomicAssetSwapResponse.uetr)
  return _s;
}
inline const std::string& PrepareAtomicAssetSwapResponse::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void PrepareAtomicAssetSwapResponse::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* PrepareAtomicAssetSwapResponse::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* PrepareAtomicAssetSwapResponse::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareAtomicAssetSwapResponse.uetr)
  return _impl_.uetr_.Release();
}
inline void PrepareAtomicAssetSwapResponse::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareAtomicAssetSwapResponse.uetr)
}

// -------------------------------------------------------------------

// PrepareCrossBorderPaymentRequest

// string api_key = 1;
inline void PrepareCrossBorderPaymentRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& PrepareCrossBorderPaymentRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareCrossBorderPaymentRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentRequest.api_key)
}
inline std::string* PrepareCrossBorderPaymentRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.api_key)
  return _s;
}
inline const std::string& PrepareCrossBorderPaymentRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void PrepareCrossBorderPaymentRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.api_key)
}

// string wallet_id = 2;
inline void PrepareCrossBorderPaymentRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& PrepareCrossBorderPaymentRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareCrossBorderPaymentRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentRequest.wallet_id)
}
inline std::string* PrepareCrossBorderPaymentRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.wallet_id)
  return _s;
}
inline const std::string& PrepareCrossBorderPaymentRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void PrepareCrossBorderPaymentRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.wallet_id)
}

// string treasury = 3;
inline void PrepareCrossBorderPaymentRequest::clear_treasury() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.treasury_.ClearToEmpty();
}
inline const std::string& PrepareCrossBorderPaymentRequest::treasury() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.treasury)
  return _internal_treasury();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareCrossBorderPaymentRequest::set_treasury(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.treasury_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentRequest.treasury)
}
inline std::string* PrepareCrossBorderPaymentRequest::mutable_treasury() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_treasury();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.treasury)
  return _s;
}
inline const std::string& PrepareCrossBorderPaymentRequest::_internal_treasury() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.treasury_.Get();
}
inline void PrepareCrossBorderPaymentRequest::_internal_set_treasury(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.treasury_.Set(value, GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::_internal_mutable_treasury() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.treasury_.Mutable( GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::release_treasury() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.treasury)
  return _impl_.treasury_.Release();
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_treasury(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.treasury_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.treasury_.IsDefault()) {
          _impl_.treasury_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.treasury)
}

// .common.Amount amount = 4;
inline bool PrepareCrossBorderPaymentRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::common::Amount& PrepareCrossBorderPaymentRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& PrepareCrossBorderPaymentRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.amount)
  return _internal_amount();
}
inline void PrepareCrossBorderPaymentRequest::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.amount)
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.amount)
  return _msg;
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.amount)
}

// string respondent = 5;
inline void PrepareCrossBorderPaymentRequest::clear_respondent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.ClearToEmpty();
}
inline const std::string& PrepareCrossBorderPaymentRequest::respondent() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent)
  return _internal_respondent();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareCrossBorderPaymentRequest::set_respondent(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent)
}
inline std::string* PrepareCrossBorderPaymentRequest::mutable_respondent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_respondent();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent)
  return _s;
}
inline const std::string& PrepareCrossBorderPaymentRequest::_internal_respondent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.respondent_.Get();
}
inline void PrepareCrossBorderPaymentRequest::_internal_set_respondent(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.Set(value, GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::_internal_mutable_respondent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.respondent_.Mutable( GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::release_respondent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent)
  return _impl_.respondent_.Release();
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_respondent(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respondent_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.respondent_.IsDefault()) {
          _impl_.respondent_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent)
}

// .common.Amount respondent_amount = 6;
inline bool PrepareCrossBorderPaymentRequest::has_respondent_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.respondent_amount_ != nullptr);
  return value;
}
inline const ::common::Amount& PrepareCrossBorderPaymentRequest::_internal_respondent_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.respondent_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& PrepareCrossBorderPaymentRequest::respondent_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent_amount)
  return _internal_respondent_amount();
}
inline void PrepareCrossBorderPaymentRequest::unsafe_arena_set_allocated_respondent_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondent_amount_);
  }
  _impl_.respondent_amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent_amount)
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::release_respondent_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Amount* released = _impl_.respondent_amount_;
  _impl_.respondent_amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::unsafe_arena_release_respondent_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent_amount)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::common::Amount* temp = _impl_.respondent_amount_;
  _impl_.respondent_amount_ = nullptr;
  return temp;
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::_internal_mutable_respondent_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.respondent_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.respondent_amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.respondent_amount_;
}
inline ::common::Amount* PrepareCrossBorderPaymentRequest::mutable_respondent_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::common::Amount* _msg = _internal_mutable_respondent_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent_amount)
  return _msg;
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_respondent_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondent_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.respondent_amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.respondent_amount)
}

// string memo = 7;
inline void PrepareCrossBorderPaymentRequest::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& PrepareCrossBorderPaymentRequest::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareCrossBorderPaymentRequest::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentRequest.memo)
}
inline std::string* PrepareCrossBorderPaymentRequest::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentRequest.memo)
  return _s;
}
inline const std::string& PrepareCrossBorderPaymentRequest::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void PrepareCrossBorderPaymentRequest::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* PrepareCrossBorderPaymentRequest::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentRequest.memo)
  return _impl_.memo_.Release();
}
inline void PrepareCrossBorderPaymentRequest::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentRequest.memo)
}

// uint32 timeout = 8;
inline void PrepareCrossBorderPaymentRequest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t PrepareCrossBorderPaymentRequest::timeout() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentRequest.timeout)
  return _internal_timeout();
}
inline void PrepareCrossBorderPaymentRequest::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentRequest.timeout)
}
inline ::uint32_t PrepareCrossBorderPaymentRequest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void PrepareCrossBorderPaymentRequest::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// -------------------------------------------------------------------

// PrepareCrossBorderPaymentResponse

// .wallet_api.v1.PrepareCrossBorderPaymentResponse.Status status = 1;
inline void PrepareCrossBorderPaymentResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status PrepareCrossBorderPaymentResponse::status() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentResponse.status)
  return _internal_status();
}
inline void PrepareCrossBorderPaymentResponse::set_status(::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentResponse.status)
}
inline ::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status PrepareCrossBorderPaymentResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status>(_impl_.status_);
}
inline void PrepareCrossBorderPaymentResponse::_internal_set_status(::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string uetr = 2;
inline void PrepareCrossBorderPaymentResponse::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& PrepareCrossBorderPaymentResponse::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PrepareCrossBorderPaymentResponse.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrepareCrossBorderPaymentResponse::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PrepareCrossBorderPaymentResponse.uetr)
}
inline std::string* PrepareCrossBorderPaymentResponse::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PrepareCrossBorderPaymentResponse.uetr)
  return _s;
}
inline const std::string& PrepareCrossBorderPaymentResponse::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void PrepareCrossBorderPaymentResponse::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* PrepareCrossBorderPaymentResponse::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* PrepareCrossBorderPaymentResponse::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PrepareCrossBorderPaymentResponse.uetr)
  return _impl_.uetr_.Release();
}
inline void PrepareCrossBorderPaymentResponse::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PrepareCrossBorderPaymentResponse.uetr)
}

// -------------------------------------------------------------------

// PreparePaymentWithImplicitFundsChangeRequest

// string recipient = 1;
inline void PreparePaymentWithImplicitFundsChangeRequest::clear_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.ClearToEmpty();
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::recipient() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.recipient)
  return _internal_recipient();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreparePaymentWithImplicitFundsChangeRequest::set_recipient(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.recipient)
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::mutable_recipient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recipient();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.recipient)
  return _s;
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::_internal_recipient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recipient_.Get();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::_internal_set_recipient(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.Set(value, GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::_internal_mutable_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recipient_.Mutable( GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::release_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.recipient)
  return _impl_.recipient_.Release();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::set_allocated_recipient(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.recipient_.IsDefault()) {
          _impl_.recipient_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.recipient)
}

// .common.Amount amount = 2;
inline bool PreparePaymentWithImplicitFundsChangeRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::common::Amount& PreparePaymentWithImplicitFundsChangeRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& PreparePaymentWithImplicitFundsChangeRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.amount)
  return _internal_amount();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::unsafe_arena_set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.amount)
}
inline ::common::Amount* PreparePaymentWithImplicitFundsChangeRequest::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* PreparePaymentWithImplicitFundsChangeRequest::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::common::Amount* PreparePaymentWithImplicitFundsChangeRequest::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::common::Amount* PreparePaymentWithImplicitFundsChangeRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.amount)
  return _msg;
}
inline void PreparePaymentWithImplicitFundsChangeRequest::set_allocated_amount(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.amount)
}

// string user_reference = 3;
inline void PreparePaymentWithImplicitFundsChangeRequest::clear_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.ClearToEmpty();
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::user_reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.user_reference)
  return _internal_user_reference();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreparePaymentWithImplicitFundsChangeRequest::set_user_reference(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.user_reference)
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::mutable_user_reference() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_reference();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.user_reference)
  return _s;
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::_internal_user_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_reference_.Get();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::_internal_set_user_reference(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.Set(value, GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::_internal_mutable_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_reference_.Mutable( GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::release_user_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.user_reference)
  return _impl_.user_reference_.Release();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::set_allocated_user_reference(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_reference_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_reference_.IsDefault()) {
          _impl_.user_reference_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.user_reference)
}

// string wallet_id = 4;
inline void PreparePaymentWithImplicitFundsChangeRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreparePaymentWithImplicitFundsChangeRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.wallet_id)
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.wallet_id)
  return _s;
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.wallet_id)
}

// string api_key = 5;
inline void PreparePaymentWithImplicitFundsChangeRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreparePaymentWithImplicitFundsChangeRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.api_key)
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.api_key)
  return _s;
}
inline const std::string& PreparePaymentWithImplicitFundsChangeRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void PreparePaymentWithImplicitFundsChangeRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeRequest.api_key)
}

// -------------------------------------------------------------------

// PreparePaymentWithImplicitFundsChangeResponse

// .wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.Status status = 1;
inline void PreparePaymentWithImplicitFundsChangeResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status PreparePaymentWithImplicitFundsChangeResponse::status() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.status)
  return _internal_status();
}
inline void PreparePaymentWithImplicitFundsChangeResponse::set_status(::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.status)
}
inline ::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status PreparePaymentWithImplicitFundsChangeResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status>(_impl_.status_);
}
inline void PreparePaymentWithImplicitFundsChangeResponse::_internal_set_status(::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string uetr = 2;
inline void PreparePaymentWithImplicitFundsChangeResponse::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& PreparePaymentWithImplicitFundsChangeResponse::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreparePaymentWithImplicitFundsChangeResponse::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.uetr)
}
inline std::string* PreparePaymentWithImplicitFundsChangeResponse::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.uetr)
  return _s;
}
inline const std::string& PreparePaymentWithImplicitFundsChangeResponse::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void PreparePaymentWithImplicitFundsChangeResponse::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeResponse::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* PreparePaymentWithImplicitFundsChangeResponse::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.uetr)
  return _impl_.uetr_.Release();
}
inline void PreparePaymentWithImplicitFundsChangeResponse::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.PreparePaymentWithImplicitFundsChangeResponse.uetr)
}

// -------------------------------------------------------------------

// ResumePausedTransactionRequest

// string wallet_id = 1;
inline void ResumePausedTransactionRequest::clear_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.ClearToEmpty();
}
inline const std::string& ResumePausedTransactionRequest::wallet_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ResumePausedTransactionRequest.wallet_id)
  return _internal_wallet_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResumePausedTransactionRequest::set_wallet_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ResumePausedTransactionRequest.wallet_id)
}
inline std::string* ResumePausedTransactionRequest::mutable_wallet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wallet_id();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ResumePausedTransactionRequest.wallet_id)
  return _s;
}
inline const std::string& ResumePausedTransactionRequest::_internal_wallet_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wallet_id_.Get();
}
inline void ResumePausedTransactionRequest::_internal_set_wallet_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.Set(value, GetArena());
}
inline std::string* ResumePausedTransactionRequest::_internal_mutable_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wallet_id_.Mutable( GetArena());
}
inline std::string* ResumePausedTransactionRequest::release_wallet_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ResumePausedTransactionRequest.wallet_id)
  return _impl_.wallet_id_.Release();
}
inline void ResumePausedTransactionRequest::set_allocated_wallet_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wallet_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wallet_id_.IsDefault()) {
          _impl_.wallet_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ResumePausedTransactionRequest.wallet_id)
}

// string api_key = 2;
inline void ResumePausedTransactionRequest::clear_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.ClearToEmpty();
}
inline const std::string& ResumePausedTransactionRequest::api_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ResumePausedTransactionRequest.api_key)
  return _internal_api_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResumePausedTransactionRequest::set_api_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ResumePausedTransactionRequest.api_key)
}
inline std::string* ResumePausedTransactionRequest::mutable_api_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_key();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ResumePausedTransactionRequest.api_key)
  return _s;
}
inline const std::string& ResumePausedTransactionRequest::_internal_api_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_key_.Get();
}
inline void ResumePausedTransactionRequest::_internal_set_api_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.Set(value, GetArena());
}
inline std::string* ResumePausedTransactionRequest::_internal_mutable_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_key_.Mutable( GetArena());
}
inline std::string* ResumePausedTransactionRequest::release_api_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ResumePausedTransactionRequest.api_key)
  return _impl_.api_key_.Release();
}
inline void ResumePausedTransactionRequest::set_allocated_api_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.api_key_.IsDefault()) {
          _impl_.api_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ResumePausedTransactionRequest.api_key)
}

// string uetr = 3;
inline void ResumePausedTransactionRequest::clear_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.ClearToEmpty();
}
inline const std::string& ResumePausedTransactionRequest::uetr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ResumePausedTransactionRequest.uetr)
  return _internal_uetr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResumePausedTransactionRequest::set_uetr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wallet_api.v1.ResumePausedTransactionRequest.uetr)
}
inline std::string* ResumePausedTransactionRequest::mutable_uetr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uetr();
  // @@protoc_insertion_point(field_mutable:wallet_api.v1.ResumePausedTransactionRequest.uetr)
  return _s;
}
inline const std::string& ResumePausedTransactionRequest::_internal_uetr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uetr_.Get();
}
inline void ResumePausedTransactionRequest::_internal_set_uetr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.Set(value, GetArena());
}
inline std::string* ResumePausedTransactionRequest::_internal_mutable_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uetr_.Mutable( GetArena());
}
inline std::string* ResumePausedTransactionRequest::release_uetr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wallet_api.v1.ResumePausedTransactionRequest.uetr)
  return _impl_.uetr_.Release();
}
inline void ResumePausedTransactionRequest::set_allocated_uetr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uetr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uetr_.IsDefault()) {
          _impl_.uetr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:wallet_api.v1.ResumePausedTransactionRequest.uetr)
}

// bool accept = 4;
inline void ResumePausedTransactionRequest::clear_accept() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_ = false;
}
inline bool ResumePausedTransactionRequest::accept() const {
  // @@protoc_insertion_point(field_get:wallet_api.v1.ResumePausedTransactionRequest.accept)
  return _internal_accept();
}
inline void ResumePausedTransactionRequest::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:wallet_api.v1.ResumePausedTransactionRequest.accept)
}
inline bool ResumePausedTransactionRequest::_internal_accept() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accept_;
}
inline void ResumePausedTransactionRequest::_internal_set_accept(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_ = value;
}

// -------------------------------------------------------------------

// ResumePausedTransactionResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wallet_api


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::wallet_api::v1::PrepareFundsChangeResponse_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wallet_api::v1::PrepareFundsChangeResponse_Status>() {
  return ::wallet_api::v1::PrepareFundsChangeResponse_Status_descriptor();
}
template <>
struct is_proto_enum<::wallet_api::v1::PrepareTransactionResponse_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wallet_api::v1::PrepareTransactionResponse_Status>() {
  return ::wallet_api::v1::PrepareTransactionResponse_Status_descriptor();
}
template <>
struct is_proto_enum<::wallet_api::v1::BalanceDetail_Kind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wallet_api::v1::BalanceDetail_Kind>() {
  return ::wallet_api::v1::BalanceDetail_Kind_descriptor();
}
template <>
struct is_proto_enum<::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status>() {
  return ::wallet_api::v1::PrepareAtomicAssetSwapResponse_Status_descriptor();
}
template <>
struct is_proto_enum<::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status>() {
  return ::wallet_api::v1::PrepareCrossBorderPaymentResponse_Status_descriptor();
}
template <>
struct is_proto_enum<::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status>() {
  return ::wallet_api::v1::PreparePaymentWithImplicitFundsChangeResponse_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_wallet_5fapi_2fv1_2fwallet_2eproto_2epb_2eh
