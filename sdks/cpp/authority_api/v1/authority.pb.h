// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: authority_api/v1/authority.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_authority_5fapi_2fv1_2fauthority_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_authority_5fapi_2fv1_2fauthority_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_authority_5fapi_2fv1_2fauthority_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_authority_5fapi_2fv1_2fauthority_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_authority_5fapi_2fv1_2fauthority_2eproto;
namespace authority_api {
namespace v1 {
class AddAssetRequest;
struct AddAssetRequestDefaultTypeInternal;
extern AddAssetRequestDefaultTypeInternal _AddAssetRequest_default_instance_;
class AddAssetResponse;
struct AddAssetResponseDefaultTypeInternal;
extern AddAssetResponseDefaultTypeInternal _AddAssetResponse_default_instance_;
class AuthorizeRequest;
struct AuthorizeRequestDefaultTypeInternal;
extern AuthorizeRequestDefaultTypeInternal _AuthorizeRequest_default_instance_;
class AuthorizeResponse;
struct AuthorizeResponseDefaultTypeInternal;
extern AuthorizeResponseDefaultTypeInternal _AuthorizeResponse_default_instance_;
class GetIssuerLimitsRequest;
struct GetIssuerLimitsRequestDefaultTypeInternal;
extern GetIssuerLimitsRequestDefaultTypeInternal _GetIssuerLimitsRequest_default_instance_;
class GetIssuerLimitsResponse;
struct GetIssuerLimitsResponseDefaultTypeInternal;
extern GetIssuerLimitsResponseDefaultTypeInternal _GetIssuerLimitsResponse_default_instance_;
class GetNetworkInfoRequest;
struct GetNetworkInfoRequestDefaultTypeInternal;
extern GetNetworkInfoRequestDefaultTypeInternal _GetNetworkInfoRequest_default_instance_;
class GetNetworkInfoResponse;
struct GetNetworkInfoResponseDefaultTypeInternal;
extern GetNetworkInfoResponseDefaultTypeInternal _GetNetworkInfoResponse_default_instance_;
class GetNotaryRequest;
struct GetNotaryRequestDefaultTypeInternal;
extern GetNotaryRequestDefaultTypeInternal _GetNotaryRequest_default_instance_;
class GetNotaryResponse;
struct GetNotaryResponseDefaultTypeInternal;
extern GetNotaryResponseDefaultTypeInternal _GetNotaryResponse_default_instance_;
class ListGovernedAssetsRequest;
struct ListGovernedAssetsRequestDefaultTypeInternal;
extern ListGovernedAssetsRequestDefaultTypeInternal _ListGovernedAssetsRequest_default_instance_;
class ListGovernedAssetsResponse;
struct ListGovernedAssetsResponseDefaultTypeInternal;
extern ListGovernedAssetsResponseDefaultTypeInternal _ListGovernedAssetsResponse_default_instance_;
class ListGovernedAssetsResponse_AssetDataEntry_DoNotUse;
struct ListGovernedAssetsResponse_AssetDataEntry_DoNotUseDefaultTypeInternal;
extern ListGovernedAssetsResponse_AssetDataEntry_DoNotUseDefaultTypeInternal _ListGovernedAssetsResponse_AssetDataEntry_DoNotUse_default_instance_;
class RemoveAssetRequest;
struct RemoveAssetRequestDefaultTypeInternal;
extern RemoveAssetRequestDefaultTypeInternal _RemoveAssetRequest_default_instance_;
class RemoveAssetResponse;
struct RemoveAssetResponseDefaultTypeInternal;
extern RemoveAssetResponseDefaultTypeInternal _RemoveAssetResponse_default_instance_;
class SetGovernedAssetsRequest;
struct SetGovernedAssetsRequestDefaultTypeInternal;
extern SetGovernedAssetsRequestDefaultTypeInternal _SetGovernedAssetsRequest_default_instance_;
class SetGovernedAssetsRequest_AssetDataEntry_DoNotUse;
struct SetGovernedAssetsRequest_AssetDataEntry_DoNotUseDefaultTypeInternal;
extern SetGovernedAssetsRequest_AssetDataEntry_DoNotUseDefaultTypeInternal _SetGovernedAssetsRequest_AssetDataEntry_DoNotUse_default_instance_;
class SetGovernedAssetsResponse;
struct SetGovernedAssetsResponseDefaultTypeInternal;
extern SetGovernedAssetsResponseDefaultTypeInternal _SetGovernedAssetsResponse_default_instance_;
class SetIssuerLimitRequest;
struct SetIssuerLimitRequestDefaultTypeInternal;
extern SetIssuerLimitRequestDefaultTypeInternal _SetIssuerLimitRequest_default_instance_;
class SetIssuerLimitResponse;
struct SetIssuerLimitResponseDefaultTypeInternal;
extern SetIssuerLimitResponseDefaultTypeInternal _SetIssuerLimitResponse_default_instance_;
}  // namespace v1
}  // namespace authority_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace authority_api {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SetGovernedAssetsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:authority_api.v1.SetGovernedAssetsResponse) */ {
 public:
  inline SetGovernedAssetsResponse() : SetGovernedAssetsResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetGovernedAssetsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetGovernedAssetsResponse(const SetGovernedAssetsResponse& from) : SetGovernedAssetsResponse(nullptr, from) {}
  inline SetGovernedAssetsResponse(SetGovernedAssetsResponse&& from) noexcept
      : SetGovernedAssetsResponse(nullptr, std::move(from)) {}
  inline SetGovernedAssetsResponse& operator=(const SetGovernedAssetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGovernedAssetsResponse& operator=(SetGovernedAssetsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGovernedAssetsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGovernedAssetsResponse* internal_default_instance() {
    return reinterpret_cast<const SetGovernedAssetsResponse*>(
        &_SetGovernedAssetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SetGovernedAssetsResponse& a, SetGovernedAssetsResponse& b) { a.Swap(&b); }
  inline void Swap(SetGovernedAssetsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGovernedAssetsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGovernedAssetsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SetGovernedAssetsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetGovernedAssetsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetGovernedAssetsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.SetGovernedAssetsResponse"; }

 protected:
  explicit SetGovernedAssetsResponse(::google::protobuf::Arena* arena);
  SetGovernedAssetsResponse(::google::protobuf::Arena* arena, const SetGovernedAssetsResponse& from);
  SetGovernedAssetsResponse(::google::protobuf::Arena* arena, SetGovernedAssetsResponse&& from) noexcept
      : SetGovernedAssetsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:authority_api.v1.SetGovernedAssetsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SetGovernedAssetsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetGovernedAssetsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class RemoveAssetResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:authority_api.v1.RemoveAssetResponse) */ {
 public:
  inline RemoveAssetResponse() : RemoveAssetResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveAssetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveAssetResponse(const RemoveAssetResponse& from) : RemoveAssetResponse(nullptr, from) {}
  inline RemoveAssetResponse(RemoveAssetResponse&& from) noexcept
      : RemoveAssetResponse(nullptr, std::move(from)) {}
  inline RemoveAssetResponse& operator=(const RemoveAssetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveAssetResponse& operator=(RemoveAssetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveAssetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveAssetResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveAssetResponse*>(
        &_RemoveAssetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(RemoveAssetResponse& a, RemoveAssetResponse& b) { a.Swap(&b); }
  inline void Swap(RemoveAssetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveAssetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveAssetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RemoveAssetResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveAssetResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveAssetResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.RemoveAssetResponse"; }

 protected:
  explicit RemoveAssetResponse(::google::protobuf::Arena* arena);
  RemoveAssetResponse(::google::protobuf::Arena* arena, const RemoveAssetResponse& from);
  RemoveAssetResponse(::google::protobuf::Arena* arena, RemoveAssetResponse&& from) noexcept
      : RemoveAssetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:authority_api.v1.RemoveAssetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RemoveAssetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveAssetResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class RemoveAssetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.RemoveAssetRequest) */ {
 public:
  inline RemoveAssetRequest() : RemoveAssetRequest(nullptr) {}
  ~RemoveAssetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveAssetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveAssetRequest(const RemoveAssetRequest& from) : RemoveAssetRequest(nullptr, from) {}
  inline RemoveAssetRequest(RemoveAssetRequest&& from) noexcept
      : RemoveAssetRequest(nullptr, std::move(from)) {}
  inline RemoveAssetRequest& operator=(const RemoveAssetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveAssetRequest& operator=(RemoveAssetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveAssetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveAssetRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveAssetRequest*>(
        &_RemoveAssetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(RemoveAssetRequest& a, RemoveAssetRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveAssetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveAssetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveAssetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RemoveAssetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveAssetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveAssetRequest& from) { RemoveAssetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveAssetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.RemoveAssetRequest"; }

 protected:
  explicit RemoveAssetRequest(::google::protobuf::Arena* arena);
  RemoveAssetRequest(::google::protobuf::Arena* arena, const RemoveAssetRequest& from);
  RemoveAssetRequest(::google::protobuf::Arena* arena, RemoveAssetRequest&& from) noexcept
      : RemoveAssetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyCodeFieldNumber = 1,
  };
  // string currency_code = 1;
  void clear_currency_code() ;
  const std::string& currency_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency_code(Arg_&& arg, Args_... args);
  std::string* mutable_currency_code();
  PROTOBUF_NODISCARD std::string* release_currency_code();
  void set_allocated_currency_code(std::string* value);

  private:
  const std::string& _internal_currency_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency_code(
      const std::string& value);
  std::string* _internal_mutable_currency_code();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.RemoveAssetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RemoveAssetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveAssetRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr currency_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class ListGovernedAssetsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:authority_api.v1.ListGovernedAssetsRequest) */ {
 public:
  inline ListGovernedAssetsRequest() : ListGovernedAssetsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListGovernedAssetsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListGovernedAssetsRequest(const ListGovernedAssetsRequest& from) : ListGovernedAssetsRequest(nullptr, from) {}
  inline ListGovernedAssetsRequest(ListGovernedAssetsRequest&& from) noexcept
      : ListGovernedAssetsRequest(nullptr, std::move(from)) {}
  inline ListGovernedAssetsRequest& operator=(const ListGovernedAssetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListGovernedAssetsRequest& operator=(ListGovernedAssetsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListGovernedAssetsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListGovernedAssetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListGovernedAssetsRequest*>(
        &_ListGovernedAssetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ListGovernedAssetsRequest& a, ListGovernedAssetsRequest& b) { a.Swap(&b); }
  inline void Swap(ListGovernedAssetsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListGovernedAssetsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListGovernedAssetsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListGovernedAssetsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListGovernedAssetsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListGovernedAssetsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.ListGovernedAssetsRequest"; }

 protected:
  explicit ListGovernedAssetsRequest(::google::protobuf::Arena* arena);
  ListGovernedAssetsRequest(::google::protobuf::Arena* arena, const ListGovernedAssetsRequest& from);
  ListGovernedAssetsRequest(::google::protobuf::Arena* arena, ListGovernedAssetsRequest&& from) noexcept
      : ListGovernedAssetsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:authority_api.v1.ListGovernedAssetsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListGovernedAssetsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListGovernedAssetsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class GetNotaryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.GetNotaryResponse) */ {
 public:
  inline GetNotaryResponse() : GetNotaryResponse(nullptr) {}
  ~GetNotaryResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNotaryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNotaryResponse(const GetNotaryResponse& from) : GetNotaryResponse(nullptr, from) {}
  inline GetNotaryResponse(GetNotaryResponse&& from) noexcept
      : GetNotaryResponse(nullptr, std::move(from)) {}
  inline GetNotaryResponse& operator=(const GetNotaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNotaryResponse& operator=(GetNotaryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNotaryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNotaryResponse* internal_default_instance() {
    return reinterpret_cast<const GetNotaryResponse*>(
        &_GetNotaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GetNotaryResponse& a, GetNotaryResponse& b) { a.Swap(&b); }
  inline void Swap(GetNotaryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNotaryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNotaryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetNotaryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNotaryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNotaryResponse& from) { GetNotaryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetNotaryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.GetNotaryResponse"; }

 protected:
  explicit GetNotaryResponse(::google::protobuf::Arena* arena);
  GetNotaryResponse(::google::protobuf::Arena* arena, const GetNotaryResponse& from);
  GetNotaryResponse(::google::protobuf::Arena* arena, GetNotaryResponse&& from) noexcept
      : GetNotaryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 1,
  };
  // bytes signature = 1;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.GetNotaryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetNotaryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNotaryResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class GetNotaryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.GetNotaryRequest) */ {
 public:
  inline GetNotaryRequest() : GetNotaryRequest(nullptr) {}
  ~GetNotaryRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNotaryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNotaryRequest(const GetNotaryRequest& from) : GetNotaryRequest(nullptr, from) {}
  inline GetNotaryRequest(GetNotaryRequest&& from) noexcept
      : GetNotaryRequest(nullptr, std::move(from)) {}
  inline GetNotaryRequest& operator=(const GetNotaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNotaryRequest& operator=(GetNotaryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNotaryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNotaryRequest* internal_default_instance() {
    return reinterpret_cast<const GetNotaryRequest*>(
        &_GetNotaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GetNotaryRequest& a, GetNotaryRequest& b) { a.Swap(&b); }
  inline void Swap(GetNotaryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNotaryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNotaryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetNotaryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNotaryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNotaryRequest& from) { GetNotaryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetNotaryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.GetNotaryRequest"; }

 protected:
  explicit GetNotaryRequest(::google::protobuf::Arena* arena);
  GetNotaryRequest(::google::protobuf::Arena* arena, const GetNotaryRequest& from);
  GetNotaryRequest(::google::protobuf::Arena* arena, GetNotaryRequest&& from) noexcept
      : GetNotaryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVerifierFieldNumber = 1,
  };
  // string verifier = 1;
  void clear_verifier() ;
  const std::string& verifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifier(Arg_&& arg, Args_... args);
  std::string* mutable_verifier();
  PROTOBUF_NODISCARD std::string* release_verifier();
  void set_allocated_verifier(std::string* value);

  private:
  const std::string& _internal_verifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifier(
      const std::string& value);
  std::string* _internal_mutable_verifier();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.GetNotaryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetNotaryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNotaryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr verifier_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class GetNetworkInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.GetNetworkInfoResponse) */ {
 public:
  inline GetNetworkInfoResponse() : GetNetworkInfoResponse(nullptr) {}
  ~GetNetworkInfoResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNetworkInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNetworkInfoResponse(const GetNetworkInfoResponse& from) : GetNetworkInfoResponse(nullptr, from) {}
  inline GetNetworkInfoResponse(GetNetworkInfoResponse&& from) noexcept
      : GetNetworkInfoResponse(nullptr, std::move(from)) {}
  inline GetNetworkInfoResponse& operator=(const GetNetworkInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNetworkInfoResponse& operator=(GetNetworkInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNetworkInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNetworkInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetNetworkInfoResponse*>(
        &_GetNetworkInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetNetworkInfoResponse& a, GetNetworkInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetNetworkInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNetworkInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNetworkInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetNetworkInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNetworkInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNetworkInfoResponse& from) { GetNetworkInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetNetworkInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.GetNetworkInfoResponse"; }

 protected:
  explicit GetNetworkInfoResponse(::google::protobuf::Arena* arena);
  GetNetworkInfoResponse(::google::protobuf::Arena* arena, const GetNetworkInfoResponse& from);
  GetNetworkInfoResponse(::google::protobuf::Arena* arena, GetNetworkInfoResponse&& from) noexcept
      : GetNetworkInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmissaryFieldNumber = 1,
    kTransactionManagerFieldNumber = 2,
  };
  // string emissary = 1;
  void clear_emissary() ;
  const std::string& emissary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_emissary(Arg_&& arg, Args_... args);
  std::string* mutable_emissary();
  PROTOBUF_NODISCARD std::string* release_emissary();
  void set_allocated_emissary(std::string* value);

  private:
  const std::string& _internal_emissary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_emissary(
      const std::string& value);
  std::string* _internal_mutable_emissary();

  public:
  // string transaction_manager = 2;
  void clear_transaction_manager() ;
  const std::string& transaction_manager() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transaction_manager(Arg_&& arg, Args_... args);
  std::string* mutable_transaction_manager();
  PROTOBUF_NODISCARD std::string* release_transaction_manager();
  void set_allocated_transaction_manager(std::string* value);

  private:
  const std::string& _internal_transaction_manager() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transaction_manager(
      const std::string& value);
  std::string* _internal_mutable_transaction_manager();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.GetNetworkInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetNetworkInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNetworkInfoResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr emissary_;
    ::google::protobuf::internal::ArenaStringPtr transaction_manager_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class GetNetworkInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:authority_api.v1.GetNetworkInfoRequest) */ {
 public:
  inline GetNetworkInfoRequest() : GetNetworkInfoRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNetworkInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNetworkInfoRequest(const GetNetworkInfoRequest& from) : GetNetworkInfoRequest(nullptr, from) {}
  inline GetNetworkInfoRequest(GetNetworkInfoRequest&& from) noexcept
      : GetNetworkInfoRequest(nullptr, std::move(from)) {}
  inline GetNetworkInfoRequest& operator=(const GetNetworkInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNetworkInfoRequest& operator=(GetNetworkInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNetworkInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNetworkInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetNetworkInfoRequest*>(
        &_GetNetworkInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetNetworkInfoRequest& a, GetNetworkInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetNetworkInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNetworkInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNetworkInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetNetworkInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetNetworkInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetNetworkInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.GetNetworkInfoRequest"; }

 protected:
  explicit GetNetworkInfoRequest(::google::protobuf::Arena* arena);
  GetNetworkInfoRequest(::google::protobuf::Arena* arena, const GetNetworkInfoRequest& from);
  GetNetworkInfoRequest(::google::protobuf::Arena* arena, GetNetworkInfoRequest&& from) noexcept
      : GetNetworkInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:authority_api.v1.GetNetworkInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetNetworkInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNetworkInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class GetIssuerLimitsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.GetIssuerLimitsRequest) */ {
 public:
  inline GetIssuerLimitsRequest() : GetIssuerLimitsRequest(nullptr) {}
  ~GetIssuerLimitsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetIssuerLimitsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetIssuerLimitsRequest(const GetIssuerLimitsRequest& from) : GetIssuerLimitsRequest(nullptr, from) {}
  inline GetIssuerLimitsRequest(GetIssuerLimitsRequest&& from) noexcept
      : GetIssuerLimitsRequest(nullptr, std::move(from)) {}
  inline GetIssuerLimitsRequest& operator=(const GetIssuerLimitsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetIssuerLimitsRequest& operator=(GetIssuerLimitsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetIssuerLimitsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetIssuerLimitsRequest* internal_default_instance() {
    return reinterpret_cast<const GetIssuerLimitsRequest*>(
        &_GetIssuerLimitsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetIssuerLimitsRequest& a, GetIssuerLimitsRequest& b) { a.Swap(&b); }
  inline void Swap(GetIssuerLimitsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetIssuerLimitsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetIssuerLimitsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetIssuerLimitsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetIssuerLimitsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetIssuerLimitsRequest& from) { GetIssuerLimitsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetIssuerLimitsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.GetIssuerLimitsRequest"; }

 protected:
  explicit GetIssuerLimitsRequest(::google::protobuf::Arena* arena);
  GetIssuerLimitsRequest(::google::protobuf::Arena* arena, const GetIssuerLimitsRequest& from);
  GetIssuerLimitsRequest(::google::protobuf::Arena* arena, GetIssuerLimitsRequest&& from) noexcept
      : GetIssuerLimitsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIssuerPublicKeyFieldNumber = 2,
  };
  // string issuer_public_key = 2;
  void clear_issuer_public_key() ;
  const std::string& issuer_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_issuer_public_key();
  PROTOBUF_NODISCARD std::string* release_issuer_public_key();
  void set_allocated_issuer_public_key(std::string* value);

  private:
  const std::string& _internal_issuer_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer_public_key(
      const std::string& value);
  std::string* _internal_mutable_issuer_public_key();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.GetIssuerLimitsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetIssuerLimitsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetIssuerLimitsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr issuer_public_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class AuthorizeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.AuthorizeResponse) */ {
 public:
  inline AuthorizeResponse() : AuthorizeResponse(nullptr) {}
  ~AuthorizeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthorizeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthorizeResponse(const AuthorizeResponse& from) : AuthorizeResponse(nullptr, from) {}
  inline AuthorizeResponse(AuthorizeResponse&& from) noexcept
      : AuthorizeResponse(nullptr, std::move(from)) {}
  inline AuthorizeResponse& operator=(const AuthorizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthorizeResponse& operator=(AuthorizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthorizeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthorizeResponse* internal_default_instance() {
    return reinterpret_cast<const AuthorizeResponse*>(
        &_AuthorizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(AuthorizeResponse& a, AuthorizeResponse& b) { a.Swap(&b); }
  inline void Swap(AuthorizeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthorizeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthorizeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthorizeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthorizeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthorizeResponse& from) { AuthorizeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthorizeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.AuthorizeResponse"; }

 protected:
  explicit AuthorizeResponse(::google::protobuf::Arena* arena);
  AuthorizeResponse(::google::protobuf::Arena* arena, const AuthorizeResponse& from);
  AuthorizeResponse(::google::protobuf::Arena* arena, AuthorizeResponse&& from) noexcept
      : AuthorizeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPromissoryFileFieldNumber = 1,
  };
  // bytes promissory_file = 1;
  void clear_promissory_file() ;
  const std::string& promissory_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_promissory_file(Arg_&& arg, Args_... args);
  std::string* mutable_promissory_file();
  PROTOBUF_NODISCARD std::string* release_promissory_file();
  void set_allocated_promissory_file(std::string* value);

  private:
  const std::string& _internal_promissory_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_promissory_file(
      const std::string& value);
  std::string* _internal_mutable_promissory_file();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.AuthorizeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthorizeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthorizeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr promissory_file_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class AuthorizeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.AuthorizeRequest) */ {
 public:
  inline AuthorizeRequest() : AuthorizeRequest(nullptr) {}
  ~AuthorizeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthorizeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthorizeRequest(const AuthorizeRequest& from) : AuthorizeRequest(nullptr, from) {}
  inline AuthorizeRequest(AuthorizeRequest&& from) noexcept
      : AuthorizeRequest(nullptr, std::move(from)) {}
  inline AuthorizeRequest& operator=(const AuthorizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthorizeRequest& operator=(AuthorizeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthorizeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthorizeRequest* internal_default_instance() {
    return reinterpret_cast<const AuthorizeRequest*>(
        &_AuthorizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AuthorizeRequest& a, AuthorizeRequest& b) { a.Swap(&b); }
  inline void Swap(AuthorizeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthorizeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthorizeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthorizeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthorizeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthorizeRequest& from) { AuthorizeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthorizeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.AuthorizeRequest"; }

 protected:
  explicit AuthorizeRequest(::google::protobuf::Arena* arena);
  AuthorizeRequest(::google::protobuf::Arena* arena, const AuthorizeRequest& from);
  AuthorizeRequest(::google::protobuf::Arena* arena, AuthorizeRequest&& from) noexcept
      : AuthorizeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPromissoryFileFieldNumber = 1,
  };
  // bytes promissory_file = 1;
  void clear_promissory_file() ;
  const std::string& promissory_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_promissory_file(Arg_&& arg, Args_... args);
  std::string* mutable_promissory_file();
  PROTOBUF_NODISCARD std::string* release_promissory_file();
  void set_allocated_promissory_file(std::string* value);

  private:
  const std::string& _internal_promissory_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_promissory_file(
      const std::string& value);
  std::string* _internal_mutable_promissory_file();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.AuthorizeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthorizeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthorizeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr promissory_file_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class AddAssetResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:authority_api.v1.AddAssetResponse) */ {
 public:
  inline AddAssetResponse() : AddAssetResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddAssetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddAssetResponse(const AddAssetResponse& from) : AddAssetResponse(nullptr, from) {}
  inline AddAssetResponse(AddAssetResponse&& from) noexcept
      : AddAssetResponse(nullptr, std::move(from)) {}
  inline AddAssetResponse& operator=(const AddAssetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddAssetResponse& operator=(AddAssetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddAssetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddAssetResponse* internal_default_instance() {
    return reinterpret_cast<const AddAssetResponse*>(
        &_AddAssetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(AddAssetResponse& a, AddAssetResponse& b) { a.Swap(&b); }
  inline void Swap(AddAssetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddAssetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddAssetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<AddAssetResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddAssetResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddAssetResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.AddAssetResponse"; }

 protected:
  explicit AddAssetResponse(::google::protobuf::Arena* arena);
  AddAssetResponse(::google::protobuf::Arena* arena, const AddAssetResponse& from);
  AddAssetResponse(::google::protobuf::Arena* arena, AddAssetResponse&& from) noexcept
      : AddAssetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:authority_api.v1.AddAssetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddAssetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddAssetResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class SetIssuerLimitResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.SetIssuerLimitResponse) */ {
 public:
  inline SetIssuerLimitResponse() : SetIssuerLimitResponse(nullptr) {}
  ~SetIssuerLimitResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetIssuerLimitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetIssuerLimitResponse(const SetIssuerLimitResponse& from) : SetIssuerLimitResponse(nullptr, from) {}
  inline SetIssuerLimitResponse(SetIssuerLimitResponse&& from) noexcept
      : SetIssuerLimitResponse(nullptr, std::move(from)) {}
  inline SetIssuerLimitResponse& operator=(const SetIssuerLimitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetIssuerLimitResponse& operator=(SetIssuerLimitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetIssuerLimitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetIssuerLimitResponse* internal_default_instance() {
    return reinterpret_cast<const SetIssuerLimitResponse*>(
        &_SetIssuerLimitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SetIssuerLimitResponse& a, SetIssuerLimitResponse& b) { a.Swap(&b); }
  inline void Swap(SetIssuerLimitResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetIssuerLimitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetIssuerLimitResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SetIssuerLimitResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetIssuerLimitResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetIssuerLimitResponse& from) { SetIssuerLimitResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetIssuerLimitResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.SetIssuerLimitResponse"; }

 protected:
  explicit SetIssuerLimitResponse(::google::protobuf::Arena* arena);
  SetIssuerLimitResponse(::google::protobuf::Arena* arena, const SetIssuerLimitResponse& from);
  SetIssuerLimitResponse(::google::protobuf::Arena* arena, SetIssuerLimitResponse&& from) noexcept
      : SetIssuerLimitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 2,
    kLimitFieldNumber = 1,
  };
  // bytes signature = 2;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // .common.Amount limit = 1;
  bool has_limit() const;
  void clear_limit() ;
  const ::common::Amount& limit() const;
  PROTOBUF_NODISCARD ::common::Amount* release_limit();
  ::common::Amount* mutable_limit();
  void set_allocated_limit(::common::Amount* value);
  void unsafe_arena_set_allocated_limit(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_limit();

  private:
  const ::common::Amount& _internal_limit() const;
  ::common::Amount* _internal_mutable_limit();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.SetIssuerLimitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SetIssuerLimitResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetIssuerLimitResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::common::Amount* limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class SetIssuerLimitRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.SetIssuerLimitRequest) */ {
 public:
  inline SetIssuerLimitRequest() : SetIssuerLimitRequest(nullptr) {}
  ~SetIssuerLimitRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetIssuerLimitRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetIssuerLimitRequest(const SetIssuerLimitRequest& from) : SetIssuerLimitRequest(nullptr, from) {}
  inline SetIssuerLimitRequest(SetIssuerLimitRequest&& from) noexcept
      : SetIssuerLimitRequest(nullptr, std::move(from)) {}
  inline SetIssuerLimitRequest& operator=(const SetIssuerLimitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetIssuerLimitRequest& operator=(SetIssuerLimitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetIssuerLimitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetIssuerLimitRequest* internal_default_instance() {
    return reinterpret_cast<const SetIssuerLimitRequest*>(
        &_SetIssuerLimitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SetIssuerLimitRequest& a, SetIssuerLimitRequest& b) { a.Swap(&b); }
  inline void Swap(SetIssuerLimitRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetIssuerLimitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetIssuerLimitRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SetIssuerLimitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetIssuerLimitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetIssuerLimitRequest& from) { SetIssuerLimitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetIssuerLimitRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.SetIssuerLimitRequest"; }

 protected:
  explicit SetIssuerLimitRequest(::google::protobuf::Arena* arena);
  SetIssuerLimitRequest(::google::protobuf::Arena* arena, const SetIssuerLimitRequest& from);
  SetIssuerLimitRequest(::google::protobuf::Arena* arena, SetIssuerLimitRequest&& from) noexcept
      : SetIssuerLimitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIssuerPublicKeyFieldNumber = 2,
    kLimitFieldNumber = 1,
  };
  // string issuer_public_key = 2;
  void clear_issuer_public_key() ;
  const std::string& issuer_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_issuer_public_key();
  PROTOBUF_NODISCARD std::string* release_issuer_public_key();
  void set_allocated_issuer_public_key(std::string* value);

  private:
  const std::string& _internal_issuer_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer_public_key(
      const std::string& value);
  std::string* _internal_mutable_issuer_public_key();

  public:
  // .common.Amount limit = 1;
  bool has_limit() const;
  void clear_limit() ;
  const ::common::Amount& limit() const;
  PROTOBUF_NODISCARD ::common::Amount* release_limit();
  ::common::Amount* mutable_limit();
  void set_allocated_limit(::common::Amount* value);
  void unsafe_arena_set_allocated_limit(::common::Amount* value);
  ::common::Amount* unsafe_arena_release_limit();

  private:
  const ::common::Amount& _internal_limit() const;
  ::common::Amount* _internal_mutable_limit();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.SetIssuerLimitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SetIssuerLimitRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetIssuerLimitRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr issuer_public_key_;
    ::common::Amount* limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class SetGovernedAssetsRequest_AssetDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          SetGovernedAssetsRequest_AssetDataEntry_DoNotUse, std::string, ::common::AssetDenomination,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      SetGovernedAssetsRequest_AssetDataEntry_DoNotUse, std::string, ::common::AssetDenomination,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  SetGovernedAssetsRequest_AssetDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetGovernedAssetsRequest_AssetDataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SetGovernedAssetsRequest_AssetDataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SetGovernedAssetsRequest_AssetDataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SetGovernedAssetsRequest_AssetDataEntry_DoNotUse*>(
        &_SetGovernedAssetsRequest_AssetDataEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class ListGovernedAssetsResponse_AssetDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ListGovernedAssetsResponse_AssetDataEntry_DoNotUse, std::string, ::common::AssetDenomination,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ListGovernedAssetsResponse_AssetDataEntry_DoNotUse, std::string, ::common::AssetDenomination,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ListGovernedAssetsResponse_AssetDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListGovernedAssetsResponse_AssetDataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ListGovernedAssetsResponse_AssetDataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ListGovernedAssetsResponse_AssetDataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ListGovernedAssetsResponse_AssetDataEntry_DoNotUse*>(
        &_ListGovernedAssetsResponse_AssetDataEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class GetIssuerLimitsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.GetIssuerLimitsResponse) */ {
 public:
  inline GetIssuerLimitsResponse() : GetIssuerLimitsResponse(nullptr) {}
  ~GetIssuerLimitsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetIssuerLimitsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetIssuerLimitsResponse(const GetIssuerLimitsResponse& from) : GetIssuerLimitsResponse(nullptr, from) {}
  inline GetIssuerLimitsResponse(GetIssuerLimitsResponse&& from) noexcept
      : GetIssuerLimitsResponse(nullptr, std::move(from)) {}
  inline GetIssuerLimitsResponse& operator=(const GetIssuerLimitsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetIssuerLimitsResponse& operator=(GetIssuerLimitsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetIssuerLimitsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetIssuerLimitsResponse* internal_default_instance() {
    return reinterpret_cast<const GetIssuerLimitsResponse*>(
        &_GetIssuerLimitsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetIssuerLimitsResponse& a, GetIssuerLimitsResponse& b) { a.Swap(&b); }
  inline void Swap(GetIssuerLimitsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetIssuerLimitsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetIssuerLimitsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetIssuerLimitsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetIssuerLimitsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetIssuerLimitsResponse& from) { GetIssuerLimitsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetIssuerLimitsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.GetIssuerLimitsResponse"; }

 protected:
  explicit GetIssuerLimitsResponse(::google::protobuf::Arena* arena);
  GetIssuerLimitsResponse(::google::protobuf::Arena* arena, const GetIssuerLimitsResponse& from);
  GetIssuerLimitsResponse(::google::protobuf::Arena* arena, GetIssuerLimitsResponse&& from) noexcept
      : GetIssuerLimitsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLimitFieldNumber = 1,
    kIssuerPublicKeyFieldNumber = 2,
  };
  // repeated .common.Amount limit = 1;
  int limit_size() const;
  private:
  int _internal_limit_size() const;

  public:
  void clear_limit() ;
  ::common::Amount* mutable_limit(int index);
  ::google::protobuf::RepeatedPtrField<::common::Amount>* mutable_limit();

  private:
  const ::google::protobuf::RepeatedPtrField<::common::Amount>& _internal_limit() const;
  ::google::protobuf::RepeatedPtrField<::common::Amount>* _internal_mutable_limit();
  public:
  const ::common::Amount& limit(int index) const;
  ::common::Amount* add_limit();
  const ::google::protobuf::RepeatedPtrField<::common::Amount>& limit() const;
  // string issuer_public_key = 2;
  void clear_issuer_public_key() ;
  const std::string& issuer_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_issuer_public_key();
  PROTOBUF_NODISCARD std::string* release_issuer_public_key();
  void set_allocated_issuer_public_key(std::string* value);

  private:
  const std::string& _internal_issuer_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer_public_key(
      const std::string& value);
  std::string* _internal_mutable_issuer_public_key();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.GetIssuerLimitsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetIssuerLimitsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetIssuerLimitsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::common::Amount > limit_;
    ::google::protobuf::internal::ArenaStringPtr issuer_public_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class AddAssetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.AddAssetRequest) */ {
 public:
  inline AddAssetRequest() : AddAssetRequest(nullptr) {}
  ~AddAssetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddAssetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddAssetRequest(const AddAssetRequest& from) : AddAssetRequest(nullptr, from) {}
  inline AddAssetRequest(AddAssetRequest&& from) noexcept
      : AddAssetRequest(nullptr, std::move(from)) {}
  inline AddAssetRequest& operator=(const AddAssetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddAssetRequest& operator=(AddAssetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddAssetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddAssetRequest* internal_default_instance() {
    return reinterpret_cast<const AddAssetRequest*>(
        &_AddAssetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(AddAssetRequest& a, AddAssetRequest& b) { a.Swap(&b); }
  inline void Swap(AddAssetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddAssetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddAssetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddAssetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddAssetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddAssetRequest& from) { AddAssetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddAssetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.AddAssetRequest"; }

 protected:
  explicit AddAssetRequest(::google::protobuf::Arena* arena);
  AddAssetRequest(::google::protobuf::Arena* arena, const AddAssetRequest& from);
  AddAssetRequest(::google::protobuf::Arena* arena, AddAssetRequest&& from) noexcept
      : AddAssetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyCodeFieldNumber = 1,
    kAssetDenominationFieldNumber = 2,
  };
  // string currency_code = 1;
  void clear_currency_code() ;
  const std::string& currency_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency_code(Arg_&& arg, Args_... args);
  std::string* mutable_currency_code();
  PROTOBUF_NODISCARD std::string* release_currency_code();
  void set_allocated_currency_code(std::string* value);

  private:
  const std::string& _internal_currency_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency_code(
      const std::string& value);
  std::string* _internal_mutable_currency_code();

  public:
  // .common.AssetDenomination asset_denomination = 2;
  bool has_asset_denomination() const;
  void clear_asset_denomination() ;
  const ::common::AssetDenomination& asset_denomination() const;
  PROTOBUF_NODISCARD ::common::AssetDenomination* release_asset_denomination();
  ::common::AssetDenomination* mutable_asset_denomination();
  void set_allocated_asset_denomination(::common::AssetDenomination* value);
  void unsafe_arena_set_allocated_asset_denomination(::common::AssetDenomination* value);
  ::common::AssetDenomination* unsafe_arena_release_asset_denomination();

  private:
  const ::common::AssetDenomination& _internal_asset_denomination() const;
  ::common::AssetDenomination* _internal_mutable_asset_denomination();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.AddAssetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddAssetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddAssetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr currency_code_;
    ::common::AssetDenomination* asset_denomination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class SetGovernedAssetsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.SetGovernedAssetsRequest) */ {
 public:
  inline SetGovernedAssetsRequest() : SetGovernedAssetsRequest(nullptr) {}
  ~SetGovernedAssetsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetGovernedAssetsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetGovernedAssetsRequest(const SetGovernedAssetsRequest& from) : SetGovernedAssetsRequest(nullptr, from) {}
  inline SetGovernedAssetsRequest(SetGovernedAssetsRequest&& from) noexcept
      : SetGovernedAssetsRequest(nullptr, std::move(from)) {}
  inline SetGovernedAssetsRequest& operator=(const SetGovernedAssetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGovernedAssetsRequest& operator=(SetGovernedAssetsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGovernedAssetsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGovernedAssetsRequest* internal_default_instance() {
    return reinterpret_cast<const SetGovernedAssetsRequest*>(
        &_SetGovernedAssetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SetGovernedAssetsRequest& a, SetGovernedAssetsRequest& b) { a.Swap(&b); }
  inline void Swap(SetGovernedAssetsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGovernedAssetsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGovernedAssetsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SetGovernedAssetsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGovernedAssetsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetGovernedAssetsRequest& from) { SetGovernedAssetsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetGovernedAssetsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.SetGovernedAssetsRequest"; }

 protected:
  explicit SetGovernedAssetsRequest(::google::protobuf::Arena* arena);
  SetGovernedAssetsRequest(::google::protobuf::Arena* arena, const SetGovernedAssetsRequest& from);
  SetGovernedAssetsRequest(::google::protobuf::Arena* arena, SetGovernedAssetsRequest&& from) noexcept
      : SetGovernedAssetsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssetDataFieldNumber = 1,
  };
  // map<string, .common.AssetDenomination> asset_data = 1;
  int asset_data_size() const;
  private:
  int _internal_asset_data_size() const;

  public:
  void clear_asset_data() ;
  const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& asset_data() const;
  ::google::protobuf::Map<std::string, ::common::AssetDenomination>* mutable_asset_data();

  private:
  const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& _internal_asset_data() const;
  ::google::protobuf::Map<std::string, ::common::AssetDenomination>* _internal_mutable_asset_data();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.SetGovernedAssetsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SetGovernedAssetsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetGovernedAssetsRequest& from_msg);
    ::google::protobuf::internal::MapField<SetGovernedAssetsRequest_AssetDataEntry_DoNotUse, std::string, ::common::AssetDenomination,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        asset_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};
// -------------------------------------------------------------------

class ListGovernedAssetsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:authority_api.v1.ListGovernedAssetsResponse) */ {
 public:
  inline ListGovernedAssetsResponse() : ListGovernedAssetsResponse(nullptr) {}
  ~ListGovernedAssetsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListGovernedAssetsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListGovernedAssetsResponse(const ListGovernedAssetsResponse& from) : ListGovernedAssetsResponse(nullptr, from) {}
  inline ListGovernedAssetsResponse(ListGovernedAssetsResponse&& from) noexcept
      : ListGovernedAssetsResponse(nullptr, std::move(from)) {}
  inline ListGovernedAssetsResponse& operator=(const ListGovernedAssetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListGovernedAssetsResponse& operator=(ListGovernedAssetsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListGovernedAssetsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListGovernedAssetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListGovernedAssetsResponse*>(
        &_ListGovernedAssetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ListGovernedAssetsResponse& a, ListGovernedAssetsResponse& b) { a.Swap(&b); }
  inline void Swap(ListGovernedAssetsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListGovernedAssetsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListGovernedAssetsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListGovernedAssetsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListGovernedAssetsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListGovernedAssetsResponse& from) { ListGovernedAssetsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListGovernedAssetsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "authority_api.v1.ListGovernedAssetsResponse"; }

 protected:
  explicit ListGovernedAssetsResponse(::google::protobuf::Arena* arena);
  ListGovernedAssetsResponse(::google::protobuf::Arena* arena, const ListGovernedAssetsResponse& from);
  ListGovernedAssetsResponse(::google::protobuf::Arena* arena, ListGovernedAssetsResponse&& from) noexcept
      : ListGovernedAssetsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssetDataFieldNumber = 1,
  };
  // map<string, .common.AssetDenomination> asset_data = 1;
  int asset_data_size() const;
  private:
  int _internal_asset_data_size() const;

  public:
  void clear_asset_data() ;
  const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& asset_data() const;
  ::google::protobuf::Map<std::string, ::common::AssetDenomination>* mutable_asset_data();

  private:
  const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& _internal_asset_data() const;
  ::google::protobuf::Map<std::string, ::common::AssetDenomination>* _internal_mutable_asset_data();

  public:
  // @@protoc_insertion_point(class_scope:authority_api.v1.ListGovernedAssetsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListGovernedAssetsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListGovernedAssetsResponse& from_msg);
    ::google::protobuf::internal::MapField<ListGovernedAssetsResponse_AssetDataEntry_DoNotUse, std::string, ::common::AssetDenomination,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        asset_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_authority_5fapi_2fv1_2fauthority_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetIssuerLimitRequest

// .common.Amount limit = 1;
inline bool SetIssuerLimitRequest::has_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.limit_ != nullptr);
  return value;
}
inline const ::common::Amount& SetIssuerLimitRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.limit_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& SetIssuerLimitRequest::limit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.SetIssuerLimitRequest.limit)
  return _internal_limit();
}
inline void SetIssuerLimitRequest::unsafe_arena_set_allocated_limit(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limit_);
  }
  _impl_.limit_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:authority_api.v1.SetIssuerLimitRequest.limit)
}
inline ::common::Amount* SetIssuerLimitRequest::release_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.limit_;
  _impl_.limit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* SetIssuerLimitRequest::unsafe_arena_release_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.SetIssuerLimitRequest.limit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.limit_;
  _impl_.limit_ = nullptr;
  return temp;
}
inline ::common::Amount* SetIssuerLimitRequest::_internal_mutable_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.limit_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.limit_;
}
inline ::common::Amount* SetIssuerLimitRequest::mutable_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_limit();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.SetIssuerLimitRequest.limit)
  return _msg;
}
inline void SetIssuerLimitRequest::set_allocated_limit(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.limit_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.SetIssuerLimitRequest.limit)
}

// string issuer_public_key = 2;
inline void SetIssuerLimitRequest::clear_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.ClearToEmpty();
}
inline const std::string& SetIssuerLimitRequest::issuer_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.SetIssuerLimitRequest.issuer_public_key)
  return _internal_issuer_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetIssuerLimitRequest::set_issuer_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.SetIssuerLimitRequest.issuer_public_key)
}
inline std::string* SetIssuerLimitRequest::mutable_issuer_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer_public_key();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.SetIssuerLimitRequest.issuer_public_key)
  return _s;
}
inline const std::string& SetIssuerLimitRequest::_internal_issuer_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_public_key_.Get();
}
inline void SetIssuerLimitRequest::_internal_set_issuer_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.Set(value, GetArena());
}
inline std::string* SetIssuerLimitRequest::_internal_mutable_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_public_key_.Mutable( GetArena());
}
inline std::string* SetIssuerLimitRequest::release_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.SetIssuerLimitRequest.issuer_public_key)
  return _impl_.issuer_public_key_.Release();
}
inline void SetIssuerLimitRequest::set_allocated_issuer_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_public_key_.IsDefault()) {
          _impl_.issuer_public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.SetIssuerLimitRequest.issuer_public_key)
}

// -------------------------------------------------------------------

// SetIssuerLimitResponse

// .common.Amount limit = 1;
inline bool SetIssuerLimitResponse::has_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.limit_ != nullptr);
  return value;
}
inline const ::common::Amount& SetIssuerLimitResponse::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::Amount* p = _impl_.limit_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::Amount&>(::common::_Amount_default_instance_);
}
inline const ::common::Amount& SetIssuerLimitResponse::limit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.SetIssuerLimitResponse.limit)
  return _internal_limit();
}
inline void SetIssuerLimitResponse::unsafe_arena_set_allocated_limit(::common::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limit_);
  }
  _impl_.limit_ = reinterpret_cast<::common::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:authority_api.v1.SetIssuerLimitResponse.limit)
}
inline ::common::Amount* SetIssuerLimitResponse::release_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* released = _impl_.limit_;
  _impl_.limit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::Amount* SetIssuerLimitResponse::unsafe_arena_release_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.SetIssuerLimitResponse.limit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::Amount* temp = _impl_.limit_;
  _impl_.limit_ = nullptr;
  return temp;
}
inline ::common::Amount* SetIssuerLimitResponse::_internal_mutable_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::Amount>(GetArena());
    _impl_.limit_ = reinterpret_cast<::common::Amount*>(p);
  }
  return _impl_.limit_;
}
inline ::common::Amount* SetIssuerLimitResponse::mutable_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::Amount* _msg = _internal_mutable_limit();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.SetIssuerLimitResponse.limit)
  return _msg;
}
inline void SetIssuerLimitResponse::set_allocated_limit(::common::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.limit_ = reinterpret_cast<::common::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.SetIssuerLimitResponse.limit)
}

// bytes signature = 2;
inline void SetIssuerLimitResponse::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& SetIssuerLimitResponse::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.SetIssuerLimitResponse.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetIssuerLimitResponse::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.SetIssuerLimitResponse.signature)
}
inline std::string* SetIssuerLimitResponse::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.SetIssuerLimitResponse.signature)
  return _s;
}
inline const std::string& SetIssuerLimitResponse::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void SetIssuerLimitResponse::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* SetIssuerLimitResponse::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* SetIssuerLimitResponse::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.SetIssuerLimitResponse.signature)
  return _impl_.signature_.Release();
}
inline void SetIssuerLimitResponse::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.SetIssuerLimitResponse.signature)
}

// -------------------------------------------------------------------

// GetIssuerLimitsRequest

// string issuer_public_key = 2;
inline void GetIssuerLimitsRequest::clear_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.ClearToEmpty();
}
inline const std::string& GetIssuerLimitsRequest::issuer_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetIssuerLimitsRequest.issuer_public_key)
  return _internal_issuer_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetIssuerLimitsRequest::set_issuer_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.GetIssuerLimitsRequest.issuer_public_key)
}
inline std::string* GetIssuerLimitsRequest::mutable_issuer_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer_public_key();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetIssuerLimitsRequest.issuer_public_key)
  return _s;
}
inline const std::string& GetIssuerLimitsRequest::_internal_issuer_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_public_key_.Get();
}
inline void GetIssuerLimitsRequest::_internal_set_issuer_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.Set(value, GetArena());
}
inline std::string* GetIssuerLimitsRequest::_internal_mutable_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_public_key_.Mutable( GetArena());
}
inline std::string* GetIssuerLimitsRequest::release_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.GetIssuerLimitsRequest.issuer_public_key)
  return _impl_.issuer_public_key_.Release();
}
inline void GetIssuerLimitsRequest::set_allocated_issuer_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_public_key_.IsDefault()) {
          _impl_.issuer_public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.GetIssuerLimitsRequest.issuer_public_key)
}

// -------------------------------------------------------------------

// GetIssuerLimitsResponse

// repeated .common.Amount limit = 1;
inline int GetIssuerLimitsResponse::_internal_limit_size() const {
  return _internal_limit().size();
}
inline int GetIssuerLimitsResponse::limit_size() const {
  return _internal_limit_size();
}
inline ::common::Amount* GetIssuerLimitsResponse::mutable_limit(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetIssuerLimitsResponse.limit)
  return _internal_mutable_limit()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::common::Amount>* GetIssuerLimitsResponse::mutable_limit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:authority_api.v1.GetIssuerLimitsResponse.limit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_limit();
}
inline const ::common::Amount& GetIssuerLimitsResponse::limit(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetIssuerLimitsResponse.limit)
  return _internal_limit().Get(index);
}
inline ::common::Amount* GetIssuerLimitsResponse::add_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::common::Amount* _add = _internal_mutable_limit()->Add();
  // @@protoc_insertion_point(field_add:authority_api.v1.GetIssuerLimitsResponse.limit)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::common::Amount>& GetIssuerLimitsResponse::limit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:authority_api.v1.GetIssuerLimitsResponse.limit)
  return _internal_limit();
}
inline const ::google::protobuf::RepeatedPtrField<::common::Amount>&
GetIssuerLimitsResponse::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline ::google::protobuf::RepeatedPtrField<::common::Amount>*
GetIssuerLimitsResponse::_internal_mutable_limit() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.limit_;
}

// string issuer_public_key = 2;
inline void GetIssuerLimitsResponse::clear_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.ClearToEmpty();
}
inline const std::string& GetIssuerLimitsResponse::issuer_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetIssuerLimitsResponse.issuer_public_key)
  return _internal_issuer_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetIssuerLimitsResponse::set_issuer_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.GetIssuerLimitsResponse.issuer_public_key)
}
inline std::string* GetIssuerLimitsResponse::mutable_issuer_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer_public_key();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetIssuerLimitsResponse.issuer_public_key)
  return _s;
}
inline const std::string& GetIssuerLimitsResponse::_internal_issuer_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuer_public_key_.Get();
}
inline void GetIssuerLimitsResponse::_internal_set_issuer_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.Set(value, GetArena());
}
inline std::string* GetIssuerLimitsResponse::_internal_mutable_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.issuer_public_key_.Mutable( GetArena());
}
inline std::string* GetIssuerLimitsResponse::release_issuer_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.GetIssuerLimitsResponse.issuer_public_key)
  return _impl_.issuer_public_key_.Release();
}
inline void GetIssuerLimitsResponse::set_allocated_issuer_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuer_public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_public_key_.IsDefault()) {
          _impl_.issuer_public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.GetIssuerLimitsResponse.issuer_public_key)
}

// -------------------------------------------------------------------

// AuthorizeRequest

// bytes promissory_file = 1;
inline void AuthorizeRequest::clear_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.ClearToEmpty();
}
inline const std::string& AuthorizeRequest::promissory_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.AuthorizeRequest.promissory_file)
  return _internal_promissory_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthorizeRequest::set_promissory_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.AuthorizeRequest.promissory_file)
}
inline std::string* AuthorizeRequest::mutable_promissory_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_promissory_file();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.AuthorizeRequest.promissory_file)
  return _s;
}
inline const std::string& AuthorizeRequest::_internal_promissory_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.promissory_file_.Get();
}
inline void AuthorizeRequest::_internal_set_promissory_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.Set(value, GetArena());
}
inline std::string* AuthorizeRequest::_internal_mutable_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.promissory_file_.Mutable( GetArena());
}
inline std::string* AuthorizeRequest::release_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.AuthorizeRequest.promissory_file)
  return _impl_.promissory_file_.Release();
}
inline void AuthorizeRequest::set_allocated_promissory_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.promissory_file_.IsDefault()) {
          _impl_.promissory_file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.AuthorizeRequest.promissory_file)
}

// -------------------------------------------------------------------

// AuthorizeResponse

// bytes promissory_file = 1;
inline void AuthorizeResponse::clear_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.ClearToEmpty();
}
inline const std::string& AuthorizeResponse::promissory_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.AuthorizeResponse.promissory_file)
  return _internal_promissory_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthorizeResponse::set_promissory_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.AuthorizeResponse.promissory_file)
}
inline std::string* AuthorizeResponse::mutable_promissory_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_promissory_file();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.AuthorizeResponse.promissory_file)
  return _s;
}
inline const std::string& AuthorizeResponse::_internal_promissory_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.promissory_file_.Get();
}
inline void AuthorizeResponse::_internal_set_promissory_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.Set(value, GetArena());
}
inline std::string* AuthorizeResponse::_internal_mutable_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.promissory_file_.Mutable( GetArena());
}
inline std::string* AuthorizeResponse::release_promissory_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.AuthorizeResponse.promissory_file)
  return _impl_.promissory_file_.Release();
}
inline void AuthorizeResponse::set_allocated_promissory_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promissory_file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.promissory_file_.IsDefault()) {
          _impl_.promissory_file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.AuthorizeResponse.promissory_file)
}

// -------------------------------------------------------------------

// GetNetworkInfoRequest

// -------------------------------------------------------------------

// GetNetworkInfoResponse

// string emissary = 1;
inline void GetNetworkInfoResponse::clear_emissary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emissary_.ClearToEmpty();
}
inline const std::string& GetNetworkInfoResponse::emissary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetNetworkInfoResponse.emissary)
  return _internal_emissary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetNetworkInfoResponse::set_emissary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emissary_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.GetNetworkInfoResponse.emissary)
}
inline std::string* GetNetworkInfoResponse::mutable_emissary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_emissary();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetNetworkInfoResponse.emissary)
  return _s;
}
inline const std::string& GetNetworkInfoResponse::_internal_emissary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.emissary_.Get();
}
inline void GetNetworkInfoResponse::_internal_set_emissary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emissary_.Set(value, GetArena());
}
inline std::string* GetNetworkInfoResponse::_internal_mutable_emissary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.emissary_.Mutable( GetArena());
}
inline std::string* GetNetworkInfoResponse::release_emissary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.GetNetworkInfoResponse.emissary)
  return _impl_.emissary_.Release();
}
inline void GetNetworkInfoResponse::set_allocated_emissary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emissary_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.emissary_.IsDefault()) {
          _impl_.emissary_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.GetNetworkInfoResponse.emissary)
}

// string transaction_manager = 2;
inline void GetNetworkInfoResponse::clear_transaction_manager() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_manager_.ClearToEmpty();
}
inline const std::string& GetNetworkInfoResponse::transaction_manager() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetNetworkInfoResponse.transaction_manager)
  return _internal_transaction_manager();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetNetworkInfoResponse::set_transaction_manager(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_manager_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.GetNetworkInfoResponse.transaction_manager)
}
inline std::string* GetNetworkInfoResponse::mutable_transaction_manager() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transaction_manager();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetNetworkInfoResponse.transaction_manager)
  return _s;
}
inline const std::string& GetNetworkInfoResponse::_internal_transaction_manager() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transaction_manager_.Get();
}
inline void GetNetworkInfoResponse::_internal_set_transaction_manager(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_manager_.Set(value, GetArena());
}
inline std::string* GetNetworkInfoResponse::_internal_mutable_transaction_manager() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transaction_manager_.Mutable( GetArena());
}
inline std::string* GetNetworkInfoResponse::release_transaction_manager() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.GetNetworkInfoResponse.transaction_manager)
  return _impl_.transaction_manager_.Release();
}
inline void GetNetworkInfoResponse::set_allocated_transaction_manager(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_manager_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transaction_manager_.IsDefault()) {
          _impl_.transaction_manager_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.GetNetworkInfoResponse.transaction_manager)
}

// -------------------------------------------------------------------

// GetNotaryRequest

// string verifier = 1;
inline void GetNotaryRequest::clear_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.ClearToEmpty();
}
inline const std::string& GetNotaryRequest::verifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetNotaryRequest.verifier)
  return _internal_verifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetNotaryRequest::set_verifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.GetNotaryRequest.verifier)
}
inline std::string* GetNotaryRequest::mutable_verifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifier();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetNotaryRequest.verifier)
  return _s;
}
inline const std::string& GetNotaryRequest::_internal_verifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifier_.Get();
}
inline void GetNotaryRequest::_internal_set_verifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.Set(value, GetArena());
}
inline std::string* GetNotaryRequest::_internal_mutable_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifier_.Mutable( GetArena());
}
inline std::string* GetNotaryRequest::release_verifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.GetNotaryRequest.verifier)
  return _impl_.verifier_.Release();
}
inline void GetNotaryRequest::set_allocated_verifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.verifier_.IsDefault()) {
          _impl_.verifier_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.GetNotaryRequest.verifier)
}

// -------------------------------------------------------------------

// GetNotaryResponse

// bytes signature = 1;
inline void GetNotaryResponse::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& GetNotaryResponse::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.GetNotaryResponse.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetNotaryResponse::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.GetNotaryResponse.signature)
}
inline std::string* GetNotaryResponse::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.GetNotaryResponse.signature)
  return _s;
}
inline const std::string& GetNotaryResponse::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void GetNotaryResponse::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* GetNotaryResponse::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* GetNotaryResponse::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.GetNotaryResponse.signature)
  return _impl_.signature_.Release();
}
inline void GetNotaryResponse::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.GetNotaryResponse.signature)
}

// -------------------------------------------------------------------

// ListGovernedAssetsRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ListGovernedAssetsResponse

// map<string, .common.AssetDenomination> asset_data = 1;
inline int ListGovernedAssetsResponse::_internal_asset_data_size() const {
  return _internal_asset_data().size();
}
inline int ListGovernedAssetsResponse::asset_data_size() const {
  return _internal_asset_data_size();
}
inline const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& ListGovernedAssetsResponse::_internal_asset_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asset_data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& ListGovernedAssetsResponse::asset_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:authority_api.v1.ListGovernedAssetsResponse.asset_data)
  return _internal_asset_data();
}
inline ::google::protobuf::Map<std::string, ::common::AssetDenomination>* ListGovernedAssetsResponse::_internal_mutable_asset_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.asset_data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::common::AssetDenomination>* ListGovernedAssetsResponse::mutable_asset_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:authority_api.v1.ListGovernedAssetsResponse.asset_data)
  return _internal_mutable_asset_data();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetGovernedAssetsRequest

// map<string, .common.AssetDenomination> asset_data = 1;
inline int SetGovernedAssetsRequest::_internal_asset_data_size() const {
  return _internal_asset_data().size();
}
inline int SetGovernedAssetsRequest::asset_data_size() const {
  return _internal_asset_data_size();
}
inline const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& SetGovernedAssetsRequest::_internal_asset_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asset_data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::common::AssetDenomination>& SetGovernedAssetsRequest::asset_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:authority_api.v1.SetGovernedAssetsRequest.asset_data)
  return _internal_asset_data();
}
inline ::google::protobuf::Map<std::string, ::common::AssetDenomination>* SetGovernedAssetsRequest::_internal_mutable_asset_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.asset_data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::common::AssetDenomination>* SetGovernedAssetsRequest::mutable_asset_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:authority_api.v1.SetGovernedAssetsRequest.asset_data)
  return _internal_mutable_asset_data();
}

// -------------------------------------------------------------------

// SetGovernedAssetsResponse

// -------------------------------------------------------------------

// AddAssetRequest

// string currency_code = 1;
inline void AddAssetRequest::clear_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.ClearToEmpty();
}
inline const std::string& AddAssetRequest::currency_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.AddAssetRequest.currency_code)
  return _internal_currency_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddAssetRequest::set_currency_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.AddAssetRequest.currency_code)
}
inline std::string* AddAssetRequest::mutable_currency_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency_code();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.AddAssetRequest.currency_code)
  return _s;
}
inline const std::string& AddAssetRequest::_internal_currency_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_code_.Get();
}
inline void AddAssetRequest::_internal_set_currency_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(value, GetArena());
}
inline std::string* AddAssetRequest::_internal_mutable_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_code_.Mutable( GetArena());
}
inline std::string* AddAssetRequest::release_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.AddAssetRequest.currency_code)
  return _impl_.currency_code_.Release();
}
inline void AddAssetRequest::set_allocated_currency_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_code_.IsDefault()) {
          _impl_.currency_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.AddAssetRequest.currency_code)
}

// .common.AssetDenomination asset_denomination = 2;
inline bool AddAssetRequest::has_asset_denomination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.asset_denomination_ != nullptr);
  return value;
}
inline const ::common::AssetDenomination& AddAssetRequest::_internal_asset_denomination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common::AssetDenomination* p = _impl_.asset_denomination_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::AssetDenomination&>(::common::_AssetDenomination_default_instance_);
}
inline const ::common::AssetDenomination& AddAssetRequest::asset_denomination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.AddAssetRequest.asset_denomination)
  return _internal_asset_denomination();
}
inline void AddAssetRequest::unsafe_arena_set_allocated_asset_denomination(::common::AssetDenomination* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.asset_denomination_);
  }
  _impl_.asset_denomination_ = reinterpret_cast<::common::AssetDenomination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:authority_api.v1.AddAssetRequest.asset_denomination)
}
inline ::common::AssetDenomination* AddAssetRequest::release_asset_denomination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::AssetDenomination* released = _impl_.asset_denomination_;
  _impl_.asset_denomination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::common::AssetDenomination* AddAssetRequest::unsafe_arena_release_asset_denomination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.AddAssetRequest.asset_denomination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common::AssetDenomination* temp = _impl_.asset_denomination_;
  _impl_.asset_denomination_ = nullptr;
  return temp;
}
inline ::common::AssetDenomination* AddAssetRequest::_internal_mutable_asset_denomination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.asset_denomination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common::AssetDenomination>(GetArena());
    _impl_.asset_denomination_ = reinterpret_cast<::common::AssetDenomination*>(p);
  }
  return _impl_.asset_denomination_;
}
inline ::common::AssetDenomination* AddAssetRequest::mutable_asset_denomination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common::AssetDenomination* _msg = _internal_mutable_asset_denomination();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.AddAssetRequest.asset_denomination)
  return _msg;
}
inline void AddAssetRequest::set_allocated_asset_denomination(::common::AssetDenomination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.asset_denomination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.asset_denomination_ = reinterpret_cast<::common::AssetDenomination*>(value);
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.AddAssetRequest.asset_denomination)
}

// -------------------------------------------------------------------

// AddAssetResponse

// -------------------------------------------------------------------

// RemoveAssetRequest

// string currency_code = 1;
inline void RemoveAssetRequest::clear_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.ClearToEmpty();
}
inline const std::string& RemoveAssetRequest::currency_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:authority_api.v1.RemoveAssetRequest.currency_code)
  return _internal_currency_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveAssetRequest::set_currency_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:authority_api.v1.RemoveAssetRequest.currency_code)
}
inline std::string* RemoveAssetRequest::mutable_currency_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency_code();
  // @@protoc_insertion_point(field_mutable:authority_api.v1.RemoveAssetRequest.currency_code)
  return _s;
}
inline const std::string& RemoveAssetRequest::_internal_currency_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_code_.Get();
}
inline void RemoveAssetRequest::_internal_set_currency_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.Set(value, GetArena());
}
inline std::string* RemoveAssetRequest::_internal_mutable_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_code_.Mutable( GetArena());
}
inline std::string* RemoveAssetRequest::release_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:authority_api.v1.RemoveAssetRequest.currency_code)
  return _impl_.currency_code_.Release();
}
inline void RemoveAssetRequest::set_allocated_currency_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_code_.IsDefault()) {
          _impl_.currency_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:authority_api.v1.RemoveAssetRequest.currency_code)
}

// -------------------------------------------------------------------

// RemoveAssetResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace authority_api


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_authority_5fapi_2fv1_2fauthority_2eproto_2epb_2eh
