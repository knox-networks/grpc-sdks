// source: wallet_api/v1/wallet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.wallet_api.v1.ListAssetFilesResponse');
goog.provide('proto.wallet_api.v1.ListAssetFilesResponse.Fund');
goog.provide('proto.wallet_api.v1.ListAssetFilesResponse.Notary');
goog.provide('proto.wallet_api.v1.ListAssetFilesResponse.Promissory');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet_api.v1.ListAssetFilesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wallet_api.v1.ListAssetFilesResponse.repeatedFields_, null);
};
goog.inherits(proto.wallet_api.v1.ListAssetFilesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet_api.v1.ListAssetFilesResponse.displayName = 'proto.wallet_api.v1.ListAssetFilesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet_api.v1.ListAssetFilesResponse.Notary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet_api.v1.ListAssetFilesResponse.Notary.displayName = 'proto.wallet_api.v1.ListAssetFilesResponse.Notary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wallet_api.v1.ListAssetFilesResponse.Promissory.repeatedFields_, null);
};
goog.inherits(proto.wallet_api.v1.ListAssetFilesResponse.Promissory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet_api.v1.ListAssetFilesResponse.Promissory.displayName = 'proto.wallet_api.v1.ListAssetFilesResponse.Promissory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet_api.v1.ListAssetFilesResponse.Fund, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet_api.v1.ListAssetFilesResponse.Fund.displayName = 'proto.wallet_api.v1.ListAssetFilesResponse.Fund';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wallet_api.v1.ListAssetFilesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet_api.v1.ListAssetFilesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fundsList: jspb.Message.toObjectList(msg.getFundsList(),
    proto.wallet_api.v1.ListAssetFilesResponse.Fund.toObject, includeInstance),
    totalOwnedFunds: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse}
 */
proto.wallet_api.v1.ListAssetFilesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet_api.v1.ListAssetFilesResponse;
  return proto.wallet_api.v1.ListAssetFilesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse}
 */
proto.wallet_api.v1.ListAssetFilesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wallet_api.v1.ListAssetFilesResponse.Fund;
      reader.readMessage(value,proto.wallet_api.v1.ListAssetFilesResponse.Fund.deserializeBinaryFromReader);
      msg.addFunds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalOwnedFunds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet_api.v1.ListAssetFilesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFundsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.wallet_api.v1.ListAssetFilesResponse.Fund.serializeBinaryToWriter
    );
  }
  f = message.getTotalOwnedFunds();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet_api.v1.ListAssetFilesResponse.Notary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Notary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Notary}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet_api.v1.ListAssetFilesResponse.Notary;
  return proto.wallet_api.v1.ListAssetFilesResponse.Notary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Notary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Notary}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet_api.v1.ListAssetFilesResponse.Notary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Notary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Notary} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes signature = 2;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature = 2;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Notary} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Notary.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet_api.v1.ListAssetFilesResponse.Promissory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    decimals: jspb.Message.getFieldWithDefault(msg, 6, 0),
    authority: jspb.Message.getFieldWithDefault(msg, 7, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 8, ""),
    issuanceDate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    blockDepth: jspb.Message.getFieldWithDefault(msg, 10, 0),
    authorizationSignature: msg.getAuthorizationSignature_asB64(),
    transferSignature: msg.getTransferSignature_asB64(),
    notariesList: jspb.Message.toObjectList(msg.getNotariesList(),
    proto.wallet_api.v1.ListAssetFilesResponse.Notary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet_api.v1.ListAssetFilesResponse.Promissory;
  return proto.wallet_api.v1.ListAssetFilesResponse.Promissory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDecimals(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuanceDate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockDepth(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAuthorizationSignature(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransferSignature(value);
      break;
    case 13:
      var value = new proto.wallet_api.v1.ListAssetFilesResponse.Notary;
      reader.readMessage(value,proto.wallet_api.v1.ListAssetFilesResponse.Notary.deserializeBinaryFromReader);
      msg.addNotaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet_api.v1.ListAssetFilesResponse.Promissory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIssuanceDate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBlockDepth();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getAuthorizationSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getTransferSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getNotariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.wallet_api.v1.ListAssetFilesResponse.Notary.serializeBinaryToWriter
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string currency = 4;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 amount = 5;
 * @return {number}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 decimals = 6;
 * @return {number}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string authority = 7;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string issuer = 8;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string issuance_date = 9;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getIssuanceDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setIssuanceDate = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint32 block_depth = 10;
 * @return {number}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getBlockDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setBlockDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bytes authorization_signature = 11;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getAuthorizationSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes authorization_signature = 11;
 * This is a type-conversion wrapper around `getAuthorizationSignature()`
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getAuthorizationSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAuthorizationSignature()));
};


/**
 * optional bytes authorization_signature = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAuthorizationSignature()`
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getAuthorizationSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAuthorizationSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setAuthorizationSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional bytes transfer_signature = 12;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getTransferSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes transfer_signature = 12;
 * This is a type-conversion wrapper around `getTransferSignature()`
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getTransferSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransferSignature()));
};


/**
 * optional bytes transfer_signature = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransferSignature()`
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getTransferSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransferSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setTransferSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * repeated Notary notaries = 13;
 * @return {!Array<!proto.wallet_api.v1.ListAssetFilesResponse.Notary>}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.getNotariesList = function() {
  return /** @type{!Array<!proto.wallet_api.v1.ListAssetFilesResponse.Notary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wallet_api.v1.ListAssetFilesResponse.Notary, 13));
};


/**
 * @param {!Array<!proto.wallet_api.v1.ListAssetFilesResponse.Notary>} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
*/
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.setNotariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Notary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Notary}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.addNotaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.wallet_api.v1.ListAssetFilesResponse.Notary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Promissory} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Promissory.prototype.clearNotariesList = function() {
  return this.setNotariesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet_api.v1.ListAssetFilesResponse.Fund.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.toObject = function(includeInstance, msg) {
  var f, obj = {
    walletId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    promissory: (f = msg.getPromissory()) && proto.wallet_api.v1.ListAssetFilesResponse.Promissory.toObject(includeInstance, f),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet_api.v1.ListAssetFilesResponse.Fund;
  return proto.wallet_api.v1.ListAssetFilesResponse.Fund.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletId(value);
      break;
    case 2:
      var value = new proto.wallet_api.v1.ListAssetFilesResponse.Promissory;
      reader.readMessage(value,proto.wallet_api.v1.ListAssetFilesResponse.Promissory.deserializeBinaryFromReader);
      msg.setPromissory(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet_api.v1.ListAssetFilesResponse.Fund.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWalletId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPromissory();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wallet_api.v1.ListAssetFilesResponse.Promissory.serializeBinaryToWriter
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string wallet_id = 1;
 * @return {string}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.getWalletId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.setWalletId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Promissory promissory = 2;
 * @return {?proto.wallet_api.v1.ListAssetFilesResponse.Promissory}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.getPromissory = function() {
  return /** @type{?proto.wallet_api.v1.ListAssetFilesResponse.Promissory} */ (
    jspb.Message.getWrapperField(this, proto.wallet_api.v1.ListAssetFilesResponse.Promissory, 2));
};


/**
 * @param {?proto.wallet_api.v1.ListAssetFilesResponse.Promissory|undefined} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} returns this
*/
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.setPromissory = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.clearPromissory = function() {
  return this.setPromissory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.hasPromissory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool reserved = 3;
 * @return {boolean}
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.Fund.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated Fund funds = 1;
 * @return {!Array<!proto.wallet_api.v1.ListAssetFilesResponse.Fund>}
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.getFundsList = function() {
  return /** @type{!Array<!proto.wallet_api.v1.ListAssetFilesResponse.Fund>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wallet_api.v1.ListAssetFilesResponse.Fund, 1));
};


/**
 * @param {!Array<!proto.wallet_api.v1.ListAssetFilesResponse.Fund>} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse} returns this
*/
proto.wallet_api.v1.ListAssetFilesResponse.prototype.setFundsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wallet_api.v1.ListAssetFilesResponse.Fund=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse.Fund}
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.addFunds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wallet_api.v1.ListAssetFilesResponse.Fund, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.clearFundsList = function() {
  return this.setFundsList([]);
};


/**
 * optional uint32 total_owned_funds = 2;
 * @return {number}
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.getTotalOwnedFunds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wallet_api.v1.ListAssetFilesResponse} returns this
 */
proto.wallet_api.v1.ListAssetFilesResponse.prototype.setTotalOwnedFunds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


