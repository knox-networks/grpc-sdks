// source: wallet_api/v1/wallet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.wallet_api.v1.GetTransactionDetailResponse');
goog.provide('proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.common.Amount');
goog.require('proto.common.Commitment');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet_api.v1.GetTransactionDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wallet_api.v1.GetTransactionDetailResponse.repeatedFields_, null);
};
goog.inherits(proto.wallet_api.v1.GetTransactionDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet_api.v1.GetTransactionDetailResponse.displayName = 'proto.wallet_api.v1.GetTransactionDetailResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.displayName = 'proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wallet_api.v1.GetTransactionDetailResponse.repeatedFields_ = [2,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet_api.v1.GetTransactionDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.GetTransactionDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commitmentsList: jspb.Message.toObjectList(msg.getCommitmentsList(),
    proto.common.Commitment.toObject, includeInstance),
    created: jspb.Message.getFieldWithDefault(msg, 4, ""),
    hashPresenter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hash: msg.getHash_asB64(),
    expiration: jspb.Message.getFieldWithDefault(msg, 7, ""),
    memo: jspb.Message.getFieldWithDefault(msg, 8, ""),
    logList: jspb.Message.toObjectList(msg.getLogList(),
    proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet_api.v1.GetTransactionDetailResponse;
  return proto.wallet_api.v1.GetTransactionDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractType(value);
      break;
    case 2:
      var value = new proto.common.Commitment;
      reader.readMessage(value,proto.common.Commitment.deserializeBinaryFromReader);
      msg.addCommitments(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashPresenter(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiration(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    case 9:
      var value = new proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry;
      reader.readMessage(value,proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.deserializeBinaryFromReader);
      msg.addLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet_api.v1.GetTransactionDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.GetTransactionDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommitmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.common.Commitment.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHashPresenter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getExpiration();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: (f = msg.getAmount()) && proto.common.Amount.toObject(includeInstance, f),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 5, ""),
    state: jspb.Message.getFieldWithDefault(msg, 6, ""),
    event: jspb.Message.getFieldWithDefault(msg, 7, ""),
    promissoryId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry;
  return proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = new proto.common.Amount;
      reader.readMessage(value,proto.common.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromissoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.common.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPromissoryId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.Amount amount = 3;
 * @return {?proto.common.Amount}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getAmount = function() {
  return /** @type{?proto.common.Amount} */ (
    jspb.Message.getWrapperField(this, proto.common.Amount, 3));
};


/**
 * @param {?proto.common.Amount|undefined} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
*/
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string kind = 5;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string state = 6;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string event = 7;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setEvent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string promissory_id = 8;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.getPromissoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry.prototype.setPromissoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string contract_type = 1;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getContractType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setContractType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated common.Commitment commitments = 2;
 * @return {!Array<!proto.common.Commitment>}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getCommitmentsList = function() {
  return /** @type{!Array<!proto.common.Commitment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.common.Commitment, 2));
};


/**
 * @param {!Array<!proto.common.Commitment>} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
*/
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setCommitmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.common.Commitment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.Commitment}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.addCommitments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.common.Commitment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.clearCommitmentsList = function() {
  return this.setCommitmentsList([]);
};


/**
 * optional string created = 4;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string hash_presenter = 5;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getHashPresenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setHashPresenter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes hash = 6;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes hash = 6;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string expiration = 7;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getExpiration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setExpiration = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string memo = 8;
 * @return {string}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setMemo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated LogEntry log = 9;
 * @return {!Array<!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry>}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.getLogList = function() {
  return /** @type{!Array<!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry, 9));
};


/**
 * @param {!Array<!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry>} value
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
*/
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.setLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry}
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.addLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.wallet_api.v1.GetTransactionDetailResponse.LogEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wallet_api.v1.GetTransactionDetailResponse} returns this
 */
proto.wallet_api.v1.GetTransactionDetailResponse.prototype.clearLogList = function() {
  return this.setLogList([]);
};


